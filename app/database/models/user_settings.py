"""
–ú–æ–¥–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
from sqlalchemy import Column, String, Boolean, DateTime, ForeignKey
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from datetime import datetime
import uuid

from app.database.base import Base

class UserSettings(Base):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    __tablename__ = "user_settings"
    
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    user_id = Column(UUID(as_uuid=True), ForeignKey("users.id"), nullable=False, unique=True)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    default_aspect_ratio = Column(String(10), nullable=False, default="1:1")  # 1:1, 3:4, 4:3, 9:16, 16:9
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
    auto_enhance_prompts = Column(Boolean, nullable=False, default=True)  # –ê–≤—Ç–æ—É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤ —á–µ—Ä–µ–∑ GPT
    language_preference = Column(String(5), nullable=False, default="ru")  # ru, en
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    show_technical_details = Column(Boolean, nullable=False, default=False)  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏
    quick_generation_mode = Column(Boolean, nullable=False, default=False)  # –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ –¥–æ–ø. –º–µ–Ω—é
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    created_at = Column(DateTime, nullable=False, default=datetime.utcnow)
    updated_at = Column(DateTime, nullable=False, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    # –°–≤—è–∑–∏
    user = relationship("User", back_populates="settings")
    
    def __repr__(self):
        return f"<UserSettings(user_id={self.user_id}, aspect_ratio={self.default_aspect_ratio})>"
    
    @classmethod
    def get_default_settings(cls) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        return {
            "default_aspect_ratio": "1:1",
            "auto_enhance_prompts": True,
            "language_preference": "ru",
            "show_technical_details": False,
            "quick_generation_mode": False
        }
    
    @classmethod
    def get_aspect_ratio_options(cls) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω"""
        return {
            "1:1": {"name": "üî≤ –ö–≤–∞–¥—Ä–∞—Ç", "ratio": 1.0, "description": "Instagram, –ø—Ä–æ—Ñ–∏–ª–∏"},
            "3:4": {"name": "üì± –ü–æ—Ä—Ç—Ä–µ—Ç", "ratio": 0.75, "description": "–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ, –ø–æ—Ä—Ç—Ä–µ—Ç—ã"},
            "4:3": {"name": "üì∑ –ê–ª—å–±–æ–º–Ω–∞—è", "ratio": 1.33, "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è"},
            "9:16": {"name": "üì∫ –°—Ç–æ—Ä–∏—Å", "ratio": 0.5625, "description": "TikTok, Instagram Stories"},
            "16:9": {"name": "üé¨ –ö–∏–Ω–æ", "ratio": 1.78, "description": "–®–∏—Ä–æ–∫–æ—ç–∫—Ä–∞–Ω–Ω–∞—è, YouTube"}
        }
    
    def to_dict(self) -> dict:
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Å–ª–æ–≤–∞—Ä—å"""
        return {
            "user_id": str(self.user_id),
            "default_aspect_ratio": self.default_aspect_ratio,
            "auto_enhance_prompts": self.auto_enhance_prompts,
            "language_preference": self.language_preference,
            "show_technical_details": self.show_technical_details,
            "quick_generation_mode": self.quick_generation_mode,
            "created_at": self.created_at.isoformat() if self.created_at else None,
            "updated_at": self.updated_at.isoformat() if self.updated_at else None
        }
