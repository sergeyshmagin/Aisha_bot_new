"""
LEGACY: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ app/handlers/menu/settings_handler.py
–û—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ callback'–∞–º–∏
"""
from datetime import datetime, timedelta
from typing import List, Dict, Any, Optional
from decimal import Decimal

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from app.core.di import get_user_service
from app.core.logger import get_logger
from app.shared.handlers.base_handler import BaseHandler
from app.shared.decorators.auth_decorators import require_user

logger = get_logger(__name__)
router = Router()


class BalanceHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º"""
    
    def __init__(self):
        super().__init__()
        # –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–ø–∞–∫–µ—Ç—ã –º–æ–Ω–µ—Ç)
        self.topup_packages = [
            {"amount": 150, "price_kzt": 1500, "price_rub": 300, "bonus": 0, "popular": False},
            {"amount": 250, "price_kzt": 2500, "price_rub": 500, "bonus": 25, "popular": True},
            {"amount": 500, "price_kzt": 5000, "price_rub": 1000, "bonus": 70, "popular": False},
            {"amount": 1000, "price_kzt": 10000, "price_rub": 2000, "bonus": 200, "popular": False},
        ]
    
    @require_user()
    async def show_balance_info(
        self, 
        callback: CallbackQuery, 
        state: FSMContext,
        user=None
    ):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
            async with get_user_service() as user_service:
                current_balance = await user_service.get_user_balance(user.id)
            
            text = f"""üí∞ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ</b>

üíé <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> {current_balance:.0f} –º–æ–Ω–µ—Ç

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç</b>
‚Ä¢ –°–µ–≥–æ–¥–Ω—è: 25 –º–æ–Ω–µ—Ç
‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: 180 –º–æ–Ω–µ—Ç  
‚Ä¢ –ó–∞ –º–µ—Å—è—Ü: 650 –º–æ–Ω–µ—Ç

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚Ä¢ –ü–æ–ø–æ–ª–Ω—è–π—Ç–µ –±–∞–ª–∞–Ω—Å –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –±–æ–Ω—É—Å–æ–≤
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –∑–∞—Ä–∞–Ω–µ–µ"""

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        callback_data="profile_topup_balance"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥",
                        callback_data="profile_menu"
                    )
                ]
            ])
            
            await self.safe_edit_message(
                callback=callback,
                text=text,
                reply_markup=keyboard,
                parse_mode="HTML"
            )
            
            await callback.answer()
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    @require_user()
    async def show_topup_menu(
        self, 
        callback: CallbackQuery, 
        state: FSMContext,
        user=None
    ):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            async with get_user_service() as user_service:
                current_balance = await user_service.get_user_balance(user.id)
            
            text = f"""üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance:.0f} –º–æ–Ω–µ—Ç

<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b>

üí° <i>–ß–µ–º –±–æ–ª—å—à–µ –ø–∞–∫–µ—Ç, —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ –±–æ–Ω—É—Å!</i>"""
            
            buttons = []
            for i, package in enumerate(self.topup_packages):
                button_text = f"{package['amount']} –º–æ–Ω–µ—Ç"
                if package['bonus'] > 0:
                    button_text += f" (+{package['bonus']} –±–æ–Ω—É—Å)"
                
                if package['popular']:
                    button_text = f"‚≠ê {button_text}"
                
                button_text += f" - {package['price_kzt']} ‚Ç∏ / {package['price_rub']} ‚ÇΩ"
                
                buttons.append([
                    InlineKeyboardButton(
                        text=button_text,
                        callback_data=f"topup_package_{i}"
                    )
                ])
            
            buttons.append([
                InlineKeyboardButton(
                    text="üîô –ö –±–∞–ª–∞–Ω—Å—É",
                    callback_data="profile_balance_info"
                )
            ])
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
            
            await self.safe_edit_message(
                callback=callback,
                text=text,
                reply_markup=keyboard,
                parse_mode="HTML"
            )
            
            await callback.answer()
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    async def show_payment_method(self, callback: CallbackQuery, package_id: int):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞"""
        try:
            if package_id >= len(self.topup_packages):
                await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞–∫–µ—Ç", show_alert=True)
                return
            
            package = self.topup_packages[package_id]
            
            text = self._build_payment_text(package)
            keyboard = self._build_payment_keyboard(package_id)
            
            await callback.message.edit_text(
                text=text,
                reply_markup=keyboard,
                parse_mode="HTML"
            )
            
            await callback.answer()
            logger.info(f"–ü–æ–∫–∞–∑–∞–Ω—ã —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø–∞–∫–µ—Ç–∞ {package['amount']} –º–æ–Ω–µ—Ç")
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    async def _get_spending_info(self, user) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–∞—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        # –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        return {
            'today_spent': 25,
            'week_spent': 180,
            'month_spent': 650,
            'total_spent': 2340,
            'average_daily': 15,
            'favorite_feature': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
        }
    
    def _build_balance_info_text(self, balance: float, spending: Dict[str, Any]) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ"""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞
        if balance >= 200:
            status_emoji = "üü¢"
            status_text = "–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å"
        elif balance >= 100:
            status_emoji = "üü°"
            status_text = "–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å"
        elif balance >= 50:
            status_emoji = "üü†"
            status_text = "–ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å"
        else:
            status_emoji = "üî¥"
            status_text = "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π"
        
        text = f"""üí∞ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ</b>

{status_emoji} <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> {balance:.0f} –º–æ–Ω–µ—Ç
<i>{status_text}</i>

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç</b>
‚Ä¢ –°–µ–≥–æ–¥–Ω—è: {spending['today_spent']} –º–æ–Ω–µ—Ç
‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: {spending['week_spent']} –º–æ–Ω–µ—Ç  
‚Ä¢ –ó–∞ –º–µ—Å—è—Ü: {spending['month_spent']} –º–æ–Ω–µ—Ç
‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {spending['total_spent']} –º–æ–Ω–µ—Ç

üìà <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b>
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: {spending['average_daily']} –º–æ–Ω–µ—Ç
‚Ä¢ –õ—é–±–∏–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è: {spending['favorite_feature']}

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —ç–∫–æ–Ω–æ–º–∏–∏:</b>
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∞–≤–∞—Ç–∞—Ä—ã –ø–∞–∫–µ—Ç–∞–º–∏ (—ç–∫–æ–Ω–æ–º–∏—è –¥–æ 20%)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –≤–º–µ—Å—Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞—Ä–∞–Ω–µ–µ"""

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é
        if balance < 100:
            text += f"\n\n‚ö° <b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</b> –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
            
        return text
    
    def _build_balance_info_keyboard(self) -> InlineKeyboardMarkup:
        """–°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    callback_data="profile_topup_balance"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π",
                    callback_data="balance_history"
                ),
                InlineKeyboardButton(
                    text="üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
                    callback_data="balance_analytics"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="profile_menu"
                )
            ]
        ])
    
    def _build_topup_text(self, current_balance: float) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
        return f"""üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance:.0f} –º–æ–Ω–µ—Ç

<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b>

üí° <i>–ß–µ–º –±–æ–ª—å—à–µ –ø–∞–∫–µ—Ç, —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ –±–æ–Ω—É—Å!</i>"""
    
    def _build_topup_keyboard(self) -> InlineKeyboardMarkup:
        """–°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
        buttons = []
        
        for i, package in enumerate(self.topup_packages):
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            button_text = f"{package['amount']} –º–æ–Ω–µ—Ç"
            if package['bonus'] > 0:
                button_text += f" (+{package['bonus']} –±–æ–Ω—É—Å)"
            
            if package['popular']:
                button_text = f"‚≠ê {button_text}"
            
            button_text += f" - {package['price']} ‚Ç∏"
            
            buttons.append([
                InlineKeyboardButton(
                    text=button_text,
                    callback_data=f"topup_package_{i}"
                )
            ])
        
        # –ö–Ω–æ–ø–∫–∞ "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
        buttons.append([
            InlineKeyboardButton(
                text="üí¨ –î—Ä—É–≥–∞—è —Å—É–º–º–∞",
                callback_data="topup_custom"
            )
        ])
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        buttons.append([
            InlineKeyboardButton(
                text="üîô –ö –±–∞–ª–∞–Ω—Å—É",
                callback_data="profile_balance_info"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    def _build_payment_text(self, package: Dict) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
        total_credits = package['amount'] + package['bonus']
        
        text = f"""üí≥ <b>–û–ø–ª–∞—Ç–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>

üì¶ <b>–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–∞–∫–µ—Ç:</b>
‚Ä¢ {package['amount']} –º–æ–Ω–µ—Ç"""
        
        if package['bonus'] > 0:
            text += f"\n‚Ä¢ +{package['bonus']} –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç"
            
        text += f"""
‚Ä¢ –ò—Ç–æ–≥–æ: {total_credits} –º–æ–Ω–µ—Ç
‚Ä¢ –ö –æ–ø–ª–∞—Ç–µ: {package['price_kzt']} ‚Ç∏ / {package['price_rub']} ‚ÇΩ

<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b>"""
        
        return text
    
    def _build_payment_keyboard(self, package_id: int) -> InlineKeyboardMarkup:
        """–°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
                    callback_data=f"pay_card_{package_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì± Kaspi Pay",
                    callback_data=f"pay_kaspi_{package_id}"
                ),
                InlineKeyboardButton(
                    text="üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥",
                    callback_data=f"pay_bank_{package_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞",
                    callback_data=f"pay_crypto_{package_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ö –ø–∞–∫–µ—Ç–∞–º",
                    callback_data="profile_topup_balance"
                )
            ]
        ])


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
balance_handler = BalanceHandler()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@router.callback_query(F.data == "profile_balance_info")
async def show_balance_info_callback(callback: CallbackQuery, state: FSMContext):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ"""
    await balance_handler.show_balance_info(callback, state)

@router.callback_query(F.data == "profile_topup_balance")
async def show_topup_menu_callback(callback: CallbackQuery, state: FSMContext):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
    await balance_handler.show_topup_menu(callback, state)

@router.callback_query(F.data.startswith("topup_package_"))
async def show_payment_method_callback(callback: CallbackQuery):
    """Callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–∫–µ—Ç–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
    package_id = int(callback.data.split("_")[-1])
    await balance_handler.show_payment_method(callback, package_id)

@router.callback_query(F.data == "topup_custom")
async def show_custom_topup(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã"""
    text = """üí¨ <b>–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞</b>

–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:

üì± <b>Telegram:</b> @aisha_support_bot
üìß <b>Email:</b> support@aibots.kz

<b>–£–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:</b>
‚Ä¢ –ñ–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
‚Ä¢ –í–∞—à Telegram ID: <code>{callback.from_user.id}</code>
‚Ä¢ –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã

‚è±Ô∏è <b>–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:</b> –¥–æ 2 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üíå –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                url="https://t.me/aisha_support_bot"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ö –ø–∞–∫–µ—Ç–∞–º",
                callback_data="profile_topup_balance"
            )
        ]
    ])
    
    await callback.message.edit_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data.startswith("pay_") & ~F.data.startswith("pay_transcription_"))
async def process_payment_method(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (–∏—Å–∫–ª—é—á–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é)"""
    parts = callback.data.split("_")
    method = parts[1]  # card, kaspi, bank, crypto
    package_id = int(parts[2])
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–µ
    if package_id >= len(balance_handler.topup_packages):
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞–∫–µ—Ç", show_alert=True)
        return
        
    package = balance_handler.topup_packages[package_id]
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –æ–ø–ª–∞—Ç–µ
    total_amount = package['amount'] + package['bonus']
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    payment_methods = {
        'card': '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞',
        'kaspi': 'Kaspi Pay', 
        'bank': '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥',
        'crypto': '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'
    }
    method_name = payment_methods.get(method, method)
    
    payment_text = f"""üí≥ <b>–û–ø–ª–∞—Ç–∞ –ø–∞–∫–µ—Ç–∞ {package['amount']} –º–æ–Ω–µ—Ç</b>

üí∞ <b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> 
‚Ä¢ {package['price_kzt']} ‚Ç∏ 
‚Ä¢ {package['price_rub']} ‚ÇΩ

üéÅ <b>–ë–æ–Ω—É—Å:</b> +{package['bonus']} –º–æ–Ω–µ—Ç
üìä <b>–ò—Ç–æ–≥–æ –ø–æ–ª—É—á–∏—Ç–µ:</b> {total_amount} –º–æ–Ω–µ—Ç
üîß <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {method_name}

<b>–î–ª—è –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:</b>

üì± <b>Telegram:</b> @aisha_support_bot
üìß <b>Email:</b> support@aibots.kz

<b>–£–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:</b>
‚Ä¢ –ü–∞–∫–µ—Ç: {package['amount']} –º–æ–Ω–µ—Ç (+{package['bonus']} –±–æ–Ω—É—Å)
‚Ä¢ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {method_name}
‚Ä¢ –í–∞–ª—é—Ç–∞: —Ç–µ–Ω–≥–µ / —Ä—É–±–ª–∏ (–Ω–∞ –≤—ã–±–æ—Ä)
‚Ä¢ –í–∞—à Telegram ID: <code>{callback.from_user.id}</code>

‚è±Ô∏è <b>–í—Ä–µ–º—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:</b> –¥–æ 30 –º–∏–Ω—É—Ç"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üíå –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                url="https://t.me/aisha_support_bot"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ö –ø–∞–∫–µ—Ç–∞–º",
                callback_data="profile_topup_balance"
            )
        ]
    ])
    
    await callback.message.edit_text(
        text=payment_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "balance_history")
async def show_balance_history(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º"""
    # –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    text = """üìä <b>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</b>

<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</b>

<code>üìà +250</code> –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
<i>2024-06-07 14:30</i>

<code>üìâ -60</code> –ü–ª–∞—Ç–Ω–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
<i>2024-06-07 12:15</i>

<code>üìâ -15</code> –ö–æ—Ä–æ—Ç–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è  
<i>2024-06-07 11:45</i>

<code>üìà +150</code> –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞  
<i>2024-06-06 16:20</i>

<code>üìâ -30</code> –ü–ª–∞—Ç–Ω–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
<i>2024-06-06 15:30</i>

üí° <i>–ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ</i>"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üåê –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
                url="https://aibots.kz/profile"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ö –±–∞–ª–∞–Ω—Å—É",
                callback_data="profile_balance_info"
            )
        ]
    ])
    
    await callback.message.edit_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "balance_analytics")
async def show_balance_analytics(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Ç—Ä–∞—Ç"""
    text = """üìà <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–∞—Ç</b>

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º</b>
‚Ä¢ –°–µ–≥–æ–¥–Ω—è: 25 –º–æ–Ω–µ—Ç
‚Ä¢ –í—á–µ—Ä–∞: 40 –º–æ–Ω–µ—Ç  
‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: 180 –º–æ–Ω–µ—Ç
‚Ä¢ –ó–∞ –º–µ—Å—è—Ü: 650 –º–æ–Ω–µ—Ç

üéØ <b>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º</b>
‚Ä¢ üé§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è: 85% (553 –º–æ–Ω–µ—Ç—ã)
‚Ä¢ üéÅ –ü—Ä–æ–º–æ–∫–æ–¥—ã: 10% (65 –º–æ–Ω–µ—Ç)
‚Ä¢ üîÑ –ü—Ä–æ—á–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: 5% (32 –º–æ–Ω–µ—Ç—ã)

üìà <b>–¢—Ä–µ–Ω–¥—ã</b>
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ –≤ –¥–µ–Ω—å: 15 –º–æ–Ω–µ—Ç
‚Ä¢ –ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: 14:00-16:00  
‚Ä¢ –°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å: –ß–µ—Ç–≤–µ—Ä–≥

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b>
‚Ä¢ –ü–æ–ø–æ–ª–Ω—è–π—Ç–µ –±–∞–ª–∞–Ω—Å –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –±–æ–Ω—É—Å–æ–≤
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏
‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –¥–ª–∏–Ω–Ω—ã–µ –∞—É–¥–∏–æ –∑–∞—Ä–∞–Ω–µ–µ"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
                url="https://aibots.kz/analytics"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ö –±–∞–ª–∞–Ω—Å—É",
                callback_data="profile_balance_info"
            )
        ]
    ])
    
    await callback.message.edit_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer() 