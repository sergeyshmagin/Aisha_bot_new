"""
–ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
–ë—ã—Å—Ç—Ä–æ–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
"""
from typing import List, Optional
from datetime import datetime

from app.database.models import ImageGeneration
from app.core.logger import get_logger


class CardFormatter:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    @staticmethod
    def format_image_card_text_fast(
        generation: ImageGeneration, 
        img_idx: int, 
        total_images: int
    ) -> str:
        """–ë—ã—Å—Ç—Ä–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏"""
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞
        avatar_name = generation.avatar.name if generation.avatar and generation.avatar.name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        # –°—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        favorite_status = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º" if getattr(generation, 'is_favorite', False) else ""
        
        # –†–∞–∑–º–µ—Ä
        aspect_ratio = getattr(generation, 'aspect_ratio', '1:1')
        
        # –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞
        text_parts = [
            f"üñºÔ∏è *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {img_idx + 1} –∏–∑ {total_images}*",
            "",
            f"üé≠ *–ê–≤–∞—Ç–∞—Ä:* {avatar_name}",
            f"üìê *–†–∞–∑–º–µ—Ä:* {aspect_ratio}"
        ]
        
        if favorite_status:
            text_parts.append("")
            text_parts.append(favorite_status)
        
        return "\n".join(text_parts)
    
    @staticmethod
    def format_image_card_text_detailed(
        generation: ImageGeneration, 
        img_idx: int, 
        total_images: int
    ) -> str:
        """–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)"""
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ (–ë–ï–ó —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
        avatar_name = generation.avatar.name if generation.avatar and generation.avatar.name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        # –°—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        favorite_status = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º" if getattr(generation, 'is_favorite', False) else ""
        
        # –†–∞–∑–º–µ—Ä (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
        aspect_ratio = getattr(generation, 'aspect_ratio', '1:1')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –ë–ï–ó –ø—Ä–æ–º–ø—Ç–∞ (–µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–º–ø—Ç")
        text_parts = [
            f"üñºÔ∏è *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {img_idx + 1} –∏–∑ {total_images}*",
            "",
            f"üé≠ *–ê–≤–∞—Ç–∞—Ä:* {avatar_name}",
            f"üìê *–†–∞–∑–º–µ—Ä:* {aspect_ratio}"
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        if favorite_status:
            text_parts.append("")
            text_parts.append(favorite_status)
        
        return "\n".join(text_parts) 