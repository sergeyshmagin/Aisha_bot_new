"""
–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
–†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from uuid import UUID

from app.core.logger import get_logger
from .gallery_viewer import GalleryViewer
from .gallery_manager import GalleryManager
from .keyboards import build_search_keyboard
from app.database.models import ImageGeneration

logger = get_logger(__name__)
router = Router()


class GalleryMainHandler:
    """–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    def __init__(self):
        self.gallery_viewer = GalleryViewer()
        self.gallery_manager = GalleryManager()


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
gallery_handler = GalleryMainHandler()

# ==================== –û–°–ù–û–í–ù–´–ï –†–û–£–¢–´ ====================

@router.callback_query(F.data == "my_gallery")
async def handle_gallery_main(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–∞–ª–µ—Ä–µ–∏"""
    gallery_viewer = GalleryViewer()
    await gallery_viewer.show_gallery_main(callback, state)

@router.callback_query(F.data == "gallery_all")
async def handle_gallery_all(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –≥–∞–ª–µ—Ä–µ–µ"""
    logger.info(f"üñºÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ callback gallery_all –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    gallery_viewer = GalleryViewer()
    await gallery_viewer.show_gallery_main(callback, state)

@router.callback_query(F.data.startswith("my_gallery_return:"))
async def handle_gallery_return(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–∞–ª–µ—Ä–µ–µ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º generation_id –∏–∑ callback_data
        data_parts = callback.data.split(":")
        generation_id = UUID(data_parts[1])
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        gallery_viewer = GalleryViewer()
        user = await gallery_viewer.get_user_from_callback(callback)
        if not user:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        images = await gallery_viewer._get_user_completed_images(user.id)
        
        if not images:
            await gallery_viewer._show_empty_gallery_message(callback)
            return
        
        # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å –Ω—É–∂–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        target_index = 0
        for i, img in enumerate(images):
            if img.id == generation_id:
                target_index = i
                break
        
        logger.info(f"–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–∞–ª–µ—Ä–µ–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.telegram_id}, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {generation_id}, –∏–Ω–¥–µ–∫—Å {target_index}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é —Å –Ω—É–∂–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º
        await gallery_viewer.show_gallery_main(callback, state, user=user, start_index=target_index)
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–∞–ª–µ—Ä–µ–µ: {e}")
        # Fallback –Ω–∞ –æ–±—ã—á–Ω—É—é –≥–∞–ª–µ—Ä–µ—é
        await handle_gallery_main(callback, state)

@router.callback_query(F.data.startswith("gallery_image_prev:"))
async def handle_gallery_prev(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    gallery_viewer = GalleryViewer()
    await gallery_viewer.handle_image_navigation(callback, "prev")

@router.callback_query(F.data.startswith("gallery_image_next:"))
async def handle_gallery_next(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    gallery_viewer = GalleryViewer()
    await gallery_viewer.handle_image_navigation(callback, "next")

# ==================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ====================

@router.callback_query(F.data.startswith("gallery_full_prompt:"))
async def handle_gallery_full_prompt(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
    from app.utils.prompt_display import prompt_display_service
    await prompt_display_service.show_full_prompt(callback, return_callback="my_gallery")

@router.callback_query(F.data.startswith("gallery_toggle_favorite:"))
async def handle_gallery_toggle_favorite(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
    gallery_manager = GalleryManager()
    await gallery_manager.toggle_favorite(callback)

@router.callback_query(F.data.startswith("gallery_favorite:"))
async def handle_gallery_favorite(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–Ω–æ–≤—ã–π callback)"""
    gallery_manager = GalleryManager()
    await gallery_manager.toggle_favorite(callback)

@router.callback_query(F.data.startswith("gallery_delete:"))
async def handle_gallery_delete(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    gallery_manager = GalleryManager()
    await gallery_manager.request_delete_confirmation(callback)

@router.callback_query(F.data.startswith("gallery_delete_confirm:"))
async def handle_gallery_delete_confirm(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    gallery_manager = GalleryManager()
    await gallery_manager.deletion_manager.delete_image(callback)

@router.callback_query(F.data.startswith("gallery_regenerate:"))
async def handle_gallery_regenerate(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    gallery_manager = GalleryManager()
    await gallery_manager.regenerate_image(callback)

# ==================== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ====================

@router.callback_query(F.data == "gallery_stats")
async def handle_gallery_stats(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–∞–ª–µ—Ä–µ–∏"""
    logger.info(f"üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ callback gallery_stats –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    from .management.stats import GalleryStatsManager
    stats_manager = GalleryStatsManager()
    await stats_manager.show_gallery_stats(callback)

# ==================== –ü–û–ò–°–ö –ò –§–ò–õ–¨–¢–†–´ ====================

@router.callback_query(F.data == "gallery_search")
async def handle_gallery_search(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –≤ –≥–∞–ª–µ—Ä–µ–µ"""
    
    text = """üîç <b>–ü–æ–∏—Å–∫ –≤ –≥–∞–ª–µ—Ä–µ–µ</b>

üìÇ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</b>

‚Ä¢ üìÖ <b>–ü–æ –¥–∞—Ç–µ</b> - –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
‚Ä¢ üé≠ <b>–ü–æ –∞–≤–∞—Ç–∞—Ä—É</b> - –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞  
‚Ä¢ üìù <b>–ü–æ –ø—Ä–æ–º–ø—Ç—É</b> - –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É –ø—Ä–æ–º–ø—Ç–∞
‚Ä¢ üíõ <b>–ò–∑–±—Ä–∞–Ω–Ω—ã–µ</b> - —Ç–æ–ª—å–∫–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

üí° <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:</b>"""
    
    keyboard = build_search_keyboard()
    
    await callback.message.edit_text(
        text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )

# ==================== –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –§–ò–õ–¨–¢–†–û–í ====================

@router.callback_query(F.data == "gallery_filters")
async def handle_gallery_filters(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏"""
    logger.info(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ callback gallery_filters –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    from .filter_handler import gallery_filter_handler
    await gallery_filter_handler.show_filter_menu(callback, state)

@router.callback_query(F.data == "gallery_filter_date")
async def handle_filter_date(callback: CallbackQuery):
    """–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
    await callback.answer("üöß –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)

@router.callback_query(F.data == "gallery_filter_avatar")
async def handle_filter_avatar(callback: CallbackQuery):
    """–§–∏–ª—å—Ç—Ä –ø–æ –∞–≤–∞—Ç–∞—Ä—É - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
    await callback.answer("üöß –§–∏–ª—å—Ç—Ä –ø–æ –∞–≤–∞—Ç–∞—Ä—É –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)

@router.callback_query(F.data == "gallery_filter_prompt")
async def handle_filter_prompt(callback: CallbackQuery):
    """–§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ–º–ø—Ç—É - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
    await callback.answer("üöß –ü–æ–∏—Å–∫ –ø–æ –ø—Ä–æ–º–ø—Ç—É –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)

@router.callback_query(F.data == "gallery_filter_favorites")
async def handle_filter_favorites(callback: CallbackQuery):
    """–§–∏–ª—å—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
    await callback.answer("üöß –§–∏–ª—å—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)

# ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –†–û–£–¢–´ ====================

@router.callback_query(F.data == "noop")
async def handle_noop(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—É—Å—Ç—ã—Ö callback'–æ–≤"""
    await callback.answer()

@router.callback_query(F.data == "gallery_main")
async def handle_gallery_main_new(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback gallery_main (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫ my_gallery)"""
    logger.info(f"üñºÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ callback gallery_main –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á—Ç–æ –∏ –¥–ª—è my_gallery
    await handle_gallery_main(callback, state)

@router.callback_query(F.data.startswith("generation_status:"))
async def handle_generation_status(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º generation_id –∏–∑ callback_data
        generation_id = callback.data.split(":")[1]
        logger.info(f"üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ {generation_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from app.shared.handlers.base_handler import BaseHandler
        base_handler = BaseHandler()
        user = await base_handler.get_user_from_callback(callback, show_error=False)
        if not user:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑ –ë–î
        from uuid import UUID
        from app.core.database import get_session
        from sqlalchemy import select
        from sqlalchemy.orm import selectinload
        
        async with get_session() as session:
            stmt = (
                select(ImageGeneration)
                .options(selectinload(ImageGeneration.avatar))
                .where(
                    ImageGeneration.id == UUID(generation_id),
                    ImageGeneration.user_id == user.id
                )
            )
            result = await session.execute(stmt)
            generation = result.scalar_one_or_none()
        
        if not generation:
            await callback.answer("‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        status_map = {
            'pending': '‚è≥ –í –æ—á–µ—Ä–µ–¥–∏',
            'processing': 'üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...',
            'completed': '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞',
            'failed': '‚ùå –û—à–∏–±–∫–∞',
            'cancelled': '‚èπÔ∏è –û—Ç–º–µ–Ω–µ–Ω–∞'
        }
        
        status_text = status_map.get(generation.status, generation.status)
        
        if generation.status == 'completed':
            # –ï—Å–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–∞–ª–µ—Ä–µ—é –∫ —ç—Ç–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            await callback.answer("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é...")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            from aiogram.types import CallbackQuery as NewCallbackQuery
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π callback –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–∞–ª–µ—Ä–µ–µ
            new_callback_data = f"my_gallery_return:{generation_id}"
            new_callback = NewCallbackQuery(
                id=callback.id,
                from_user=callback.from_user,
                chat_instance=callback.chat_instance,
                message=callback.message,
                data=new_callback_data
            )
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–∞–ª–µ—Ä–µ–µ —Å –Ω—É–∂–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            from aiogram.fsm.context import FSMContext
            from aiogram.fsm.storage.memory import MemoryStorage
            storage = MemoryStorage()
            state = FSMContext(storage=storage, key=f"user:{user.id}")
            
            await handle_gallery_return(new_callback, state)
            
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
            await callback.answer(f"üìä –°—Ç–∞—Ç—É—Å: {status_text}", show_alert=True)
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞", show_alert=True)

@router.callback_query(F.data == "show_current_image")
async def handle_show_current_image(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' –ø—Ä–∏ fallback"""
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        gallery_viewer = GalleryViewer()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await gallery_viewer.get_user_from_callback(callback, show_error=False)
        if not user:
            await callback.answer("‚ùå –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ –≥–∞–ª–µ—Ä–µ—é", show_alert=True)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –ë–î
        from .gallery_viewer import ultra_gallery_cache
        images = await ultra_gallery_cache.get_user_images(user.id)
        if not images:
            images = await gallery_viewer._get_user_completed_images_ultra_fast(user.id)
            if not images:
                await callback.answer("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
                return
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        current_idx = 0
        try:
            saved_index = await ultra_gallery_cache.get_user_gallery_state(user.id)
            if saved_index is not None and saved_index < len(images):
                current_idx = saved_index
        except:
            pass
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await gallery_viewer._send_image_card_ultra_ultra_fast(callback, images, current_idx, user.id)
        
        logger.info(f"üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id}")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", show_alert=True)