"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
"""
from datetime import datetime, timedelta
from typing import Dict, List, Optional
from uuid import UUID

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from app.core.logger import get_logger
from app.services.gallery_service import gallery_service
from app.handlers.gallery.states import GalleryFilterStates, GalleryFilterData, GalleryData, gallery_state_manager
from .gallery_viewer import GalleryViewer
from .gallery_manager import GalleryManager

logger = get_logger(__name__)

router = Router()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
gallery_viewer = GalleryViewer()
gallery_manager = GalleryManager()


class GalleryFilterHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏"""
    
    def __init__(self):
        self.gallery_viewer = GalleryViewer()
        self.gallery_manager = GalleryManager()
    
    async def show_gallery_with_type_filter(self, callback: CallbackQuery, state: FSMContext, generation_type: str):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–∞–ª–µ—Ä–µ—é —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ —Ç–∏–ø—É"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(generation_type=generation_type)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
            await self.gallery_viewer.show_gallery_main(callback, state)
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥–∞–ª–µ—Ä–µ–∏ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º {generation_type}: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–∞–ª–µ—Ä–µ–∏", show_alert=True)
    
    async def show_date_filter_menu(self, callback: CallbackQuery, state: FSMContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="gallery_date:today"),
                InlineKeyboardButton(text="üìÖ –í—á–µ—Ä–∞", callback_data="gallery_date:yesterday")
            ],
            [
                InlineKeyboardButton(text="üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="gallery_date:week"),
                InlineKeyboardButton(text="üìÖ –ó–∞ –º–µ—Å—è—Ü", callback_data="gallery_date:month")
            ],
            [
                InlineKeyboardButton(text="üìÖ –°–≤–æ–π –ø–µ—Ä–∏–æ–¥", callback_data="gallery_date:custom"),
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="gallery_all")
            ]
        ])
        
        await callback.message.edit_text(
            "üìÖ **–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    
    async def show_filter_menu(self, callback: CallbackQuery, state: FSMContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üé≠ –ü–æ —Ç–∏–ø—É", callback_data="gallery_filter_type"),
                InlineKeyboardButton(text="üìÖ –ü–æ –¥–∞—Ç–µ", callback_data="gallery_filter_date")
            ],
            [
                InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å", callback_data="gallery_reset_filters"),
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="gallery_all")
            ]
        ])
        
        await callback.message.edit_text(
            "üîç **–§–∏–ª—å—Ç—Ä—ã –≥–∞–ª–µ—Ä–µ–∏**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
gallery_filter_handler = GalleryFilterHandler()

# ==================== –§–ò–õ–¨–¢–†–´ –ü–û –¢–ò–ü–£ ====================

@router.callback_query(F.data == "gallery_filter_type")
async def show_type_filter_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üë§ –§–æ—Ç–æ —Å–æ –º–Ω–æ–π", callback_data="gallery_type:avatar"),
            InlineKeyboardButton(text="üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="gallery_type:imagen4")
        ],
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="gallery_all")
        ]
    ])
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:",
        reply_markup=keyboard
    )

@router.callback_query(F.data.startswith("gallery_type:"))
async def handle_type_filter(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –∏–∑ callback_data
        generation_type = callback.data.split(":")[1]
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(generation_type=generation_type)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
        await gallery_filter_handler.show_gallery_with_type_filter(callback, state, generation_type)
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

# ==================== –§–ò–õ–¨–¢–†–´ –ü–û –î–ê–¢–ï ====================

@router.callback_query(F.data == "gallery_filter_date")
async def show_date_filter_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ"""
    await gallery_filter_handler.show_date_filter_menu(callback, state)

@router.callback_query(F.data.startswith("gallery_date:"))
async def handle_date_filter(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–∏–æ–¥ –∏–∑ callback_data
        period = callback.data.split(":")[1]
        
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–∏–æ–¥–∞
        now = datetime.utcnow()
        
        if period == "today":
            start_date = now.replace(hour=0, minute=0, second=0, microsecond=0)
            end_date = now
        elif period == "yesterday":
            start_date = (now - timedelta(days=1)).replace(hour=0, minute=0, second=0, microsecond=0)
            end_date = now.replace(hour=0, minute=0, second=0, microsecond=0)
        elif period == "week":
            start_date = (now - timedelta(days=7)).replace(hour=0, minute=0, second=0, microsecond=0)
            end_date = now
        elif period == "month":
            start_date = (now - timedelta(days=30)).replace(hour=0, minute=0, second=0, microsecond=0)
            end_date = now
        elif period == "custom":
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
            await state.set_state(GalleryFilterStates.waiting_custom_date)
            await callback.message.edit_text(
                "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "–î–î.–ú–ú.–ì–ì–ì–ì-–î–î.–ú–ú.–ì–ì–ì–ì\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: 01.06.2025-15.06.2025",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="my_gallery")]
                ])
            )
            return
        else:
            await callback.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥", show_alert=True)
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(
            start_date=start_date.isoformat(),
            end_date=end_date.isoformat()
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        await gallery_viewer.show_gallery_main(callback, state)
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(GalleryFilterStates.waiting_custom_date)
async def handle_custom_date_input(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        text = callback.message.text
        
        # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—ã
        try:
            start_str, end_str = text.split("-")
            start_date = datetime.strptime(start_str.strip(), "%d.%m.%Y")
            end_date = datetime.strptime(end_str.strip(), "%d.%m.%Y")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∞
            if end_date < start_date:
                await callback.answer("‚ùå –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–π", show_alert=True)
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–∏–æ–¥ –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π
            if (end_date - start_date).days > 90:
                await callback.answer("‚ùå –ü–µ—Ä–∏–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 90 –¥–Ω–µ–π", show_alert=True)
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(
                start_date=start_date.isoformat(),
                end_date=end_date.isoformat()
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
            await gallery_viewer.show_gallery_main(callback, state)
            
        except ValueError:
            await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã", show_alert=True)
            return
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

# ==================== –°–ë–†–û–° –§–ò–õ–¨–¢–†–û–í ====================

@router.callback_query(F.data == "gallery_reset_filters")
async def reset_filters(callback: CallbackQuery, state: FSMContext):
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã"""
    try:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        await state.update_data(
            generation_type=None,
            start_date=None,
            end_date=None
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        await gallery_viewer.show_gallery_main(callback, state)
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True) 