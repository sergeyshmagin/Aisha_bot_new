"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
–í—ã–¥–µ–ª–µ–Ω –∏–∑ app/handlers/avatar/photo_upload.py –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ ‚â§500 —Å—Ç—Ä–æ–∫
"""
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from uuid import UUID
from typing import Dict, List, Optional
import logging

from app.core.di import get_avatar_service, get_user_service
from app.database.models import AvatarPhoto
from app.keyboards.photo_upload import get_photo_upload_keyboard, get_training_start_keyboard
from app.core.config import settings
from .models import PhotoUploadConfig

logger = logging.getLogger(__name__)

# –ö—ç—à –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
user_progress_messages = {}

class ProgressHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    
    def __init__(self):
        self.config = PhotoUploadConfig()
    
    async def show_upload_progress(self, message: Message, photos_count: int, avatar_id: UUID):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
        try:
            user_id = message.from_user.id
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            progress_text = self._get_progress_text(photos_count)
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
            keyboard = get_photo_upload_keyboard(photos_count, self.config.MIN_PHOTOS, self.config.MAX_PHOTOS)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            if user_id in user_progress_messages:
                try:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await user_progress_messages[user_id].edit_text(
                        text=progress_text,
                        reply_markup=keyboard
                    )
                except Exception:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    progress_msg = await message.answer(progress_text, reply_markup=keyboard)
                    user_progress_messages[user_id] = progress_msg
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                progress_msg = await message.answer(progress_text, reply_markup=keyboard)
                user_progress_messages[user_id] = progress_msg
            
            logger.debug(f"–ü–æ–∫–∞–∑–∞–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏: {photos_count}/{self.config.MAX_PHOTOS}")
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")

    async def update_gallery_if_open(self, user_id: int, avatar_id: UUID, photos: List[AvatarPhoto]):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≥–∞–ª–µ—Ä–µ—é –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
            from .gallery_handler import user_gallery_cache
            
            if user_id in user_gallery_cache:
                cache = user_gallery_cache[user_id]
                if cache["avatar_id"] == avatar_id:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à —Å –Ω–æ–≤—ã–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
                    cache["photos"] = photos
                    logger.debug(f"–û–±–Ω–æ–≤–ª–µ–Ω –∫—ç—à –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                    
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–∞–ª–µ—Ä–µ–∏: {e}")

    async def show_training_confirmation(self, callback: CallbackQuery, state: FSMContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–±—É—á–µ–Ω–∏—è"""
        try:
            user_id = callback.from_user.id
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            data = await state.get_data()
            avatar_id_str = data.get("avatar_id")
            avatar_name = data.get("avatar_name", "–ê–≤–∞—Ç–∞—Ä")
            gender = data.get("gender", "unknown")
            training_type = data.get("training_type", "portrait")
            
            if not avatar_id_str:
                await callback.answer("‚ùå –û—à–∏–±–∫–∞: –∞–≤–∞—Ç–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                return
            
            avatar_id = UUID(avatar_id_str)
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ
            async with get_avatar_service() as avatar_service:
                photos, photos_count = await avatar_service.get_avatar_photos(avatar_id)
            
            if photos_count < self.config.MIN_PHOTOS:
                await callback.answer(
                    f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!\n–ú–∏–Ω–∏–º—É–º: {self.config.MIN_PHOTOS}, –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {photos_count}",
                    show_alert=True
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
            async with get_user_service() as user_service:
                user = await user_service.get_user_by_telegram_id(user_id)
                if not user:
                    await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                    return
                
                # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
                user_balance = await user_service.get_user_balance(user.id)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            avatar_cost = settings.AVATAR_CREATION_COST
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
            is_test_mode = getattr(settings, 'AVATAR_TEST_MODE', False)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            gender_text = "üë® –º—É–∂—Å–∫–æ–π" if gender == "male" else "üë© –∂–µ–Ω—Å–∫–∏–π"
            type_text = "üñºÔ∏è –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π" if training_type == "style" else "üé® –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–π"
            
            text = f"""ü¶ã –ü–†–û–í–ï–†–¨–¢–ï –î–ê–ù–ù–´–ï –ê–í–ê–¢–ê–†–ê

üë§ –ò–º—è: {avatar_name}
üöª –ü–æ–ª: {gender_text}
üé® –¢–∏–ø: {type_text}
üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–æ—Ç–æ: {photos_count}

üíé –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤–∞—Ç–∞—Ä–∞: {avatar_cost}
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_balance}"""
            
            if is_test_mode:
                text += "\n\nüß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú - –æ–±—É—á–µ–Ω–∏–µ –∏–º–∏—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç"
            
            text += "\n\n–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä:"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –±–∞–ª–∞–Ω—Å–∞
            if not is_test_mode and user_balance < avatar_cost:
                # –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
                text += f"\n\n‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ: {avatar_cost - user_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤"
                
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                            callback_data="balance_top_up"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚óÄÔ∏è –ö –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ",
                            callback_data="back_to_upload"
                        )
                    ]
                ])
            else:
                # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä",
                            callback_data=f"start_training_{avatar_id}"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚óÄÔ∏è –ö –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ",
                            callback_data="back_to_upload"
                        )
                    ]
                ])
            
            await callback.message.edit_text(
                text=text,
                reply_markup=keyboard
            )
            
            logger.info(f"–ü–æ–∫–∞–∑–∞–Ω —ç–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –∞–≤–∞—Ç–∞—Ä {avatar_id}")
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

    def _get_progress_text(self, photos_count: int) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏"""
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
        progress_percent = min(100, (photos_count / self.config.MAX_PHOTOS) * 100)
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        filled_blocks = int(progress_percent / 10)
        progress_bar = "‚ñà" * filled_blocks + "‚ñë" * (10 - filled_blocks)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if photos_count < self.config.MIN_PHOTOS:
            status = f"‚ùå –ù—É–∂–Ω–æ –µ—â–µ {self.config.MIN_PHOTOS - photos_count} —Ñ–æ—Ç–æ"
            status_emoji = "üì§"
        elif photos_count < self.config.MAX_PHOTOS:
            status = "‚úÖ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ"
            status_emoji = "üéØ"
        else:
            status = "‚úÖ –ú–∞–∫—Å–∏–º—É–º –¥–æ—Å—Ç–∏–≥–Ω—É—Ç! –ì–æ—Ç–æ–≤ –∫ –æ–±—É—á–µ–Ω–∏—é"
            status_emoji = "üöÄ"
        
        return f"""{status_emoji} –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏

üìä {progress_bar} {progress_percent:.0f}%

üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {photos_count}/{self.config.MAX_PHOTOS} —Ñ–æ—Ç–æ
üìã –ú–∏–Ω–∏–º—É–º: {self.config.MIN_PHOTOS} —Ñ–æ—Ç–æ

{status}

üí° –°–æ–≤–µ—Ç: –ë–æ–ª—å—à–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ = –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"""

    def _get_upload_intro_text(self, name: str, training_type: str, gender: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"""
        gender_emoji = "üë®" if gender == "male" else "üë©"
        
        if training_type == "portrait":
            tips = "‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ —Ñ–æ—Ç–æ —Å —Ö–æ—Ä–æ—à–∏–º –æ—Å–≤–µ—â–µ–Ω–∏–µ–º\n‚Ä¢ –†–∞–∑–Ω—ã–µ —É–≥–ª—ã –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ª–∏—Ü–∞\n‚Ä¢ –ë–µ–∑ –≥–æ–ª–æ–≤–Ω—ã—Ö —É–±–æ—Ä–æ–≤ –∏ –æ—á–∫–æ–≤"
        elif training_type == "style":
            tips = "‚Ä¢ –§–æ—Ç–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç\n‚Ä¢ –†–∞–∑–Ω–∞—è –æ–¥–µ–∂–¥–∞ –∏ —Å—Ç–∏–ª–∏\n‚Ä¢ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"
        else:
            tips = "‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ —Å —Ö–æ—Ä–æ—à–∏–º –æ—Å–≤–µ—â–µ–Ω–∏–µ–º\n‚Ä¢ –†–∞–∑–Ω—ã–µ –ø–æ–∑—ã –∏ —É–≥–ª—ã\n‚Ä¢ –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –º–∞—Å–æ–∫"
        
        return f"""üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π

{gender_emoji} –ê–≤–∞—Ç–∞—Ä: {name}
üéØ –¢–∏–ø: {training_type.title()}

üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
{tips}

üìä –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
‚Ä¢ –ú–∏–Ω–∏–º—É–º: {self.config.MIN_PHOTOS} —Ñ–æ—Ç–æ
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {self.config.MAX_PHOTOS} —Ñ–æ—Ç–æ
‚Ä¢ –§–æ—Ä–º–∞—Ç: JPG, PNG (–¥–æ {self.config.MAX_FILE_SIZE // (1024*1024)}MB)
‚Ä¢ –†–∞–∑–º–µ—Ä: –º–∏–Ω–∏–º—É–º {self.config.MIN_RESOLUTION}√ó{self.config.MIN_RESOLUTION} –ø–∏–∫—Å–µ–ª–µ–π

üí° –°–æ–≤–µ—Ç: –ß–µ–º –±–æ–ª—å—à–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

üì§ –ù–∞—á–Ω–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:"""

    def clear_progress_cache(self, user_id: int):
        """–û—á–∏—â–∞–µ—Ç –∫—ç—à –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in user_progress_messages:
            del user_progress_messages[user_id] 