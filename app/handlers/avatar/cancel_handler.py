"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
–†–µ–∞–ª–∏–∑—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–∑ docs/UX_CANCEL_GUIDELINES.md
"""
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from app.core.di import get_user_service, get_avatar_service
from app.core.logger import get_logger
from app.keyboards.main import get_main_menu
from app.handlers.state import AvatarStates

logger = get_logger(__name__)
router = Router()


async def get_cancel_confirmation_dialog(step: str, context: dict = None) -> tuple[str, InlineKeyboardMarkup]:
    """
    –°–æ–∑–¥–∞—ë—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    
    Args:
        step: –≠—Ç–∞–ø —Å–æ–∑–¥–∞–Ω–∏—è (training_type, gender, name, photos, training)
        context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–∏–º—è –∞–≤–∞—Ç–∞—Ä–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ –∏ —Ç.–¥.)
        
    Returns:
        tuple[str, InlineKeyboardMarkup]: –¢–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–∏–∞–ª–æ–≥–∞
    """
    
    if step == "training_type":
        # –ù–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏
        text = """
‚ö†Ô∏è **–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞**

–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é?

–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –æ–±—É—á–µ–Ω–∏—è –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω.
"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å",
                    callback_data="confirm_cancel_creation_simple"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ",
                    callback_data="select_training_type"
                )
            ]
        ])
        
    elif step == "gender":
        # –ß–µ—Ä–Ω–æ–≤–∏–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω
        text = """
‚ö†Ô∏è **–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞**

–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ?

üóëÔ∏è **–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:**
‚Ä¢ –ß–µ—Ä–Ω–æ–≤–∏–∫ –∞–≤–∞—Ç–∞—Ä–∞
‚Ä¢ –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –æ–±—É—á–µ–Ω–∏—è

üí° **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:** –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å—ë",
                    callback_data="confirm_cancel_with_cleanup"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ö –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞",
                    callback_data="select_training_type"
                ),
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
                    callback_data="cancel_cancel"
                )
            ]
        ])
        
    elif step == "photos":
        # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —ç—Ç–∞–ø - –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        avatar_name = context.get("avatar_name", "–ë–µ–∑ –∏–º–µ–Ω–∏") if context else "–ë–µ–∑ –∏–º–µ–Ω–∏"
        photos_count = context.get("photos_count", 0) if context else 0
        
        text = f"""
‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞**

–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ?

üóëÔ∏è **–ë—É–¥–µ—Ç –ë–ï–ó–í–û–ó–í–†–ê–¢–ù–û —É–¥–∞–ª–µ–Ω–æ:**
‚Ä¢ –ê–≤–∞—Ç–∞—Ä "{avatar_name}"
‚Ä¢ {photos_count} –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ –í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è

‚ö†Ô∏è **–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!**

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ
"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫",
                    callback_data="save_as_draft"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å—ë",
                    callback_data="confirm_cancel_with_cleanup"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ",
                    callback_data="cancel_cancel"
                )
            ]
        ])
        
    elif step == "training":
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å - –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
        avatar_name = context.get("avatar_name", "–ê–≤–∞—Ç–∞—Ä") if context else "–ê–≤–∞—Ç–∞—Ä"
        progress = context.get("progress", 0) if context else 0
        time_spent = context.get("time_spent", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") if context else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        text = f"""
‚ö†Ô∏è **–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï**

**–û—Ç–º–µ–Ω–∞ –æ–±—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ "{avatar_name}"**

‚è±Ô∏è **–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:** {progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ
üïê **–ó–∞—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏:** {time_spent}
üí∏ **–ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã** –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã

‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï:**
‚Ä¢ –û—Ç–º–µ–Ω—ë–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –ù–ï–õ–¨–ó–Ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
‚Ä¢ –ü—Ä–∏–¥—ë—Ç—Å—è –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–Ω–æ–≤–æ
‚Ä¢ –í—Ä–µ–º—è –∏ —Ä–µ—Å—É—Ä—Å—ã –Ω–µ –≤–µ—Ä–Ω—É—Ç—å

ü§î **–í—ã –î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–û —É–≤–µ—Ä–µ–Ω—ã?**
"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –î–∞, —è –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–≤–µ—Ä–µ–Ω",
                    callback_data="confirm_cancel_training_final"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
                    callback_data="pause_training"
                ),
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
                    callback_data="cancel_cancel_training"
                )
            ]
        ])
        
    else:
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥
        text = """
‚ö†Ô∏è **–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è**

–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ?
"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å",
                    callback_data="confirm_cancel_simple"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
                    callback_data="cancel_cancel"
                )
            ]
        ])
    
    return text, keyboard


@router.callback_query(F.data == "cancel_avatar_creation")
async def handle_cancel_creation_request(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
        current_state = await state.get_state()
        data = await state.get_data()
        
        if current_state == AvatarStates.selecting_training_type:
            step = "training_type"
            context = None
        elif current_state == AvatarStates.selecting_gender:
            step = "gender"
            context = data
        elif current_state == AvatarStates.uploading_photos:
            step = "photos"
            context = {
                "avatar_name": data.get("avatar_name", "–ë–µ–∑ –∏–º–µ–Ω–∏"),
                "photos_count": data.get("photos_count", 0)
            }
        elif current_state == AvatarStates.training:
            step = "training"
            context = {
                "avatar_name": data.get("avatar_name", "–ê–≤–∞—Ç–∞—Ä"),
                "progress": data.get("training_progress", 0),
                "time_spent": data.get("time_spent", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            }
        else:
            step = "general"
            context = None
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥–∏–∞–ª–æ–≥
        text, keyboard = await get_cancel_confirmation_dialog(step, context)
        
        await callback.message.edit_text(
            text=text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Ç–º–µ–Ω—É –Ω–∞ —ç—Ç–∞–ø–µ: {step}")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –¥–∏–∞–ª–æ–≥–∞ –æ—Ç–º–µ–Ω—ã: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "confirm_cancel_creation_simple")
async def handle_simple_cancel(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ—Å—Ç–∞—è –æ—Ç–º–µ–Ω–∞ –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        await state.clear()
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = get_main_menu()
        
        await callback.message.edit_text(
            text="‚úÖ **–°–æ–∑–¥–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ**\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–º–µ–Ω–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ (–ø—Ä–æ—Å—Ç–∞—è –æ—Ç–º–µ–Ω–∞)")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–º–µ–Ω–µ: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã", show_alert=True)


@router.callback_query(F.data == "confirm_cancel_with_cleanup")
async def handle_cancel_with_cleanup(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Å –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫–∞"""
    try:
        data = await state.get_data()
        avatar_id = data.get("avatar_id")
        avatar_name = data.get("avatar_name", "–∞–≤–∞—Ç–∞—Ä–∞")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        if avatar_id:
            user_telegram_id = callback.from_user.id
            
            async with get_user_service() as user_service:
                user = await user_service.get_user_by_telegram_id(user_telegram_id)
                
                if user:
                    async with get_avatar_service() as avatar_service:
                        success = await avatar_service.delete_avatar_completely(avatar_id)
                        if success:
                            logger.info(f"–ê–≤–∞—Ç–∞—Ä {avatar_id} —É–¥–∞–ª–µ–Ω –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_telegram_id}")
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        text = f"""
üóëÔ∏è **–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ**

–ß–µ—Ä–Ω–æ–≤–∏–∫ "{avatar_name}" –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã.

–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.
"""
        
        keyboard = get_main_menu()
        
        await callback.message.edit_text(
            text=text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–º–µ–Ω–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ —Å –æ—á–∏—Å—Ç–∫–æ–π")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å –æ—á–∏—Å—Ç–∫–æ–π: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã", show_alert=True)


@router.callback_query(F.data == "save_as_draft")
async def handle_save_as_draft(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫"""
    try:
        data = await state.get_data()
        avatar_name = data.get("avatar_name", "–ß–µ—Ä–Ω–æ–≤–∏–∫")
        
        # –í –¥–∞–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        # –ü—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ—Å—Ç–∞–≤–ª—è—è –∞–≤–∞—Ç–∞—Ä –≤ –ë–î
        await state.clear()
        
        text = f"""
üíæ **–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω**

–ê–≤–∞—Ç–∞—Ä "{avatar_name}" —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫.

–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—é —á–µ—Ä–µ–∑ –º–µ–Ω—é "–ú–æ–∏ –∞–≤–∞—Ç–∞—Ä—ã".
"""
        
        keyboard = get_main_menu()
        
        await callback.message.edit_text(
            text=text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} —Å–æ—Ö—Ä–∞–Ω–∏–ª –∞–≤–∞—Ç–∞—Ä –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è", show_alert=True)


@router.callback_query(F.data == "cancel_cancel")
async def handle_cancel_cancel(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –æ—Ç–º–µ–Ω—ã - –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —ç–∫—Ä–∞–Ω—É"""
    try:
        current_state = await state.get_state()
        
        if current_state == AvatarStates.selecting_training_type:
            from app.handlers.avatar.training_type_selection import show_training_type_selection
            await show_training_type_selection(callback, state)
        elif current_state == AvatarStates.selecting_gender:
            from app.handlers.avatar.create import show_gender_selection
            await show_gender_selection(callback, state)
        elif current_state == AvatarStates.uploading_photos:
            from app.handlers.avatar.photo_upload import continue_photo_upload
            await continue_photo_upload(callback, state)
        else:
            # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            from app.handlers.avatar.main import avatar_main_handler
            await avatar_main_handler.show_avatar_menu(callback, state)
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–º–µ–Ω–∏–ª –æ—Ç–º–µ–Ω—É")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ—Ç–º–µ–Ω—ã: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True) 