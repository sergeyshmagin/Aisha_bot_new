"""
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤
–ó–∞–º–µ–Ω–∞ legacy AvatarHandler
"""
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from app.keyboards.avatar_clean import get_avatar_main_menu
from app.texts.avatar import AvatarTexts  
from app.handlers.state import AvatarStates
from app.core.di import get_user_service, get_avatar_service
from app.core.logger import get_logger

logger = get_logger(__name__)
router = Router()

class AvatarMainHandler:
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤"""
    
    def __init__(self):
        self.texts = AvatarTexts()
    
    async def show_avatar_menu(self, callback: CallbackQuery, state: FSMContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤"""
        try:
            # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω—É —Å–µ—Å—Å–∏—é –¥–ª—è –æ–±–æ–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
            async with get_user_service() as user_service:
                user = await user_service.get_user_by_telegram_id(callback.from_user.id)
                
                if not user:
                    await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                    return
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º user_id –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º —Å–µ—Å—Å–∏–∏
                user_id = user.id
                
                # –ü–æ–ª—É—á–∞–µ–º avatar_service –≤ —Ç–æ–π –∂–µ —Å–µ—Å—Å–∏–∏
                async with get_avatar_service() as avatar_service:
                    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ –≥–∞–ª–µ—Ä–µ–µ)
                    user_avatars = await avatar_service.get_user_avatars_with_photos(user_id)
                    avatars_count = len(user_avatars)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.set_state(AvatarStates.menu)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = get_avatar_main_menu(avatars_count)
            text = self.texts.get_main_menu_text(avatars_count)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            if callback.message.photo:
                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ, —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
                try:
                    await callback.message.delete()
                except Exception:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
                
                await callback.message.answer(text, reply_markup=keyboard)
            else:
                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, –ø—Ä–æ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
                await callback.message.edit_text(text, reply_markup=keyboard)
            
            await callback.answer()
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π user_id –≤–º–µ—Å—Ç–æ user.id
            logger.info(f"–ü–æ–∫–∞–∑–∞–Ω–æ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}, –∞–≤–∞—Ç–∞—Ä–æ–≤: {avatars_count}")
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
avatar_main_handler = AvatarMainHandler()

@router.callback_query(F.data == "avatar_menu")
async def show_avatar_menu(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤"""
    await avatar_main_handler.show_avatar_menu(callback, state)

@router.callback_query(F.data == "avatar_help")
async def show_avatar_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ —Å–∏—Å—Ç–µ–º–µ –∞–≤–∞—Ç–∞—Ä–æ–≤"""
    help_text = (
        "üßë‚Äçüé® –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∞–≤–∞—Ç–∞—Ä–∞–º:\n\n"
        "üÜï –°–æ–∑–¥–∞–Ω–∏–µ: –≤—ã–±–æ—Ä —Ç–∏–ø–∞ ‚Üí —Ñ–æ—Ç–æ ‚Üí –æ–±—É—á–µ–Ω–∏–µ\n"
        "üìÅ –ì–∞–ª–µ—Ä–µ—è: –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n"
        "üí° –°–æ–≤–µ—Ç: 10-20 –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–æ–≤"
    )
    await callback.answer(help_text, show_alert=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ create_avatar –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ app/handlers/avatar/create.py
# —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ä–æ—É—Ç–µ—Ä–æ–≤

# –ì–∞–ª–µ—Ä–µ—è –∞–≤–∞—Ç–∞—Ä–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ gallery.py
# –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
__all__ = ["avatar_main_handler", "router"] 