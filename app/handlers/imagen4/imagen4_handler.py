"""
–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ Imagen 4
"""
import logging
from typing import Optional

from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from app.database.models import UserSettings, ImageGeneration, GenerationStatus
from app.shared.handlers.base_handler import BaseHandler
from app.handlers.generation.states import GenerationStates
from app.handlers.generation.keyboards import (
    build_imagen4_menu_keyboard,
    build_imagen4_prompt_keyboard,
    build_imagen4_aspect_ratio_keyboard
)
from app.core.config import settings
from app.services.balance_service import BalanceService
from app.core.di import get_user_service
from app.core.database import get_session
from app.shared.decorators.auth_decorators import require_user
from app.utils.datetime_utils import now_utc
from app.services.generation.imagen4.models import Imagen4Request, AspectRatio, Imagen4GenerationStatus

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
imagen4_router = Router(name="imagen4")


class Imagen4Handler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Imagen 4 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    
    def __init__(self):
        super().__init__()
    
    @require_user()
    async def show_prompt_input(self, callback: CallbackQuery, state: FSMContext, user=None):
        """–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è Imagen 4 (–±–µ–∑ –ª–∏—à–Ω–∏—Ö –º–µ–Ω—é)"""
        try:
            await state.clear()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            async with get_session() as session:
                balance_service = BalanceService(session)
                user_balance = await balance_service.get_balance(user.id)
                
                generation_cost = settings.IMAGEN4_GENERATION_COST
                
                if user_balance < generation_cost:
                    insufficient_text = f"""‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</b>

üíé –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{user_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤</b>
üí∞ –ù—É–∂–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: <b>{generation_cost} –∫—Ä–µ–¥–∏—Ç–æ–≤</b>

–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–æ—Ñ–∏–ª—å" ‚Üí "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"."""
                    
                    try:
                        await callback.message.edit_text(
                            text=insufficient_text,
                            parse_mode="HTML"
                        )
                    except Exception:
                        await callback.message.answer(
                            text=insufficient_text,
                            parse_mode="HTML"
                        )
                    
                    await callback.answer()
                    return
            
            # –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–º–ø—Ç–∞
            prompt_text = f"""üé® <b>Imagen 4 - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b>

üåü <b>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é</b>
‚ö° <b>–í—ã—Å–æ–∫–æ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç Google</b>

üíé <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {user_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤
üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {generation_cost} –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

üìù <b>–û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏:</b>

üí° <b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> "–∫—Ä–∞—Å–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞ –≤ –∫—Ä–∞—Å–Ω–æ–º –ø–ª–∞—Ç—å–µ –Ω–∞ —Ñ–æ–Ω–µ –∑–∞–∫–∞—Ç–∞"

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –¥–µ—Ç–∞–ª—è—Ö
‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞
            keyboard = build_imagen4_prompt_keyboard()
            
            try:
                await callback.message.edit_text(
                    text=prompt_text,
                    reply_markup=keyboard,
                    parse_mode="HTML"
                )
            except Exception:
                await callback.message.answer(
                    text=prompt_text,
                    reply_markup=keyboard,
                    parse_mode="HTML"
                )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞
            await state.set_state(GenerationStates.waiting_for_imagen4_prompt)
            await callback.answer()
            
            logger.info(f"–ü–æ–∫–∞–∑–∞–Ω –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞ Imagen 4 –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id}")
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–º–ø—Ç–∞ Imagen 4: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

    @require_user()
    async def show_imagen4_menu(self, callback: CallbackQuery, state: FSMContext = None, user=None):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é Imagen 4 (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)"""
        # –ï—Å–ª–∏ state –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        if state is None:
            from aiogram.fsm.context import FSMContext
            from aiogram.fsm.storage.base import StorageKey
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π state –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            storage_key = StorageKey(bot_id=callback.bot.id, chat_id=callback.message.chat.id, user_id=callback.from_user.id)
            state = FSMContext(storage=callback.bot.session.storage, key=storage_key)
        
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞
        await self.show_prompt_input(callback, state, user=user)
    
    async def process_prompt(self, message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä aspect ratio"""
        try:
            prompt = message.text.strip()
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞
            if len(prompt) < 3:
                await message.reply(
                    "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ\n\n"
                    "üí° –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)"
                )
                return
            
            if len(prompt) > 2000:
                await message.reply(
                    "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ\n\n"
                    "üí° –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤)"
                )
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(imagen4_prompt=prompt)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
            await self.show_aspect_ratio_selection(message, state)
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–º–ø—Ç–∞: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è")
    
    async def show_aspect_ratio_selection(self, message: Message, state: FSMContext):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω"""
        try:
            text = (
                "üìê <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω</b>\n\n"
                "üî≤ <b>–ö–≤–∞–¥—Ä–∞—Ç (1:1)</b> - Instagram, –ø—Ä–æ—Ñ–∏–ª–∏\n"
                "üì± <b>–ü–æ—Ä—Ç—Ä–µ—Ç (3:4)</b> - –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n"
                "üé¨ <b>–ö–∏–Ω–æ (16:9)</b> - –®–∏—Ä–æ–∫–æ—ç–∫—Ä–∞–Ω–Ω–∞—è\n"
                "üì∫ <b>–°—Ç–æ—Ä–∏—Å (9:16)</b> - TikTok, Instagram Stories\n\n"
                "üí° –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:"
            )
            
            keyboard = build_imagen4_aspect_ratio_keyboard()
            
            await message.answer(
                text=text,
                reply_markup=keyboard,
                parse_mode="HTML"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ aspect ratio
            await state.set_state(GenerationStates.imagen4_selecting_aspect_ratio)
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –≤—ã–±–æ—Ä–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    
    async def process_aspect_ratio_selection(self, callback: CallbackQuery, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é"""
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º aspect ratio –∏–∑ callback
            callback_parts = callback.data.split(":")
            if len(callback_parts) < 3:
                await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
                return
            
            aspect_ratio = ":".join(callback_parts[1:])  # "imagen4_aspect_ratio:1:1" -> "1:1"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
            valid_options = UserSettings.get_aspect_ratio_options()
            if aspect_ratio not in valid_options:
                await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω", show_alert=True)
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            data = await state.get_data()
            prompt = data.get("imagen4_prompt")
            
            if not prompt:
                await callback.answer("‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ", show_alert=True)
                await state.clear()
                return
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            await self.start_generation(callback, state, prompt, aspect_ratio)
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    async def start_generation(
        self, 
        callback: CallbackQuery, 
        state: FSMContext, 
        prompt: str, 
        aspect_ratio: str
    ):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            from app.services.generation.imagen4.imagen4_service import imagen4_service
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            async with get_user_service() as user_service:
                user = await user_service.get_user_by_telegram_id(callback.from_user.id)
                if not user:
                    await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                    return
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –µ—â–µ —Ä–∞–∑
                async with get_session() as session:
                    balance_service = BalanceService(session)
                    user_balance = await balance_service.get_balance(user.id)
                    if user_balance < settings.IMAGEN4_GENERATION_COST:
                        await callback.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", show_alert=True)
                        return
                    
                    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    aspect_options = UserSettings.get_aspect_ratio_options()
                    aspect_name = aspect_options.get(aspect_ratio, {}).get("name", aspect_ratio)
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                    generation_text = (
                        f"üé® <b>–ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é Imagen 4...</b>\n\n"
                        f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {prompt[:100]}{'...' if len(prompt) > 100 else ''}\n"
                        f"üìê <b>–§–æ—Ä–º–∞—Ç:</b> {aspect_name} ({aspect_ratio})\n"
                        f"üíé <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {settings.IMAGEN4_GENERATION_COST} –∫—Ä–µ–¥–∏—Ç–æ–≤\n\n"
                        f"‚è≥ –û–∂–∏–¥–∞–π—Ç–µ, —Å–æ–∑–¥–∞–µ–º –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."
                    )
                    
                    try:
                        await callback.message.edit_text(
                            text=generation_text,
                            parse_mode="HTML"
                        )
                        await callback.answer()
                    except Exception:
                        await callback.message.answer(
                            text=generation_text,
                            parse_mode="HTML"
                        )
                        await callback.answer()
                    
                    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ
                    try:
                        from app.services.generation.imagen4.models import Imagen4Request, AspectRatio
                        
                        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
                        request = Imagen4Request(
                            prompt=prompt,
                            aspect_ratio=AspectRatio(aspect_ratio),
                            num_images=1,
                            negative_prompt=None,
                            seed=None
                        )
                        
                        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        generation_result = await imagen4_service.generate_image(request)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        if generation_result.status == "failed":
                            raise Exception(generation_result.error_message)
                        
                        # –°–ø–∏—Å—ã–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
                        async with get_session() as session:
                            balance_service = BalanceService(session)
                            charge_result = await balance_service.charge_balance(
                                user_id=user.id,
                                amount=generation_result.cost_credits,
                                description=f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Imagen 4: {prompt[:50]}..."
                            )
                            
                            if not charge_result["success"]:
                                raise Exception(f"–û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {charge_result['error']}")
                                
                            user_balance = charge_result["new_balance"]
                        
                        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ
                        generation = await self.create_generation(
                            user_id=user.id,
                            prompt=prompt,
                            aspect_ratio=aspect_ratio
                        )
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ MinIO
                        logger.info(f"[Imagen4] –°–æ—Ö—Ä–∞–Ω—è–µ–º {len(generation_result.response.images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ MinIO")
                        
                        from app.services.generation.storage.image_storage import ImageStorage
                        image_storage = ImageStorage()
                        
                        # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç FAL
                        fal_urls = [img.url for img in generation_result.response.images]
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ MinIO
                        minio_urls = await image_storage.save_images_to_minio(generation, fal_urls)
                        
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º MinIO URL –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –∏–Ω–∞—á–µ fallback –∫ FAL URL
                        final_urls = minio_urls if minio_urls else fal_urls
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
                        async with get_session() as session:
                            generation.status = "completed"
                            generation.result_urls = final_urls
                            generation.generation_time = generation_result.generation_time
                            generation.source_model = "fal-ai/imagen4/preview"
                            generation.completed_at = now_utc().replace(tzinfo=None)
                            await session.commit()
                        
                        # –ö–µ—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Redis –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                        await self._cache_generation_result(generation, user.id)
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        result_text = (
                            f"‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!</b>\n\n"
                            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {prompt[:100]}{'...' if len(prompt) > 100 else ''}\n"
                            f"üìê <b>–§–æ—Ä–º–∞—Ç:</b> {aspect_name} ({aspect_ratio})\n"
                            f"‚è± <b>–í—Ä–µ–º—è:</b> {generation_result.generation_time:.1f}—Å\n"
                            f"üíé <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {generation_result.cost_credits} –∫—Ä–µ–¥–∏—Ç–æ–≤\n"
                            f"üíæ <b>–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤:</b> {'MinIO' if minio_urls else 'FAL (–≤—Ä–µ–º–µ–Ω–Ω–æ)'}\n\n"
                            f"üñº <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>"
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        await callback.message.answer_photo(
                            photo=generation_result.response.images[0].url,
                            caption=result_text,
                            parse_mode="HTML"
                        )
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
                        await callback.message.answer(
                            text="üé® <b>–ú–µ–Ω—é Imagen 4</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                            parse_mode="HTML",
                            reply_markup=build_imagen4_menu_keyboard(user_balance, settings.IMAGEN4_GENERATION_COST)
                        )
                        
                        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                        await state.clear()
                        
                    except Exception as gen_error:
                        logger.exception(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {gen_error}")
                        error_text = (
                            "‚ùå <b>–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</b>\n\n"
                            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. "
                            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
                            "üí∞ –ö—Ä–µ–¥–∏—Ç—ã –Ω–µ –±—ã–ª–∏ —Å–ø–∏—Å–∞–Ω—ã"
                        )
                        
                        try:
                            await callback.message.edit_text(
                                text=error_text,
                                parse_mode="HTML",
                                reply_markup=build_imagen4_menu_keyboard(user_balance, settings.IMAGEN4_GENERATION_COST)
                            )
                        except Exception:
                            await callback.message.answer(
                                text=error_text,
                                parse_mode="HTML",
                                reply_markup=build_imagen4_menu_keyboard(user_balance, settings.IMAGEN4_GENERATION_COST)
                            )
                        
                        await state.clear()
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", show_alert=True)
            await state.clear()

    async def create_generation(self, user_id, prompt: str, aspect_ratio: str):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é Imagen 4"""
        try:
            from app.database.models import ImageGeneration, GenerationStatus
            from uuid import uuid4
            
            generation = ImageGeneration(
                id=uuid4(),
                user_id=user_id,
                avatar_id=None,  # Imagen 4 –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–≤–∞—Ç–∞—Ä—ã
                template_id=None,  # Imagen 4 –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —à–∞–±–ª–æ–Ω—ã
                original_prompt=prompt,
                final_prompt=prompt,  # –î–ª—è Imagen 4 –ø—Ä–æ–º–ø—Ç –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
                quality_preset="standard",
                aspect_ratio=aspect_ratio,
                num_images=1,
                status=GenerationStatus.PENDING,
                generation_type="imagen4",  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                source_model="imagen4",    # –£–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å
                created_at=now_utc().replace(tzinfo=None),      # –£–±–∏—Ä–∞–µ–º timezone –¥–ª—è PostgreSQL
                result_urls=None,
                error_message=None,
                is_favorite=False
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            async with get_session() as session:
                session.add(generation)
                await session.commit()
                await session.refresh(generation)
            
            logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è Imagen 4: {generation.id}")
            return generation
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            return None
    
    async def _cache_generation_result(self, generation, user_id):
        """–ö–µ—à–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤ Redis –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"""
        try:
            from app.core.di import get_redis
            import json
            
            redis = await get_redis()
            
            # –ö–µ—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            cache_data = {
                "id": str(generation.id),
                "user_id": str(user_id),
                "prompt": generation.original_prompt,
                "aspect_ratio": generation.aspect_ratio,
                "result_urls": generation.result_urls,
                "generation_time": generation.generation_time,
                "created_at": generation.created_at.isoformat() if generation.created_at else None,
                "generation_type": generation.generation_type,
                "source_model": generation.source_model
            }
            
            # –ö–µ—à–∏—Ä—É–µ–º –Ω–∞ 1 —á–∞—Å
            cache_key = f"imagen4:generation:{generation.id}"
            await redis.setex(cache_key, 3600, json.dumps(cache_data))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_cache_key = f"imagen4:user_generations:{user_id}"
            await redis.lpush(user_cache_key, str(generation.id))
            await redis.ltrim(user_cache_key, 0, 49)  # –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50
            await redis.expire(user_cache_key, 86400)  # 24 —á–∞—Å–∞
            
            # –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–µ—à –≥–∞–ª–µ—Ä–µ–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            gallery_cache_key = f"gallery:user_images:{user_id}"
            await redis.delete(gallery_cache_key)
            
            logger.info(f"[Redis Cache] –ó–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ {generation.id}")
            
        except Exception as e:
            logger.warning(f"[Redis Cache] –û—à–∏–±–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ {generation.id}: {e}")
            # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
imagen4_handler = Imagen4Handler()


# ==================== –†–û–£–¢–´ ====================

@imagen4_router.callback_query(F.data == "imagen4_menu")
async def handle_imagen4_menu(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é Imagen 4"""
    await imagen4_handler.show_imagen4_menu(callback, state)


@imagen4_router.callback_query(F.data == "imagen4_prompt")
async def handle_imagen4_prompt_request(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è Imagen 4"""
    await imagen4_handler.show_prompt_input(callback, state)


@imagen4_router.message(F.text, StateFilter(GenerationStates.waiting_for_imagen4_prompt))
async def handle_imagen4_prompt_text(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è Imagen 4"""
    await imagen4_handler.process_prompt(message, state)


@imagen4_router.callback_query(F.data.startswith("imagen4_aspect_ratio:"))
async def handle_imagen4_aspect_ratio_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω –¥–ª—è Imagen 4"""
    await imagen4_handler.process_aspect_ratio_selection(callback, state)


# ==================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–®–ò–ë–û–ö ====================

@imagen4_router.message(F.text, StateFilter(GenerationStates.imagen4_selecting_aspect_ratio))
async def handle_text_instead_of_aspect_ratio(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –≤–º–µ—Å—Ç–æ –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞"""
    await message.reply(
        "üìê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω.",
        parse_mode="HTML"
    ) 