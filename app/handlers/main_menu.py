"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞
"""
from typing import Optional, Dict, Any

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from app.keyboards.main import (
    get_main_menu, get_ai_creativity_menu, get_images_menu, get_video_menu, 
    get_news_menu, get_my_projects_menu, get_avatar_generation_menu, 
    get_gallery_menu, get_business_menu, get_tasks_menu, get_add_to_chat_menu,
    get_quick_action_menu
)
from app.core.di import get_user_service
from app.services.user import UserService
from app.core.logger import get_logger
from app.core.static_resources import StaticResources
from app.shared.handlers.base_handler import BaseHandler

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é
from app.handlers.avatar.create import start_avatar_creation
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
from app.handlers.generation.main_handler import GenerationMainHandler

logger = get_logger(__name__)
router = Router()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
base_handler = BaseHandler()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
generation_handler = GenerationMainHandler()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
@router.callback_query(F.data == "avatar_create")
async def handle_avatar_create(call: CallbackQuery, state: FSMContext):
    """
    üé≠ –°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä - –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
    """
    await start_avatar_creation(call, state)

@router.message(Command("start"))
async def start_command(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –ê–∏—à–∏.
    """
    await state.clear()
    
    try:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        telegram_user_data = {
            "id": message.from_user.id,
            "first_name": message.from_user.first_name,
            "last_name": message.from_user.last_name,
            "username": message.from_user.username,
            "language_code": message.from_user.language_code,
            "is_premium": getattr(message.from_user, 'is_premium', False),
            "is_bot": message.from_user.is_bot,
        }
        
        async with get_user_service() as user_service:
            user = await user_service.register_user(telegram_user_data)
            if not user:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
                # –í—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –ê–∏—à–∏
        welcome_text = f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!

ü§ñ –Ø Aisha - –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ!

‚ú® **–ß—Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å:**

üì∑ **–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π**
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ç–æ
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ —Ä–∞–∑–Ω—ã—Ö –æ–±—Ä–∞–∑–∞—Ö –∏ —Å—Ç–∏–ª—è—Ö

üé¨ **–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ** 
‚Ä¢ –û–∂–∏–≤–∏—Ç—å –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Ä¢ –°–¥–µ–ª–∞—Ç—å –≥–æ–≤–æ—Ä—è—â–∏–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏–∫–∏

üìÇ **–õ–∏—á–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è**
‚Ä¢ –í—Å–µ –≤–∞—à–∏ —Ä–∞–±–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –£–¥–æ–±–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –ú–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏

üìù **–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã**
‚Ä¢ –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç
‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ —Ç—Ä–µ–Ω–¥–∞–º–∏
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–±–æ—á–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏

üíé **–í—Å—ë –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ!**
–ù–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö - –ø—Ä–æ—Å—Ç–æ –≤—ã–±–∏—Ä–∞–π—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

üöÄ **–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?** –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!"""

        # –ü—É—Ç—å –∫ –∞–≤–∞—Ç–∞—Ä—É –ê–∏—à–∏
        avatar_path = StaticResources.get_aisha_avatar_path()
        
        if avatar_path.exists():
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            photo = FSInputFile(avatar_path)
            await message.answer_photo(
                photo=photo,
                caption=welcome_text,
                reply_markup=get_main_menu(),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await message.answer(
                welcome_text,
                reply_markup=get_main_menu(),
                parse_mode="Markdown"
            )
            
    except Exception as e:
        # Fallback –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.exception(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        try:
            fallback_text = f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! 

ü§ñ –Ø Aisha Bot - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ò–ò.

‚ú® –ì–æ—Ç–æ–≤—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è? –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é!"""
            
            await message.answer(
                fallback_text,
                reply_markup=get_main_menu()
            )
        except Exception as final_error:
            logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {final_error}")

@router.callback_query(F.data == "main_menu")
async def show_main_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ë–ï–ó —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    await state.clear()
    
    menu_text = "üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    try:
        if call.message.photo:
            # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
            await call.message.edit_caption(
                caption=menu_text,
                reply_markup=get_main_menu(),
                parse_mode="Markdown"
            )
            logger.debug("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–ø–∏—Å—å —Ñ–æ—Ç–æ")
            
        elif call.message.text or call.message.caption:
            # ‚úÖ –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            await call.message.edit_text(
                menu_text,
                reply_markup=get_main_menu(),
                parse_mode="Markdown"
            )
            logger.debug("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—Å—Ç")
            
        else:
            # ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ (–∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π)
            await call.message.answer(
                menu_text,
                reply_markup=get_main_menu(),
                parse_mode="Markdown"
            )
            logger.debug("‚ö†Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø)")
            
    except TelegramBadRequest as markdown_error:
        if "parse entities" in str(markdown_error):
            # –ü—Ä–æ–±–ª–µ–º–∞ —Å Markdown - –ø–æ–≤—Ç–æ—Ä—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            menu_text_plain = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            
            try:
                if call.message.photo:
                    await call.message.edit_caption(
                        caption=menu_text_plain,
                        reply_markup=get_main_menu()
                    )
                elif call.message.text or call.message.caption:
                    await call.message.edit_text(
                        menu_text_plain,
                        reply_markup=get_main_menu()
                    )
                else:
                    await call.message.answer(
                        menu_text_plain,
                        reply_markup=get_main_menu()
                    )
            except Exception as fallback_error:
                logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ fallback –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {fallback_error}")
                await call.answer("‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é", show_alert=True)
                
        elif "there is no text in the message to edit" in str(markdown_error):
            # –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ø—Ä–æ–±—É–µ–º edit_caption
            try:
                await call.message.edit_caption(
                    caption=menu_text.replace('**', ''),
                    reply_markup=get_main_menu()
                )
            except Exception:
                # –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                await call.message.answer(
                    menu_text.replace('**', ''),
                    reply_markup=get_main_menu()
                )
                
        else:
            # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ Telegram
            logger.warning(f"Telegram –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: {markdown_error}")
            try:
                await call.message.answer(
                    "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=get_main_menu()
                )
            except Exception:
                await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)
                
    except Exception as general_error:
        logger.exception(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: {general_error}")
        try:
            await call.message.answer(
                "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu()
            )
        except Exception:
            await call.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    await call.answer()

@router.callback_query(F.data == "avatar_menu")
async def show_avatar_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–≤ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫.
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤
    from app.handlers.avatar import avatar_main_handler
    
    # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    await avatar_main_handler.show_avatar_menu(call, state)

@router.callback_query(F.data == "my_gallery")
async def show_my_gallery(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –≥–∞–ª–µ—Ä–µ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–∞–ª–µ—Ä–µ–∏
    from app.handlers.gallery import gallery_handler
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≥–∞–ª–µ—Ä–µ–∏
    await gallery_handler.gallery_viewer.show_gallery_main(call, state)

@router.callback_query(F.data == "transcribe_menu")
async def show_transcribe_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫.
    """
    await call.answer("üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏...", show_alert=False)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
    from app.handlers import transcript_main_handler
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é —á–µ—Ä–µ–∑ call.message
    try:
        await state.set_state(None)  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
        from aiogram.utils.keyboard import InlineKeyboardBuilder
        from aiogram.types import InlineKeyboardButton
        
        builder = InlineKeyboardBuilder()
        builder.row(
            InlineKeyboardButton(text="üé§ –ê—É–¥–∏–æ", callback_data="transcribe_audio"),
            InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç", callback_data="transcribe_text")
        )
        builder.row(InlineKeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="transcribe_history"))
        builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
        
        # –£—Ä–æ–≤–µ–Ω—å 1: –ü–æ–ø—ã—Ç–∫–∞ —Å HTML
        try:
            await call.message.edit_text(
                "üéô <b>–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                parse_mode="HTML",
                reply_markup=builder.as_markup()
            )
        except TelegramBadRequest as html_error:
            if "parse entities" in str(html_error):
                # –£—Ä–æ–≤–µ–Ω—å 2: –ü—Ä–æ–±–ª–µ–º–∞ —Å HTML –ø–∞—Ä—Å–∏–Ω–≥–æ–º - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                logger.warning(f"–ü—Ä–æ–±–ª–µ–º–∞ —Å HTML –ø–∞—Ä—Å–∏–Ω–≥–æ–º –≤ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏: {html_error}")
                await call.message.edit_text(
                    "üéô –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    parse_mode=None,
                    reply_markup=builder.as_markup()
                )
            else:
                # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - fallback
                logger.exception(f"–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –≤ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏: {html_error}")
                await call.message.answer(
                    "üéô –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    parse_mode=None,
                    reply_markup=builder.as_markup()
                )
        
    except Exception as e:
        logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏", show_alert=True)

@router.callback_query(F.data == "main_help")
async def show_help(call: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É - –ò–°–ü–†–ê–í–õ–ï–ù–û: —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã –æ—à–∏–±–∫–∏ Markdown –ø–∞—Ä—Å–∏–Ω–≥–∞
    """
    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    help_text = """‚ùì **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É**

üé® **–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç
‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (30-90 —Å–µ–∫—É–Ω–¥)

üé≠ **–ê–≤–∞—Ç–∞—Ä—ã:**
‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∏–∑ –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ
‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –°—Ç–∏–ª–µ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤

üñºÔ∏è **–ì–∞–ª–µ—Ä–µ—è:**
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –î–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

üí° **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏

üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** @aisha_support_bot"""

    try:
        # ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º fallback'–æ–º
        await call.message.edit_text(
            help_text,
            reply_markup=get_main_menu(),
            parse_mode="Markdown"
        )
        await call.answer()
        
    except TelegramBadRequest as telegram_error:
        error_msg = str(telegram_error).lower()
        
        if "parse entities" in error_msg:
            # –ü—Ä–æ–±–ª–µ–º–∞ —Å Markdown - –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML
            logger.warning(f"Markdown –æ—à–∏–±–∫–∞ –≤ —Å–ø—Ä–∞–≤–∫–µ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ HTML: {telegram_error}")
            
            help_text_html = """‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>

üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</b>
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç
‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (30-90 —Å–µ–∫—É–Ω–¥)

üé≠ <b>–ê–≤–∞—Ç–∞—Ä—ã:</b>
‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∏–∑ –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ
‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –°—Ç–∏–ª–µ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤

üñºÔ∏è <b>–ì–∞–ª–µ—Ä–µ—è:</b>
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –î–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @aisha_support_bot"""
            
            try:
                await call.message.edit_text(
                    help_text_html,
                    reply_markup=get_main_menu(),
                    parse_mode="HTML"
                )
                await call.answer()
                
            except TelegramBadRequest as html_error:
                # HTML —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                logger.warning(f"HTML –æ—à–∏–±–∫–∞ –≤ —Å–ø—Ä–∞–≤–∫–µ, —É–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {html_error}")
                
                help_text_plain = """‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É

üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç
‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (30-90 —Å–µ–∫—É–Ω–¥)

üé≠ –ê–≤–∞—Ç–∞—Ä—ã:
‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∏–∑ –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ
‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –°—Ç–∏–ª–µ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã - –¥–ª—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤

üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è:
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –î–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

üí° –°–æ–≤–µ—Ç—ã:
‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @aisha_support_bot"""
                
                try:
                    await call.message.edit_text(
                        help_text_plain,
                        reply_markup=get_main_menu(),
                        parse_mode=None
                    )
                    await call.answer()
                    
                except TelegramBadRequest as final_error:
                    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    logger.warning(f"–ù–µ –º–æ–∂–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ: {final_error}")
                    await call.message.answer(
                        help_text_plain,
                        reply_markup=get_main_menu(),
                        parse_mode=None
                    )
                    await call.answer()
                    
        elif "message is not modified" in error_msg:
            # –ö–æ–Ω—Ç–µ–Ω—Ç —É–∂–µ —Ç–∞–∫–æ–π –∂–µ - –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º
            await call.answer("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞", show_alert=False)
            
        elif "message to delete not found" in error_msg:
            # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            logger.warning(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {telegram_error}")
            await call.message.answer(
                help_text.replace('**', '').replace('*', ''),
                reply_markup=get_main_menu(),
                parse_mode=None
            )
            await call.answer()
            
        else:
            # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ Telegram
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è Telegram –æ—à–∏–±–∫–∞ –≤ —Å–ø—Ä–∞–≤–∫–µ: {telegram_error}")
            await call.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏", show_alert=True)
                
    except Exception as general_error:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–ø—Ä–∞–≤–∫–µ: {general_error}")
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await call.message.answer(
                "‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞: @aisha_support_bot",
                reply_markup=get_main_menu(),
                parse_mode=None
            )
            await call.answer()
        except Exception:
            # –§–∏–Ω–∞–ª—å–Ω—ã–π fallback
            await call.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–∫–∏", show_alert=True)

@router.callback_query(F.data.startswith("balance_details_"))
async def show_balance_details(call: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ.
    """
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data: balance_details_{added_amount}_{current_balance}
        parts = call.data.split("_")
        if len(parts) >= 4:
            added_amount = float(parts[2])
            current_balance = float(parts[3])
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            details_text = (
                f"üí∞ –î–µ—Ç–∞–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:\n\n"
                f"‚ûï –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {added_amount} –∫—Ä–µ–¥–∏—Ç–æ–≤\n"
                f"üíé –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤\n\n"
                f"üéØ –ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n"
                f"‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä (120-150 –∫—Ä–µ–¥–∏—Ç–æ–≤)\n"
                f"‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
                f"‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É–¥–∏–æ\n\n"
                f"‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!"
            )
            
            await call.answer(details_text, show_alert=True)
            logger.info(f"–ü–æ–∫–∞–∑–∞–Ω—ã –¥–µ—Ç–∞–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {call.from_user.id}: +{added_amount}, –±–∞–ª–∞–Ω—Å: {current_balance}")
        else:
            await call.answer("‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è", show_alert=True)
            
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –¥–µ—Ç–∞–ª–µ–π –±–∞–ª–∞–Ω—Å–∞: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ", show_alert=True)

@router.callback_query(F.data == "back_to_main")
async def back_to_main(call: CallbackQuery):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ë–ï–ó —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    await call.answer("üîÑ –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", show_alert=False)
    
    menu_text = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    try:
        if call.message.photo:
            # ‚úÖ –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
            await call.message.edit_caption(
                caption=menu_text,
                reply_markup=get_main_menu()
            )
            logger.debug("‚úÖ back_to_main: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–ø–∏—Å—å —Ñ–æ—Ç–æ")
            
        elif call.message.text or call.message.caption:
            # ‚úÖ –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç  
            await call.message.edit_text(
                menu_text,
                reply_markup=get_main_menu()
            )
            logger.debug("‚úÖ back_to_main: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—Å—Ç")
            
        else:
            # ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ (–∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π)
            await call.message.answer(
                menu_text,
                reply_markup=get_main_menu()
            )
            logger.debug("‚ö†Ô∏è back_to_main: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            
    except TelegramBadRequest as edit_error:
        # –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - fallback —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ back_to_main: {edit_error}")
        
        try:
            if "there is no text in the message to edit" in str(edit_error):
                # –ü—Ä–æ–±—É–µ–º edit_caption –¥–ª—è —Ñ–æ—Ç–æ
                await call.message.edit_caption(
                    caption=menu_text,
                    reply_markup=get_main_menu()
                )
            else:
                # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await call.message.answer(
                    menu_text,
                    reply_markup=get_main_menu()
                )
        except Exception as send_error:
            logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ back_to_main: {send_error}")
            await call.answer("‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é", show_alert=True)
            
    except Exception as general_error:
        logger.exception(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ back_to_main: {general_error}")
        try:
            await call.message.answer(
                menu_text,
                reply_markup=get_main_menu()
            )
        except Exception:
            await call.answer("‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "main_generation")
async def show_main_generation(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è" - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –º–æ–¥—É–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        from app.handlers.generation.main_handler import generation_handler
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        await generation_handler.show_generation_menu(call)
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {call.from_user.id} –ø–µ—Ä–µ—à–µ–ª –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        await call.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)

@router.callback_query(F.data == "styles_menu")
async def show_styles_menu(call: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∏–ª–∏" - –∑–∞–≥–ª—É—à–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    """
    try:
        await call.answer(
            "üé≠ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å—Ç–∏–ª–µ–π\n\n"
            "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
            "üìÖ –°–∫–æ—Ä–æ:\n"
            "‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏\n"
            "‚Ä¢ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã\n"
            "‚Ä¢ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏\n\n"
            "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ê–≤–∞—Ç–∞—Ä—ã' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!", 
            show_alert=True
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {call.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ —Å—Ç–∏–ª–∏ (–∑–∞–≥–ª—É—à–∫–∞)")
        
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å—Ç–∏–ª–µ–π: {e}")
        await call.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "ai_creativity_menu")
async def show_ai_creativity_menu(call: CallbackQuery, state: FSMContext):
    """
    üé® **–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ**

üöÄ **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:**

üì∑ **–§–æ—Ç–æ** - —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–Ω–∏–º–∫–∏ —Å –≤–∞—à–∏–º –ª–∏—Ü–æ–º –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
üé¨ **–í–∏–¥–µ–æ** - –æ–∂–∏–≤–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏–∫–∏
üìÇ **–ú–æ–∏ —Ä–∞–±–æ—Ç—ã** - –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤—Å—ë —á—Ç–æ —Å–æ–∑–¥–∞–ª–∏

üí° **–í—Å–µ –≤–∞—à–∏ —Ä–∞–±–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ**

–ß—Ç–æ –±—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å?"""

    await state.clear()
    
    menu_text = """üé® **–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ**

üöÄ **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:**

üì∑ **–§–æ—Ç–æ** - —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–Ω–∏–º–∫–∏ —Å –≤–∞—à–∏–º –ª–∏—Ü–æ–º –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
üé¨ **–í–∏–¥–µ–æ** - –æ–∂–∏–≤–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏–∫–∏
üìÇ **–ú–æ–∏ —Ä–∞–±–æ—Ç—ã** - –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤—Å—ë —á—Ç–æ —Å–æ–∑–¥–∞–ª–∏

üí° **–í—Å–µ –≤–∞—à–∏ —Ä–∞–±–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ**

–ß—Ç–æ –±—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å?"""

    try:
        await base_handler.safe_edit_message(
            call,
            menu_text,
            reply_markup=get_ai_creativity_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "images_menu")
async def show_images_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    """
    await state.clear()
    
    menu_text = """üì∑ **–§–æ—Ç–æ**

üé≠ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**

üì∑ **–§–æ—Ç–æ —Å–æ –º–Ω–æ–π** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—É—á–µ–Ω–Ω—É—é –Ω–∞ –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ –º–æ–¥–µ–ª—å
üìù **–ü–æ –æ–ø–∏—Å–∞–Ω–∏—é** - —Å–æ–∑–¥–∞–Ω–∏–µ –ª—é–±—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ —á–µ—Ä–µ–∑ Imagen 4
üé¨ **–í–∏–¥–µ–æ** - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤ (—Å–∫–æ—Ä–æ)

üí° **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–Ω–∏–º–∫–∏ –∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã**

–ß—Ç–æ –≤—ã–±–µ—Ä–µ—Ç–µ?"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_images_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "video_generation_stub")
async def show_video_generation_stub(call: CallbackQuery, state: FSMContext):
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
    """
    await state.clear()
    
    stub_text = """üé¨ **–í–∏–¥–µ–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è**

üöß **–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**

–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:
‚Ä¢ üé≠ Hedra AI - –∞–Ω–∏–º–∞—Ü–∏—è –ª–∏—Ü
‚Ä¢ üåü Kling - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –ø–æ —Ç–µ–∫—Å—Ç—É
‚Ä¢ üé™ Weo3 - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏–∫–∏

üìÖ **–û–∂–∏–¥–∞–µ–º—ã–π –∑–∞–ø—É—Å–∫:** –í –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö

üí° **–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ:**
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤–∞—à–∏–º –æ–±—Ä–∞–∑–æ–º
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"""

    try:
        await call.message.edit_text(
            stub_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                        callback_data="images_menu"
                    ),
                    InlineKeyboardButton(
                        text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        callback_data="main_menu"
                    )
                ]
            ]),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥–ª—É—à–∫–∏ –≤–∏–¥–µ–æ: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", show_alert=True)

@router.callback_query(F.data == "avatar_generation_menu")
async def show_avatar_generation_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∞–≤–∞—Ç–∞—Ä–æ–º.
    """
    await state.clear()
    
    menu_text = """üì∑ **–§–æ—Ç–æ —Å–æ –º–Ω–æ–π**

üé≠ **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ñ–æ—Ç–æ —Å –≤–∞—à–∏–º –ª–∏—Ü–æ–º:**

‚úçÔ∏è **–°–≤–æ–π –ø—Ä–æ–º–ø—Ç** - –æ–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ü–µ–Ω—É
üì∑ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ** - –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∏–ª—è
üé® **–í—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏

üí° **–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–µ–Ω –æ–±—É—á–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä**

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è:"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_avatar_generation_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–∞: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "video_menu")
async def show_video_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ.
    """
    await state.clear()
    
    menu_text = """üé¨ **–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ**

üöÄ **–ü–µ—Ä–µ–¥–æ–≤—ã–µ AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**

üé≠ **Hedra AI** - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –≥–æ–≤–æ—Ä—è—â–∏–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
üåü **Kling 2.1 Pro** - –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –¥–æ 10 —Å–µ–∫—É–Ω–¥
üé™ **Weo3 Creative** - –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏

üìπ **–ò–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ**

üí° **–°–æ–≤–µ—Ç:** –î–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ç–∫–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é:"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_video_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –≤–∏–¥–µ–æ: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "audio_menu")
async def show_audio_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞—É–¥–∏–æ –∏ —Ä–µ—á–∏.
    """
    await state.clear()
    
    menu_text = """üîä **–ê—É–¥–∏–æ –∏ —Ä–µ—á—å**

üéôÔ∏è **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**

üé§ **–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è** - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç (OpenAI Whisper)
üó£Ô∏è **TTS –û–∑–≤—É—á–∫–∞** - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—á–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (—Å–∫–æ—Ä–æ)
üéµ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏** - AI –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

üìù **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:** MP3, WAV, M4A, OGG
üåç **–Ø–∑—ã–∫–∏:** –†—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_audio_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –∞—É–¥–∏–æ: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "news_menu")
async def show_news_menu(call: CallbackQuery, state: FSMContext):
    """
    üì∞ –ù–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—ã - —Ç–µ–ø–µ—Ä—å —á–∞—Å—Ç—å –±–∏–∑–Ω–µ—Å-—Ä–∞–∑–¥–µ–ª–∞
    """
    await state.clear()
    
    menu_text = """üì∞ **–ù–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—ã**

üöÄ **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—è:**

üì± **–ú–æ–∏ –∫–∞–Ω–∞–ª—ã** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
üî• **–¢—Ä–µ–Ω–¥–∏–Ω–≥** - —Å–∞–º—ã–µ –æ–±—Å—É–∂–¥–∞–µ–º—ã–µ —Ç–µ–º—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
üéØ **–ö–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π** - —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã

## üíº –ë–∏–∑–Ω–µ—Å-–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç—Ä–∞—Å–ª–µ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
‚Ä¢ –ü–æ–∏—Å–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_news_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "my_projects_menu")
async def show_my_projects_menu(call: CallbackQuery, state: FSMContext):
    """
    üé≠ –ú–æ—è –≥–∞–ª–µ—Ä–µ—è - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ AI-–∫–æ–Ω—Ç–µ–Ω—Ç–∞
    """
    await state.clear()
    
    menu_text = """üé≠ **–ú–æ—è –≥–∞–ª–µ—Ä–µ—è**

üìö **–í–µ—Å—å –≤–∞—à AI-–∫–æ–Ω—Ç–µ–Ω—Ç –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ:**

üé≠ **–ú–æ–∏ –∞–≤–∞—Ç–∞—Ä—ã** - –æ–±—É—á–µ–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
üñºÔ∏è **–í—Å—è –≥–∞–ª–µ—Ä–µ—è** - –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤–∏–¥–µ–æ —Å —É–º–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
‚≠ê **–ò–∑–±—Ä–∞–Ω–Ω–æ–µ** - –≤–∞—à–∏ –ª—É—á—à–∏–µ —Ä–∞–±–æ—Ç—ã
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

üíæ **–í–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ**

–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?"""

    try:
        await base_handler.safe_edit_message(
            call,
            menu_text,
            reply_markup=get_my_projects_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≥–∞–ª–µ—Ä–µ–∏: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏", show_alert=True)

@router.callback_query(F.data == "gallery_all")
async def show_gallery_all(call: CallbackQuery, state: FSMContext):
    """
    üñºÔ∏è –í—Å—è –≥–∞–ª–µ—Ä–µ—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    """
    await state.clear()
    
    menu_text = """üñºÔ∏è **–í—Å—è –≥–∞–ª–µ—Ä–µ—è**

üìö **–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω–æ –≤—Å—ë –≤–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ:**
‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∞–≤–∞—Ç–∞—Ä–∞–º–∏  
‚Ä¢ Imagen4 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
‚Ä¢ Hedra/Kling/Weo3 –≤–∏–¥–µ–æ

üîç **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞:**
‚Ä¢ –ü–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –ü–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è  
‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –ª—É—á—à–∏–µ –∫–∞–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ

–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"""

    try:
        await base_handler.safe_edit_message(
            call,
            menu_text,
            reply_markup=get_gallery_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≥–∞–ª–µ—Ä–µ–∏: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏", show_alert=True)

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –Ω–æ–≤—ã—Ö callback_data
# avatar_create —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ app.handlers.avatar.create

@router.callback_query(F.data == "imagen4_generation")  
async def start_imagen4_generation(call: CallbackQuery, state: FSMContext):
    """
    üé® Imagen 4 Pro - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google Imagen4 (—Å—Ä–∞–∑—É –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞)
    """
    # –°—Ä–∞–∑—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ–Ω—é
    from app.handlers.imagen4.imagen4_handler import imagen4_handler
    await imagen4_handler.show_prompt_input(call, state)

@router.callback_query(F.data == "hedra_video")
async def start_hedra_video(call: CallbackQuery, state: FSMContext):
    """
    üé≠ Hedra AI - –≥–æ–≤–æ—Ä—è—â–∏–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã
    """
    await call.answer("üé≠ Hedra AI —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "kling_video")
async def start_kling_video(call: CallbackQuery, state: FSMContext):
    """
    üåü Kling - –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –≤–∏–¥–µ–æ
    """
    await call.answer("üåü Kling —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "weo3_video")
async def start_weo3_video(call: CallbackQuery, state: FSMContext):
    """
    üé™ Weo3 - –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –≤–∏–¥–µ–æ —ç—Ñ—Ñ–µ–∫—Ç—ã
    """
    await call.answer("üé™ Weo3 —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "my_videos")
async def show_my_videos(call: CallbackQuery, state: FSMContext):
    """
    üìπ –ú–æ–∏ –≤–∏–¥–µ–æ - –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
    """
    await call.answer("üìπ –ê—Ä—Ö–∏–≤ –≤–∏–¥–µ–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "tts_menu")
async def show_tts_menu(call: CallbackQuery, state: FSMContext):
    """
    üó£Ô∏è TTS –û–∑–≤—É—á–∫–∞ - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å
    """
    await call.answer("üó£Ô∏è TTS –æ–∑–≤—É—á–∫–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)

@router.callback_query(F.data == "music_generation")
async def start_music_generation(call: CallbackQuery, state: FSMContext):
    """
    üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ AI –º—É–∑—ã–∫–∏
    """
    await call.answer("üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)

@router.callback_query(F.data == "my_channels")
async def show_my_channels(call: CallbackQuery, state: FSMContext):
    """
    üì± –ú–æ–∏ –∫–∞–Ω–∞–ª—ã - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    """
    await call.answer("üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

@router.callback_query(F.data == "add_to_chat")
async def show_add_to_chat_menu(call: CallbackQuery, state: FSMContext):
    """
    üë• –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–º–∏ —á–∞—Ç–∞–º–∏
    """
    await state.clear()
    
    menu_text = """üë• **–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç**

ü§ñ **–°–¥–µ–ª–∞–π—Ç–µ Aisha —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:**

üîó **–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ** - –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —Ä–∞–±–æ—á—É—é –≥—Ä—É–ø–ø—É
üìã **–ú–æ–∏ —Ä–∞–±–æ—á–∏–µ —á–∞—Ç—ã** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —á–∞—Ç–∞–º–∏
‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞** - —á—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ
üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–∞—Ç–æ–≤** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—â–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π

üí° **Aisha –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–ø–∏—Å–∫—É, –≤—ã–¥–µ–ª—è–µ—Ç –∑–∞–¥–∞—á–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã**

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""

    try:
        await base_handler.safe_edit_message(
            call,
            menu_text,
            reply_markup=get_add_to_chat_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "add_channel")
async def add_channel(call: CallbackQuery, state: FSMContext):
    """
    ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª - –Ω–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    """
    await call.answer("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

@router.callback_query(F.data == "content_from_news")
async def create_content_from_news(call: CallbackQuery, state: FSMContext):
    """
    üéØ –ö–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–¥–æ–≤
    """
    await call.answer("üéØ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

# –ì–∞–ª–µ—Ä–µ—è —Ñ–∏–ª—å—Ç—Ä—ã
@router.callback_query(F.data == "gallery_avatars")
async def show_gallery_avatars(call: CallbackQuery, state: FSMContext):
    """
    üì∏ –§–æ—Ç–æ —Å–æ –º–Ω–æ–π - –≥–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ª–∏—Ü–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    await state.clear()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
    from app.handlers.gallery.filter_handler import gallery_filter_handler
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É "avatar" –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é
    await gallery_filter_handler.show_gallery_with_type_filter(call, state, "avatar")

@router.callback_query(F.data == "gallery_imagen")
async def show_gallery_imagen(call: CallbackQuery, state: FSMContext):
    """
    üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
    """
    await state.clear()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
    from app.handlers.gallery.filter_handler import gallery_filter_handler
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É "imagen4" –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é
    await gallery_filter_handler.show_gallery_with_type_filter(call, state, "imagen4")

@router.callback_query(F.data == "gallery_video")
async def show_gallery_video(call: CallbackQuery, state: FSMContext):
    """
    üé¨ –¢–æ–ª—å–∫–æ –≤–∏–¥–µ–æ - —Ñ–∏–ª—å—Ç—Ä –≥–∞–ª–µ—Ä–µ–∏
    """
    await state.clear()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
    from app.handlers.gallery.filter_handler import gallery_filter_handler
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É "video" –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é
    await gallery_filter_handler.show_gallery_with_type_filter(call, state, "video")

@router.callback_query(F.data == "gallery_by_date")
async def show_gallery_by_date(call: CallbackQuery, state: FSMContext):
    """
    üìÖ –ü–æ –¥–∞—Ç–µ - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≥–∞–ª–µ—Ä–µ–∏
    """
    await state.clear()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
    from app.handlers.gallery.filter_handler import gallery_filter_handler
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
    await gallery_filter_handler.show_date_filter_menu(call, state)

@router.callback_query(F.data == "add_to_favorites")
async def add_to_favorites(call: CallbackQuery, state: FSMContext):
    """
    ‚≠ê –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ - –æ—Ç–º–µ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    """
    await call.answer("‚≠ê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

# –î–æ–±–∞–≤–ª—è—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–Ω–æ–≥–æ –ø–æ–¥–º–µ–Ω—é
@router.callback_query(F.data == "avatar_custom_prompt")
async def start_avatar_custom_prompt(call: CallbackQuery, state: FSMContext):
    """
    ‚úçÔ∏è –°–≤–æ–π –ø—Ä–æ–º–ø—Ç - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–≤–∞—Ç–∞—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –ø—Ä–æ–º–ø—Ç–æ–º
    """
    await call.answer("‚úçÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ —Å–≤–æ–∏–º –ø—Ä–æ–º–ø—Ç–æ–º —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)

@router.callback_query(F.data == "avatar_from_photo")
async def start_avatar_from_photo(call: CallbackQuery, state: FSMContext):
    """
    üì∑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ - —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    """
    await call.answer("üì∑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)

@router.callback_query(F.data == "avatar_styles")
async def show_avatar_styles(call: CallbackQuery, state: FSMContext):
    """
    üé® –í—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å - –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
    """
    await call.answer("üé® –í—ã–±–æ—Ä —Å—Ç–∏–ª–µ–π —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "favorites")
async def show_favorites(call: CallbackQuery, state: FSMContext):
    """
    ‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ - –∫–æ–ª–ª–µ–∫—Ü–∏—è –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç
    """
    await call.answer("‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

@router.callback_query(F.data == "trending_today")
async def show_trending_today(call: CallbackQuery, state: FSMContext):
    """
    üî• –¢—Ä–µ–Ω–¥–∏–Ω–≥ —Å–µ–≥–æ–¥–Ω—è - –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ—Å—Ç—ã –∑–∞ 24 —á–∞—Å–∞
    """
    await call.answer("üî• –¢—Ä–µ–Ω–¥–∏–Ω–≥ —Å–µ–≥–æ–¥–Ω—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "trending_week")
async def show_trending_week(call: CallbackQuery, state: FSMContext):
    """
    üìä –¢—Ä–µ–Ω–¥–∏–Ω–≥ –∑–∞ –Ω–µ–¥–µ–ª—é - –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
    """
    await call.answer("üìä –¢—Ä–µ–Ω–¥–∏–Ω–≥ –∑–∞ –Ω–µ–¥–µ–ª—é —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!", show_alert=True)

@router.callback_query(F.data == "business_menu")
async def show_business_menu(call: CallbackQuery, state: FSMContext):
    """
    ü§ñ –ò–ò –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç - –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á
    """
    await state.clear()
    
    menu_text = """ü§ñ **–ò–ò –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç**

üéØ **–í–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫:**

üéØ **–ó–∞–¥–∞—á–∏** - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ä—É—á–µ–Ω–∏—è —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
üì∞ **–ù–æ–≤–æ—Å—Ç–∏** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—ã –ø–æ –≤–∞—à–∏–º —Ç–µ–º–∞–º
üìù **–ì–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç** - –ø—Ä–µ–≤—Ä–∞—â–∞–π—Ç–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–¥–æ–±–Ω—ã–π —Ç–µ–∫—Å—Ç
üë• **–í –≥—Ä—É–ø–ø—É** - –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —Ä–∞–±–æ—á–∏–π —á–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–µ—Ä–µ–ø–∏—Å–∫–∏

üöÄ **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —Ä—É—Ç–∏–Ω—É –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ –≤—Ä–µ–º—è**

–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ:"""

    try:
        await base_handler.safe_edit_message(
            call,
            menu_text,
            reply_markup=get_business_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "tasks_menu")
async def show_tasks_menu(call: CallbackQuery, state: FSMContext):
    """
    üìã –ó–∞–¥–∞—á–∏ - —Å–∏—Å—Ç–µ–º–∞ –ø–æ—Ä—É—á–µ–Ω–∏–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    """
    await state.clear()
    
    menu_text = """üìã **–ó–∞–¥–∞—á–∏**

üéØ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—É—á–µ–Ω–∏—è–º–∏:**

‚ûï **–°–æ–∑–¥–∞—Ç—å** - –¥–∞–π—Ç–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ä–æ–∫–∞
üìä **–ú–æ–∏ –ø–æ—Ä—É—á–µ–Ω–∏—è** - –∑–∞–¥–∞—á–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤—ã–¥–∞–ª–∏ –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–º
üë• **–ö–æ–º–∞–Ω–¥–∞** - –≤—Å–µ –∑–∞–¥–∞—á–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å—ã

‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ä–æ–∫–∞—Ö
üìà **–û—Ç—á–µ—Ç—ã** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

ü§ñ **Aisha –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö –∏ —Å–æ–±–∏—Ä–∞—Ç—å –æ—Ç—á—ë—Ç—ã**

–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?"""

    try:
        await call.message.edit_text(
            menu_text,
            reply_markup=get_tasks_menu(),
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –∑–∞–¥–∞—á: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é", show_alert=True)

@router.callback_query(F.data == "create_task")
async def create_task(call: CallbackQuery, state: FSMContext):
    """
    ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—É—á–µ–Ω–∏–µ - –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    """
    await call.answer("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—É—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

@router.callback_query(F.data == "my_tasks")
async def show_my_tasks(call: CallbackQuery, state: FSMContext):
    """
    üìä –ú–æ–∏ –ø–æ—Ä—É—á–µ–Ω–∏—è - –≤—ã–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    """
    await call.answer("üìä –ú–æ–∏ –ø–æ—Ä—É—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!", show_alert=True)

@router.callback_query(F.data == "team_tasks")
async def show_team_tasks(call: CallbackQuery, state: FSMContext):
    """
    üë• –ö–æ–º–∞–Ω–¥–∞ - –∑–∞–¥–∞—á–∏ –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã
    """
    await call.answer("üë• –ö–æ–º–∞–Ω–¥–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!", show_alert=True)

@router.callback_query(F.data == "task_reminders")
async def show_task_reminders(call: CallbackQuery, state: FSMContext):
    """
    ‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è - —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö
    """
    await call.answer("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!", show_alert=True)

@router.callback_query(F.data == "task_reports")
async def show_task_reports(call: CallbackQuery, state: FSMContext):
    """
    üìà –û—Ç—á–µ—Ç—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
    """
    await call.answer("üìà –û—Ç—á–µ—Ç—ã —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!", show_alert=True)

@router.callback_query(F.data == "get_invite_link")
async def get_invite_link(call: CallbackQuery, state: FSMContext):
    """
    üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç
    """
    await call.answer("üîó –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)

@router.callback_query(F.data == "my_work_chats")
async def show_my_work_chats(call: CallbackQuery, state: FSMContext):
    """
    üìã –ú–æ–∏ —Ä–∞–±–æ—á–∏–µ —á–∞—Ç—ã - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —á–∞—Ç–∞–º–∏
    """
    await call.answer("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)

@router.callback_query(F.data == "parsing_settings")
async def show_parsing_settings(call: CallbackQuery, state: FSMContext):
    """
    ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ - —á—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ —á–∞—Ç–∞—Ö
    """
    await call.answer("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!", show_alert=True)

@router.callback_query(F.data == "chat_analytics")
async def show_chat_analytics(call: CallbackQuery, state: FSMContext):
    """
    üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–∞—Ç–æ–≤ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    """
    await call.answer("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–∞—Ç–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True) 