"""
–í–∞–ª–∏–¥–∞—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–æ–≤ - —Å—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞
"""
from typing import Dict, Any, Optional, Tuple
from uuid import UUID
import logging
import re
from datetime import datetime

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import update

from ...core.logger import get_logger
from ...database.models import Avatar, AvatarTrainingType, AvatarStatus

logger = get_logger(__name__)class AvatarTrainingDataValidator:
    """
    –í–∞–ª–∏–¥–∞—Ç–æ—Ä –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤
    
    –°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê:
    - Style –∞–≤–∞—Ç–∞—Ä—ã: –¢–û–õ–¨–ö–û finetune_id, diffusers_lora_file_url = NULL
    - Portrait –∞–≤–∞—Ç–∞—Ä—ã: –¢–û–õ–¨–ö–û diffusers_lora_file_url, finetune_id = NULL
    """

    def __init__(self, session: AsyncSession):
        self.session = session

    async def validate_and_fix_training_completion(
        self,
        avatar: Avatar,
        webhook_result: Dict[str, Any]
    ) -> Dict[str, Any]:
        """
        –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
        –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–≥–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º —Ç–∏–ø–æ–≤ –∞–≤–∞—Ç–∞—Ä–æ–≤
        
        Args:
            avatar: –ê–≤–∞—Ç–∞—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            webhook_result: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç FAL AI webhook
            
        Returns:
            Dict[str, Any]: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
        """
        logger.info(f"üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞ {avatar.id} ({avatar.training_type})")
