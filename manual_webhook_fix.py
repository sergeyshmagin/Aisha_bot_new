#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
–ò–º–∏—Ç–∏—Ä—É–µ—Ç webhook –æ—Ç FAL AI –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞
"""
import asyncio
import sys
import os
from uuid import UUID

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.core.database import get_session
from app.services.avatar.fal_training_service import FALTrainingService
from app.services.avatar.training_service import AvatarTrainingService
from app.database.models import Avatar, AvatarStatus
from sqlalchemy import select, update

async def manual_webhook_update(avatar_id_str: str, request_id: str, finetune_id: str):
    """
    –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
    
    Args:
        avatar_id_str: ID –∞–≤–∞—Ç–∞—Ä–∞
        request_id: Request ID –æ—Ç FAL AI
        finetune_id: Finetune ID —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è
    """
    try:
        avatar_id = UUID(avatar_id_str)
        print(f"üîß –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞: {avatar_id}")
        print(f"üìã Request ID: {request_id}")
        print(f"üìã Finetune ID: {finetune_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—É—á–µ–Ω–∏—è –∏–∑ FAL AI
        print(f"\nüîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è –∏–∑ FAL AI...")
        
        fal_service = FALTrainingService()
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—É—á–µ–Ω–∏—è (style —Ç–∏–ø)
            result = await fal_service.get_training_result(request_id, "style")
            
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑ FAL AI:")
            for key, value in result.items():
                if isinstance(value, dict) and 'url' in value:
                    print(f"   {key}: {value['url']}")
                else:
                    print(f"   {key}: {value}")
            
            # –°–æ–∑–¥–∞–µ–º webhook –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            webhook_data = {
                "request_id": request_id,
                "status": "completed",
                "finetune_id": finetune_id,
                **result
            }
            
            print(f"\nüíæ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î —á–µ—Ä–µ–∑ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫...")
            
            async with get_session() as session:
                training_service = AvatarTrainingService(session)
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º webhook
                success = await training_service.handle_webhook(webhook_data)
                
                if success:
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
                    stmt = select(Avatar).where(Avatar.id == avatar_id)
                    result_check = await session.execute(stmt)
                    avatar = result_check.scalar_one_or_none()
                    
                    if avatar:
                        print(f"\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤–∞—Ç–∞—Ä–µ:")
                        print(f"   –°—Ç–∞—Ç—É—Å: {avatar.status}")
                        print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {avatar.training_progress}%")
                        print(f"   Finetune ID: {avatar.finetune_id}")
                        print(f"   Model URL: {avatar.model_url}")
                        print(f"   Config URL: {avatar.config_url}")
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ webhook")
                    
                    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    print(f"\nüîß –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
                    
                    update_data = {
                        'status': AvatarStatus.READY,
                        'training_progress': 100,
                        'finetune_id': finetune_id
                    }
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º URLs –µ—Å–ª–∏ –µ—Å—Ç—å
                    if 'diffusers_lora_file' in result and 'url' in result['diffusers_lora_file']:
                        update_data['model_url'] = result['diffusers_lora_file']['url']
                    
                    if 'config_file' in result and 'url' in result['config_file']:
                        update_data['config_url'] = result['config_file']['url']
                    
                    update_stmt = update(Avatar).where(Avatar.id == avatar_id).values(**update_data)
                    await session.execute(update_stmt)
                    await session.commit()
                    
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞–ø—Ä—è–º—É—é")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ FAL AI: {e}")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            print(f"\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ FAL AI...")
            
            async with get_session() as session:
                update_stmt = update(Avatar).where(Avatar.id == avatar_id).values(
                    status=AvatarStatus.READY,
                    training_progress=100,
                    finetune_id=finetune_id
                )
                await session.execute(update_stmt)
                await session.commit()
                
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ READY")
            
            return True
        
    except ValueError:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UUID: {avatar_id_str}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

async def check_and_fix_avatar_status(avatar_id_str: str):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≤–∞—Ç–∞—Ä–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    
    Args:
        avatar_id_str: ID –∞–≤–∞—Ç–∞—Ä–∞
    """
    try:
        avatar_id = UUID(avatar_id_str)
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤–∞—Ç–∞—Ä–∞: {avatar_id}")
        
        async with get_session() as session:
            # –ü–æ–ª—É—á–∞–µ–º –∞–≤–∞—Ç–∞—Ä
            stmt = select(Avatar).where(Avatar.id == avatar_id)
            result = await session.execute(stmt)
            avatar = result.scalar_one_or_none()
            
            if not avatar:
                print(f"‚ùå –ê–≤–∞—Ç–∞—Ä {avatar_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
                return False
            
            print(f"üìã –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤–∞—Ç–∞—Ä–µ:")
            print(f"   –ò–º—è: {avatar.name}")
            print(f"   –°—Ç–∞—Ç—É—Å: {avatar.status}")
            print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {avatar.training_progress}%")
            print(f"   Finetune ID: {avatar.finetune_id}")
            print(f"   FAL Request ID: {avatar.fal_request_id}")
            print(f"   Model URL: {avatar.model_url}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å request_id, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ FAL AI
            if avatar.fal_request_id:
                print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ FAL AI...")
                
                fal_service = FALTrainingService()
                
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
                    status_result = await fal_service.check_training_status(
                        avatar.fal_request_id, 
                        "style"
                    )
                    
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç FAL AI:")
                    print(f"   Status: {status_result.get('status', 'unknown')}")
                    
                    # –ï—Å–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ —Å—Ç–∞—Ç—É—Å –≤ –ë–î –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω
                    if (status_result.get('status') == 'completed' and 
                        avatar.status != AvatarStatus.READY):
                        
                        print(f"\nüîß –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º...")
                        
                        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        result = await fal_service.get_training_result(
                            avatar.fal_request_id,
                            "style"
                        )
                        
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º finetune_id –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        finetune_id = result.get('finetune_id', avatar.fal_request_id)
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                        await manual_webhook_update(
                            avatar_id_str, 
                            avatar.fal_request_id, 
                            finetune_id
                        )
                        
                        return True
                    
                    elif avatar.status == AvatarStatus.READY:
                        print(f"‚úÖ –°—Ç–∞—Ç—É—Å —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π - –∞–≤–∞—Ç–∞—Ä –≥–æ—Ç–æ–≤")
                        return True
                    
                    else:
                        print(f"‚è≥ –û–±—É—á–µ–Ω–∏–µ –µ—â–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ")
                        return True
                
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ FAL AI: {e}")
                    return False
            
            else:
                print(f"‚ö†Ô∏è FAL Request ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) == 4:
        # –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        avatar_id = sys.argv[1]
        request_id = sys.argv[2]
        finetune_id = sys.argv[3]
        print(f"üîß –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞")
        asyncio.run(manual_webhook_update(avatar_id, request_id, finetune_id))
    elif len(sys.argv) == 2:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        avatar_id = sys.argv[1]
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞")
        asyncio.run(check_and_fix_avatar_status(avatar_id))
    else:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        print(f"üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"   python manual_webhook_fix.py <avatar_id>                                    # –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        print(f"   python manual_webhook_fix.py <avatar_id> <request_id> <finetune_id>         # –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")

if __name__ == "__main__":
    print(f"üöÄ –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è")
    print(f"")
    
    main() 