#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è finetune_id –∞–≤–∞—Ç–∞—Ä–∞ SERGEY-STYLE-PROD
–ù–æ–≤—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π finetune_id: 5ae6bfaa-3970-47c5-afd2-085c67a8ef07
"""
import asyncio
import sys
import os
from datetime import datetime, timezone

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.database.models import Avatar, AvatarStatus, AvatarTrainingType
from app.core.database import get_session
from sqlalchemy import select, update
from uuid import UUID

async def update_sergey_finetune_id():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç finetune_id –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞ SERGEY-STYLE-PROD"""
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    avatar_name = "SERGEY-STYLE-PROD"
    new_finetune_id = "5ae6bfaa-3970-47c5-afd2-085c67a8ef07"  # –ù–û–í–´–ô –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID
    
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ finetune_id –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞ {avatar_name}")
    print(f"   –ù–æ–≤—ã–π finetune_id: {new_finetune_id}")
    print("="*60)
    
    async with get_session() as session:
        # –ò—â–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ –∏–º–µ–Ω–∏
        query = select(Avatar).where(Avatar.name == avatar_name)
        result = await session.execute(query)
        avatar = result.scalar_one_or_none()
        
        if not avatar:
            print(f"‚ùå –ê–≤–∞—Ç–∞—Ä '{avatar_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        print(f"üé≠ –ù–∞–π–¥–µ–Ω –∞–≤–∞—Ç–∞—Ä:")
        print(f"   ID: {avatar.id}")
        print(f"   –ò–º—è: {avatar.name}")
        print(f"   –¢–∏–ø: {avatar.training_type}")
        print(f"   –°—Ç–∞—Ç—É—Å: {avatar.status}")
        print(f"   –¢–µ–∫—É—â–∏–π finetune_id: {avatar.finetune_id}")
        print(f"   LoRA —Ñ–∞–π–ª: {avatar.diffusers_lora_file_url}")
        print(f"   Trigger word: {avatar.trigger_word}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∞–≤–∞—Ç–∞—Ä–∞
        if avatar.training_type != AvatarTrainingType.STYLE:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ê–≤–∞—Ç–∞—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∏–ø–∞ STYLE, –Ω–æ –Ω–∞–π–¥–µ–Ω {avatar.training_type}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        has_lora = bool(avatar.diffusers_lora_file_url)
        if has_lora:
            print(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: Style –∞–≤–∞—Ç–∞—Ä –∏–º–µ–µ—Ç LoRA —Ñ–∞–π–ª - –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
        
        print(f"\nüîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   –°—Ç–∞—Ä—ã–π finetune_id: {avatar.finetune_id}")
        print(f"   –ù–æ–≤—ã–π finetune_id:  {new_finetune_id}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        confirm = input(f"\n‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (y/n): ").strip().lower()
        if confirm != 'y':
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            return False
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–æ–±–ª—é–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
        update_data = {
            "finetune_id": new_finetune_id,
            "diffusers_lora_file_url": None,  # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ—á–∏—â–∞–µ–º –¥–ª—è Style –∞–≤–∞—Ç–∞—Ä–∞
            "config_file_url": None,  # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ—á–∏—â–∞–µ–º
            "updated_at": datetime.now(timezone.utc)
        }
        
        # –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º trigger_word –¥–ª—è Style –∞–≤–∞—Ç–∞—Ä–∞
        if not avatar.trigger_word:
            update_data["trigger_word"] = "TOK"
            print(f"   –î–æ–±–∞–≤–ª–µ–Ω trigger_word: TOK")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤ avatar_data
        avatar_data = avatar.avatar_data or {}
        avatar_data["finetune_update_history"] = avatar_data.get("finetune_update_history", [])
        avatar_data["finetune_update_history"].append({
            "timestamp": datetime.now(timezone.utc).isoformat(),
            "old_finetune_id": avatar.finetune_id,
            "new_finetune_id": new_finetune_id,
            "reason": "Updated to new valid finetune_id from manual request",
            "updated_by": "update_sergey_finetune_id_script",
            "cleared_lora": bool(avatar.diffusers_lora_file_url),
            "added_trigger_word": not bool(avatar.trigger_word)
        })
        update_data["avatar_data"] = avatar_data
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        print(f"\nüîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
        stmt = update(Avatar).where(Avatar.id == avatar.id).values(**update_data)
        await session.execute(stmt)
        await session.commit()
        
        print(f"‚úÖ finetune_id —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = await session.execute(select(Avatar).where(Avatar.id == avatar.id))
        updated_avatar = result.scalar_one()
        
        print(f"\nüìä –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞:")
        print(f"   –ò–º—è: {updated_avatar.name}")
        print(f"   –¢–∏–ø: {updated_avatar.training_type}")
        print(f"   finetune_id: {updated_avatar.finetune_id}")
        print(f"   LoRA —Ñ–∞–π–ª: {updated_avatar.diffusers_lora_file_url}")
        print(f"   Config —Ñ–∞–π–ª: {updated_avatar.config_file_url}")
        print(f"   Trigger word: {updated_avatar.trigger_word}")
        print(f"   –°—Ç–∞—Ç—É—Å: {updated_avatar.status}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_avatar.updated_at}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏:")
        
        structure_valid = True
        if not updated_avatar.finetune_id:
            print(f"‚ùå Style –∞–≤–∞—Ç–∞—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å finetune_id")
            structure_valid = False
        
        if updated_avatar.diffusers_lora_file_url:
            print(f"‚ùå Style –∞–≤–∞—Ç–∞—Ä –ù–ï –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å LoRA —Ñ–∞–π–ª")
            structure_valid = False
        
        if not updated_avatar.trigger_word:
            print(f"‚ùå Style –∞–≤–∞—Ç–∞—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å trigger_word")
            structure_valid = False
        
        if structure_valid:
            print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –¥–ª—è Style —Ç–∏–ø–∞")
            print(f"‚úÖ –ê–≤–∞—Ç–∞—Ä –≥–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        return True

async def test_generation_readiness():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∞–≤–∞—Ç–∞—Ä–∞ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    print(f"\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    avatar_name = "SERGEY-STYLE-PROD"
    
    async with get_session() as session:
        query = select(Avatar).where(Avatar.name == avatar_name)
        result = await session.execute(query)
        avatar = result.scalar_one_or_none()
        
        if not avatar:
            print(f"‚ùå –ê–≤–∞—Ç–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
        ready_for_generation = (
            avatar.status == AvatarStatus.COMPLETED and
            avatar.training_type == AvatarTrainingType.STYLE and
            avatar.finetune_id and
            not avatar.diffusers_lora_file_url and
            avatar.trigger_word
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {avatar.status} ({'‚úÖ' if avatar.status == AvatarStatus.COMPLETED else '‚ùå'})")
        print(f"   –¢–∏–ø: {avatar.training_type} ({'‚úÖ' if avatar.training_type == AvatarTrainingType.STYLE else '‚ùå'})")
        print(f"   finetune_id: {'‚úÖ' if avatar.finetune_id else '‚ùå'}")
        print(f"   LoRA –æ—á–∏—â–µ–Ω: {'‚úÖ' if not avatar.diffusers_lora_file_url else '‚ùå'}")
        print(f"   trigger_word: {'‚úÖ' if avatar.trigger_word else '‚ùå'}")
        
        if ready_for_generation:
            print(f"\nüéØ ‚úÖ –ê–≤–∞—Ç–∞—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")
            print(f"   API endpoint: fal-ai/flux-pro/v1.1-ultra-finetuned")
            print(f"   finetune_id: {avatar.finetune_id}")
            print(f"   trigger_word: {avatar.trigger_word}")
        else:
            print(f"\n‚ö†Ô∏è –ê–≤–∞—Ç–∞—Ä –ù–ï –≥–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.")
        
        return ready_for_generation

if __name__ == "__main__":
    async def main():
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º finetune_id
            success = await update_sergey_finetune_id()
            
            if success:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                await test_generation_readiness()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
    
    asyncio.run(main()) 