#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è enum —Ç–∏–ø–æ–≤ –≤ PostgreSQL
1. –û–±–Ω–æ–≤–ª—è–µ—Ç enum –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è—è uppercase –∑–Ω–∞—á–µ–Ω–∏—è
2. –ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ uppercase
3. –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ lowercase –∑–Ω–∞—á–µ–Ω–∏—è
"""
import asyncio
import asyncpg

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î
DB_CONFIG = {
    'host': '192.168.0.4',
    'port': 5432,
    'user': 'aisha_user',
    'password': 'KbZZGJHX09KSH7r9ev4m',
    'database': 'aisha'
}


async def fix_postgresql_enums():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ enum —Ç–∏–ø–æ–≤ –≤ PostgreSQL"""
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PostgreSQL enum —Ç–∏–ø–æ–≤...")
    
    conn = await asyncpg.connect(**DB_CONFIG)
    
    try:
        # 1. AVATARGENDER enum
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatargender enum...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è enum
        result = await conn.fetch("""
            SELECT enumlabel 
            FROM pg_enum 
            WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'avatargender')
            ORDER BY enumsortorder
        """)
        current_values = [row['enumlabel'] for row in result]
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è avatargender:", current_values)
        
        # –î–æ–±–∞–≤–ª—è–µ–º uppercase –∑–Ω–∞—á–µ–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if 'MALE' not in current_values:
            await conn.execute("ALTER TYPE avatargender ADD VALUE 'MALE'")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ 'MALE'")
            
        if 'FEMALE' not in current_values:
            await conn.execute("ALTER TYPE avatargender ADD VALUE 'FEMALE'")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ 'FEMALE'")
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        updated_male = await conn.execute("UPDATE avatars SET gender = 'MALE' WHERE gender = 'male'")
        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ 'male' -> 'MALE': {updated_male}")
        
        updated_female = await conn.execute("UPDATE avatars SET gender = 'FEMALE' WHERE gender = 'female'")
        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ 'female' -> 'FEMALE': {updated_female}")
        
        # 2. AVATARSTATUS enum
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatarstatus enum...")
        
        result = await conn.fetch("""
            SELECT enumlabel 
            FROM pg_enum 
            WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'avatarstatus')
            ORDER BY enumsortorder
        """)
        current_statuses = [row['enumlabel'] for row in result]
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è avatarstatus:", current_statuses)
        
        # –ú–∞–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–æ–≤
        status_pairs = [
            ('draft', 'DRAFT'),
            ('photos_uploading', 'PHOTOS_UPLOADING'),
            ('ready_for_training', 'READY_FOR_TRAINING'),
            ('training', 'TRAINING'),
            ('completed', 'COMPLETED'),
            ('error', 'ERROR'),
            ('cancelled', 'CANCELLED')
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º uppercase –∑–Ω–∞—á–µ–Ω–∏—è
        for lowercase, uppercase in status_pairs:
            if uppercase not in current_statuses:
                await conn.execute(f"ALTER TYPE avatarstatus ADD VALUE '{uppercase}'")
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ '{uppercase}'")
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        for lowercase, uppercase in status_pairs:
            if lowercase in current_statuses:
                updated = await conn.execute(f"UPDATE avatars SET status = '{uppercase}' WHERE status = '{lowercase}'")
                if updated != "UPDATE 0":
                    print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ '{lowercase}' -> '{uppercase}': {updated}")
        
        # 3. GENERATIONSTATUS enum
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º generationstatus enum...")
        
        result = await conn.fetch("""
            SELECT enumlabel 
            FROM pg_enum 
            WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'generationstatus')
            ORDER BY enumsortorder
        """)
        current_gen_statuses = [row['enumlabel'] for row in result]
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è generationstatus:", current_gen_statuses)
        
        # –ú–∞–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        gen_status_pairs = [
            ('pending', 'PENDING'),
            ('processing', 'PROCESSING'),
            ('completed', 'COMPLETED'),
            ('failed', 'FAILED')
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º uppercase –∑–Ω–∞—á–µ–Ω–∏—è
        for lowercase, uppercase in gen_status_pairs:
            if uppercase not in current_gen_statuses:
                await conn.execute(f"ALTER TYPE generationstatus ADD VALUE '{uppercase}'")
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ '{uppercase}'")
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        for lowercase, uppercase in gen_status_pairs:
            if lowercase in current_gen_statuses:
                updated = await conn.execute(f"UPDATE image_generations SET status = '{uppercase}' WHERE status = '{lowercase}'")
                if updated != "UPDATE 0":
                    print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ '{lowercase}' -> '{uppercase}': {updated}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
        
        # –î–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
        avatar_genders = await conn.fetch("SELECT DISTINCT gender FROM avatars ORDER BY gender")
        avatar_statuses = await conn.fetch("SELECT DISTINCT status FROM avatars ORDER BY status")
        gen_statuses = await conn.fetch("SELECT DISTINCT status FROM image_generations ORDER BY status")
        
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ gender –≤ –¥–∞–Ω–Ω—ã—Ö:", [row['gender'] for row in avatar_genders])
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ avatar status –≤ –¥–∞–Ω–Ω—ã—Ö:", [row['status'] for row in avatar_statuses])
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ generation status –≤ –¥–∞–Ω–Ω—ã—Ö:", [row['status'] for row in gen_statuses])
        
        # Enum –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        avatar_gender_enum = await conn.fetch("""
            SELECT enumlabel 
            FROM pg_enum 
            WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'avatargender')
            ORDER BY enumsortorder
        """)
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è avatargender enum:", [row['enumlabel'] for row in avatar_gender_enum])
        
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PostgreSQL enum –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞ SQLAlchemy")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        await conn.close()


if __name__ == "__main__":
    asyncio.run(fix_postgresql_enums()) 