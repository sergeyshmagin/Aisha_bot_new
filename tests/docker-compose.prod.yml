version: '3.8'

services:
  # ======================== APPLICATION SERVICES ========================
  
  aisha-bot:
    build:
      context: .
      dockerfile: docker/Dockerfile.bot
      target: production
    container_name: aisha-bot-prod
    restart: always
    environment:
      # Подключение к внешним сервисам
      - DATABASE_URL=postgresql+asyncpg://aisha:${POSTGRES_PASSWORD}@${DATABASE_HOST}:5432/aisha_v2
      - REDIS_URL=redis://${REDIS_HOST}:6379/0
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - DEBUG=false
      - ENVIRONMENT=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FAL_API_KEY=${FAL_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - PASSWORD_SALT=${PASSWORD_SALT}
    env_file:
      - .env.docker.prod
    volumes:
      - /opt/aisha-backend/logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - aisha-prod-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  aisha-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
      target: production
    container_name: aisha-api-prod
    restart: always
    ports:
      - "127.0.0.1:8000:8000"  # Bind только на localhost для nginx upstream
    environment:
      # Подключение к внешним сервисам
      - DATABASE_URL=postgresql+asyncpg://aisha:${POSTGRES_PASSWORD}@${DATABASE_HOST}:5432/aisha_v2
      - REDIS_URL=redis://${REDIS_HOST}:6379/0
      - DEBUG=false
      - ENVIRONMENT=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FAL_API_KEY=${FAL_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - PASSWORD_SALT=${PASSWORD_SALT}
      - WEBHOOK_HOST=aibots.kz
      - WEBHOOK_PORT=8443
      - FAL_WEBHOOK_URL=https://aibots.kz:8443/api/v1/avatar/status_update
    env_file:
      - .env.docker.prod
    volumes:
      - /opt/aisha-backend/logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - aisha-prod-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ======================== REVERSE PROXY (только в prod) ========================

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: aisha-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl_certificate:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - aisha-api
    networks:
      - aisha-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  aisha-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 