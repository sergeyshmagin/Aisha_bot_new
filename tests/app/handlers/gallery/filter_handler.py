"""
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏
"""
from datetime import datetime
from typing import Dict, List, Optional
from uuid import UUID

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from app.core.logger import get_logger
from app.services.gallery_service import gallery_service
from app.handlers.gallery.states import GalleryFilterStates, GalleryFilterData, GalleryData, gallery_state_manager
from app.handlers.gallery.main_handler import show_gallery_image, _safe_send_message

logger = get_logger(__name__)

router = Router()


class GalleryFilterHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏"""
    
    async def show_filter_menu(self, callback: CallbackQuery, state: FSMContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≥–∞–ª–µ—Ä–µ–∏"""
        try:
            text = """üîç **–§–∏–ª—å—Ç—Ä—ã –≥–∞–ª–µ—Ä–µ–∏**

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:

üìÖ **–ü–æ –≤—Ä–µ–º–µ–Ω–∏:**
‚Ä¢ –ó–∞ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü
‚Ä¢ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—ã

üìê **–ü–æ —Ä–∞–∑–º–µ—Ä—É:**
‚Ä¢ –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ (1:1)
‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ (3:4, 9:16)
‚Ä¢ –ê–ª—å–±–æ–º–Ω—ã–µ (4:3, 16:9)

üé≠ **–ü–æ –∞–≤–∞—Ç–∞—Ä—É:**
‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
‚Ä¢ –¢–∏–ø –æ–±—É—á–µ–Ω–∏—è"""

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="üìÖ –ü–æ –≤—Ä–µ–º–µ–Ω–∏", callback_data="filter_time"),
                    InlineKeyboardButton(text="üìê –ü–æ —Ä–∞–∑–º–µ—Ä—É", callback_data="filter_size")
                ],
                [
                    InlineKeyboardButton(text="üé≠ –ü–æ –∞–≤–∞—Ç–∞—Ä—É", callback_data="filter_avatar")
                ],
                [
                    InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å", callback_data="apply_filters"),
                    InlineKeyboardButton(text="üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å", callback_data="reset_filters")
                ],
                [
                    InlineKeyboardButton(text="üîô –ö –≥–∞–ª–µ—Ä–µ–µ", callback_data="my_gallery")
                ]
            ])

            await _safe_send_message(callback, text, keyboard)
            await state.set_state(GalleryFilterStates.selecting_filters)
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤", show_alert=True)


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
gallery_filter_handler = GalleryFilterHandler()


@router.callback_query(F.data == "gallery_filters")
async def handle_gallery_filters(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ callback –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
    logger.info(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ callback gallery_filters –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    await gallery_filter_handler.show_filter_menu(callback, state)


@router.callback_query(F.data == "filter_time")
async def handle_filter_time(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏"""
    text = """üìÖ **–§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏**

–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥:"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ó–∞ –¥–µ–Ω—å", callback_data="time_day"),
            InlineKeyboardButton(text="–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="time_week")
        ],
        [
            InlineKeyboardButton(text="–ó–∞ –º–µ—Å—è—Ü", callback_data="time_month"),
            InlineKeyboardButton(text="–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", callback_data="time_all")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="gallery_filters")
        ]
    ])

    await _safe_send_message(callback, text, keyboard)


@router.callback_query(F.data == "filter_size")
async def handle_filter_size(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ä–∞–∑–º–µ—Ä—É"""
    text = """üìê **–§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–∑–º–µ—Ä—É**

–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω:"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚¨õ –ö–≤–∞–¥—Ä–∞—Ç 1:1", callback_data="size_1_1")
        ],
        [
            InlineKeyboardButton(text="üì± –ü–æ—Ä—Ç—Ä–µ—Ç 3:4", callback_data="size_3_4"),
            InlineKeyboardButton(text="üì± –ü–æ—Ä—Ç—Ä–µ—Ç 9:16", callback_data="size_9_16")
        ],
        [
            InlineKeyboardButton(text="üñºÔ∏è –ê–ª—å–±–æ–º 4:3", callback_data="size_4_3"),
            InlineKeyboardButton(text="üñºÔ∏è –ê–ª—å–±–æ–º 16:9", callback_data="size_16_9")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="gallery_filters")
        ]
    ])

    await _safe_send_message(callback, text, keyboard)


@router.callback_query(F.data == "filter_avatar")
async def handle_filter_avatar(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∞–≤–∞—Ç–∞—Ä—É"""
    await callback.answer("üöß –§–∏–ª—å—Ç—Ä –ø–æ –∞–≤–∞—Ç–∞—Ä–∞–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
@router.callback_query(F.data.startswith("time_"))
async def handle_time_filter_value(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    value = callback.data.replace("time_", "")
    await callback.answer(f"üöß –§–∏–ª—å—Ç—Ä '{value}' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data.startswith("size_"))
async def handle_size_filter_value(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
    value = callback.data.replace("size_", "").replace("_", ":")
    await callback.answer(f"üöß –§–∏–ª—å—Ç—Ä —Ä–∞–∑–º–µ—Ä–∞ '{value}' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data == "apply_filters")
async def apply_filters(callback: CallbackQuery, state: FSMContext):
    """
    –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
    """
    try:
        start_time = datetime.utcnow()
        user_id = UUID(str(callback.from_user.id))
        
        # ‚úÖ 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
        data = await state.get_data()
        filter_data = data.get("filter_data", GalleryFilterData())
        
        # ‚úÖ 2. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Ñ–∏–ª—å—Ç—Ä–æ–≤
        filters = {}
        
        if filter_data.time_filter:
            filters["time_filter"] = filter_data.time_filter
            
        if filter_data.size_filters:
            filters["size_filters"] = filter_data.size_filters
            
        if filter_data.avatar_filters:
            filters["avatar_filters"] = filter_data.avatar_filters
        
        # ‚úÖ 3. –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å
        images_data, total_count, has_more = await gallery_service.get_user_images_optimized(
            user_id=user_id,
            filters=filters,
            page=1,
            per_page=100,
            force_refresh=True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        )
        
        if not images_data:
            text = "üîç *–§–∏–ª—å—Ç—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã*\n\n"
            text += "‚ùå –ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n\n"
            text += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏."
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîß –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="gallery_filters")],
                [InlineKeyboardButton(text="üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="reset_filters")],
                [InlineKeyboardButton(text="üîô –ì–∞–ª–µ—Ä–µ—è", callback_data="gallery")]
            ])
            
            await _safe_send_message(callback, text, keyboard)
            await state.clear()
            return
        
        # ‚úÖ 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–µ—à–µ
        gallery_cache_key = f"filtered_gallery_{user_id}_{int(datetime.utcnow().timestamp())}"
        gallery_data = GalleryData(
            image_ids=[img["id"] for img in images_data],
            current_index=0,
            total_count=total_count,
            user_id=str(user_id),
            filters=filters
        )
        await gallery_state_manager.set_gallery_data(gallery_cache_key, gallery_data)
        
        # ‚úÖ 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await show_gallery_image(callback, 0, gallery_cache_key)
        
        # ‚úÖ 6. –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
        await state.clear()
        
        # ‚úÖ 7. –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        end_time = datetime.utcnow()
        duration = (end_time - start_time).total_seconds() * 1000
        logger.info(f"üîç –§–∏–ª—å—Ç—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∑–∞ {duration:.0f}ms. –ù–∞–π–¥–µ–Ω–æ {total_count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤")


@router.callback_query(F.data == "reset_filters")
async def reset_filters(callback: CallbackQuery, state: FSMContext):
    """
    –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    try:
        start_time = datetime.utcnow()
        user_id = UUID(str(callback.from_user.id))
        
        # ‚úÖ 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        images_data, total_count, has_more = await gallery_service.get_user_images_optimized(
            user_id=user_id,
            filters=None,
            page=1,
            per_page=100,
            force_refresh=False
        )
        
        if not images_data:
            text = "üì∑ *–í–∞—à–∞ –≥–∞–ª–µ—Ä–µ—è –ø—É—Å—Ç–∞*\n\n–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!"
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üé® –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="generate_image")],
                [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
            
            await _safe_send_message(callback, text, keyboard)
            await state.clear()
            return
        
        # ‚úÖ 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        gallery_cache_key = f"gallery_{user_id}_{int(datetime.utcnow().timestamp())}"
        gallery_data = GalleryData(
            image_ids=[img["id"] for img in images_data],
            current_index=0,
            total_count=total_count,
            user_id=str(user_id),
            filters={}
        )
        await gallery_state_manager.set_gallery_data(gallery_cache_key, gallery_data)
        
        # ‚úÖ 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await show_gallery_image(callback, 0, gallery_cache_key)
        
        # ‚úÖ 4. –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
        # ‚úÖ 5. –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        end_time = datetime.utcnow()
        duration = (end_time - start_time).total_seconds() * 1000
        logger.info(f"üóëÔ∏è –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã –∑–∞ {duration:.0f}ms. –ü–æ–∫–∞–∑–∞–Ω–æ {total_count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤") 