#!/bin/bash

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

set -e

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .env.docker.dev ]; then
    source .env.docker.dev
elif [ -f .env.docker.prod ]; then
    source .env.docker.prod
else
    echo "‚ùå –§–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] ‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $1${NC}"
}

check_service() {
    local service_name=$1
    local host=$2
    local port=$3
    local timeout=${4:-5}
    
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name –Ω–∞ $host:$port..."
    
    if timeout $timeout bash -c "nc -z $host $port" 2>/dev/null; then
        log_success "$service_name –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        log_error "$service_name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $host:$port"
        return 1
    fi
}

check_minio_api() {
    local endpoint=$1
    local timeout=${2:-10}
    
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ MinIO API –Ω–∞ $endpoint..."
    
    if timeout $timeout bash -c "curl -s -f http://$endpoint/minio/health/live" >/dev/null 2>&1; then
        log_success "MinIO API –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        log_warning "MinIO API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è—é TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..."
        local host=$(echo $endpoint | cut -d: -f1)
        local port=$(echo $endpoint | cut -d: -f2)
        check_service "MinIO TCP" $host $port
        return $?
    fi
}

main() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è Aisha Bot v2..."
    
    local all_ok=true
    
    # PostgreSQL
    if ! check_service "PostgreSQL" "$DATABASE_HOST" "5432"; then
        all_ok=false
    fi
    
    # Redis
    if ! check_service "Redis" "$REDIS_HOST" "6379"; then
        all_ok=false
    fi
    
    # MinIO
    if ! check_minio_api "$MINIO_ENDPOINT"; then
        all_ok=false
    fi
    
    echo ""
    if [ "$all_ok" = true ]; then
        log_success "üéâ –í—Å–µ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
        exit 0
    else
        log_error "‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤."
        echo ""
        echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
        echo "  - PostgreSQL: psql -h $DATABASE_HOST -p 5432 -U aisha -d aisha_v2"
        echo "  - Redis: redis-cli -h $REDIS_HOST -p 6379 ping"
        echo "  - MinIO: curl http://$MINIO_ENDPOINT/minio/health/live"
        exit 1
    fi
}

main "$@" 