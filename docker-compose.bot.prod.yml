version: '3.8'

# ============================================================================
# ПРОДАКШН КОНФИГУРАЦИЯ для масштабируемых ботов
# Сервер: 192.168.0.10 (aibots.kz)
# Redis: 192.168.0.3 (сессии aiogram)
# PostgreSQL/MinIO/Registry: 192.168.0.4
# ============================================================================

networks:
  aisha_bot_cluster:
    external: true

volumes:
  bot_logs:
    driver: local
  shared_storage:
    driver: local

services:
  # ==================== ГЛАВНЫЙ БОТ (Polling) ====================
  aisha-bot-1:
    image: aisha-bot:latest
    container_name: aisha-bot-polling-1
    restart: unless-stopped
    volumes:
      - bot_logs:/app/logs
      - shared_storage:/app/storage
    networks:
      aisha_bot_cluster:
        ipv4_address: 172.26.0.30
    environment:
      # Application
      - PYTHONPATH=/app
      - DEBUG=false
      - BOT_MODE=polling
      - INSTANCE_ID=bot-polling-1
      - BOT_INSTANCE_NAME=AISHA_BOT_1
      
      # Telegram Bot
      - TELEGRAM_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # External PostgreSQL
      - POSTGRES_HOST=192.168.0.4
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aisha
      - POSTGRES_USER=aisha_user
      - POSTGRES_PASSWORD=KbZZGJHX09KSH7r9ev4m
      
      # External Redis (для сессий aiogram и кеша)
      - REDIS_HOST=192.168.0.3
      - REDIS_PORT=6379
      - REDIS_DB=0  # DB 0 для сессий aiogram
      - REDIS_PASSWORD=wd7QuwAbG0wtyoOOw3Sm
      - REDIS_SSL=false
      - REDIS_POOL_SIZE=15
      
      # Сессии aiogram в Redis
      - AIOGRAM_SESSION_REDIS_HOST=192.168.0.3
      - AIOGRAM_SESSION_REDIS_PORT=6379
      - AIOGRAM_SESSION_REDIS_DB=0
      - AIOGRAM_SESSION_REDIS_PASSWORD=wd7QuwAbG0wtyoOOw3Sm
      - AIOGRAM_SESSION_TTL=3600
      
      # External MinIO
      - MINIO_ENDPOINT=192.168.0.4:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=74rSbw9asQ1uMzcFeM5G
      - MINIO_SECURE=false
      
      # FAL AI
      - FAL_API_KEY=${FAL_API_KEY}
      - FAL_WEBHOOK_URL=https://aibots.kz:8443/api/v1/avatar/status_update
      
      # Координация между экземплярами
      - CLUSTER_COORDINATION_REDIS_DB=2
      - BOT_CLUSTER_SIZE=2
      - BOT_CLUSTER_NODE_ID=1
      
      # Performance
      - ASYNCIO_TASK_LIMIT=100
      - MAX_CONCURRENT_GENERATIONS=5
      - GALLERY_CACHE_SIZE=1000
      
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; print('Bot healthy')"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1024M
        reservations:
          cpus: '0.75'
          memory: 512M
    labels:
      - "com.aisha.service=telegram-bot"
      - "com.aisha.instance=primary"
      - "com.aisha.mode=polling"

  # ==================== РЕЗЕРВНЫЙ БОТ (Polling) ====================
  aisha-bot-2:
    image: aisha-bot:latest
    container_name: aisha-bot-polling-2
    restart: unless-stopped
    volumes:
      - bot_logs:/app/logs
      - shared_storage:/app/storage
    networks:
      aisha_bot_cluster:
        ipv4_address: 172.26.0.31
    environment:
      # Application
      - PYTHONPATH=/app
      - DEBUG=false
      - BOT_MODE=polling_standby  # Режим standby
      - INSTANCE_ID=bot-polling-2
      - BOT_INSTANCE_NAME=AISHA_BOT_2
      
      # Telegram Bot
      - TELEGRAM_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # External PostgreSQL
      - POSTGRES_HOST=192.168.0.4
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aisha
      - POSTGRES_USER=aisha_user
      - POSTGRES_PASSWORD=KbZZGJHX09KSH7r9ev4m
      
      # External Redis
      - REDIS_HOST=192.168.0.3
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=wd7QuwAbG0wtyoOOw3Sm
      - REDIS_SSL=false
      - REDIS_POOL_SIZE=15
      
      # Сессии aiogram в Redis
      - AIOGRAM_SESSION_REDIS_HOST=192.168.0.3
      - AIOGRAM_SESSION_REDIS_PORT=6379
      - AIOGRAM_SESSION_REDIS_DB=0
      - AIOGRAM_SESSION_REDIS_PASSWORD=wd7QuwAbG0wtyoOOw3Sm
      - AIOGRAM_SESSION_TTL=3600
      
      # External MinIO
      - MINIO_ENDPOINT=192.168.0.4:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=74rSbw9asQ1uMzcFeM5G
      - MINIO_SECURE=false
      
      # FAL AI
      - FAL_API_KEY=${FAL_API_KEY}
      - FAL_WEBHOOK_URL=https://aibots.kz:8443/api/v1/avatar/status_update
      
      # Координация между экземплярами
      - CLUSTER_COORDINATION_REDIS_DB=2
      - BOT_CLUSTER_SIZE=2
      - BOT_CLUSTER_NODE_ID=2
      
      # Performance (меньше для standby)
      - ASYNCIO_TASK_LIMIT=50
      - MAX_CONCURRENT_GENERATIONS=3
      - GALLERY_CACHE_SIZE=500
      
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; print('Bot healthy')"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 768M
        reservations:
          cpus: '0.5'
          memory: 384M
    labels:
      - "com.aisha.service=telegram-bot"
      - "com.aisha.instance=standby"
      - "com.aisha.mode=polling_standby"

  # ==================== ВОРКЕР ДЛЯ ФОНОВЫХ ЗАДАЧ ====================
  aisha-worker:
    image: aisha-bot:latest
    container_name: aisha-worker-1
    restart: unless-stopped
    volumes:
      - bot_logs:/app/logs
      - shared_storage:/app/storage
    networks:
      aisha_bot_cluster:
        ipv4_address: 172.26.0.40
    environment:
      # Application
      - PYTHONPATH=/app
      - DEBUG=false
      - BOT_MODE=worker
      - INSTANCE_ID=worker-1
      - BOT_INSTANCE_NAME=AISHA_WORKER_1
      
      # External PostgreSQL
      - POSTGRES_HOST=192.168.0.4
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aisha
      - POSTGRES_USER=aisha_user
      - POSTGRES_PASSWORD=KbZZGJHX09KSH7r9ev4m
      
      # External Redis
      - REDIS_HOST=192.168.0.3
      - REDIS_PORT=6379
      - REDIS_DB=3  # Отдельная DB для воркера
      - REDIS_PASSWORD=wd7QuwAbG0wtyoOOw3Sm
      - REDIS_SSL=false
      - REDIS_POOL_SIZE=10
      
      # External MinIO
      - MINIO_ENDPOINT=192.168.0.4:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=74rSbw9asQ1uMzcFeM5G
      - MINIO_SECURE=false
      
      # FAL AI
      - FAL_API_KEY=${FAL_API_KEY}
      
      # Worker settings
      - WORKER_TASKS=avatar_training,image_processing,cleanup
      - WORKER_CONCURRENCY=3
      - WORKER_CHECK_INTERVAL=30
      
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; print('Worker healthy')"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - "com.aisha.service=background-worker"
      - "com.aisha.instance=worker-1" 