#!/bin/bash

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üìä AISHA BOT - –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–†–û–î–ê–ö–®–ù –°–ò–°–¢–ï–ú–´
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –í–µ—Ä—Å–∏—è: 2.0
# –î–∞—Ç–∞: 2025-06-09
# –°—Ç–∞—Ç—É—Å: ‚úÖ –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

set -euo pipefail

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROD_SERVER="192.168.0.10"
PROD_USER="aisha"
PROJECT_ROOT="/opt/aisha-backend"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_section() { echo -e "${CYAN}[===]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers() {
    log_section "üì¶ –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í"
    
    ssh ${PROD_USER}@${PROD_SERVER} "
        echo 'üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:'
        docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}' | grep -E '(aisha|nginx)' || echo '–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤'
        
        echo
        echo 'üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:'
        docker stats --no-stream --format 'table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}' | head -10
    "
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–æ–≤
check_logs() {
    log_section "üìù –õ–û–ì–ò –°–ï–†–í–ò–°–û–í"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
        docker logs aisha-bot-polling-1 --tail 5 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
        
        echo
        echo "‚è∏Ô∏è Standby –±–æ—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏):"
        docker logs aisha-bot-polling-2 --tail 3 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
        
        echo  
        echo "üåê Webhook API 1 (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏):"
        docker logs aisha-webhook-api-1 --tail 3 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
        
        echo
        echo "üåê Webhook API 2 (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏):"
        docker logs aisha-webhook-api-2 --tail 3 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
        
        echo
        echo "üîÑ Nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏):"
        docker logs aisha-nginx-prod --tail 3 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check'–æ–≤
check_health() {
    log_section "üè• –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üíö Healthy –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
        docker ps --filter "health=healthy" --format "table {{.Names}}\t{{.Status}}" || echo "–ù–µ—Ç healthy –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        
        echo
        echo "‚ù§Ô∏è Unhealthy –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
        docker ps --filter "health=unhealthy" --format "table {{.Names}}\t{{.Status}}" || echo "–ù–µ—Ç unhealthy –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
check_system() {
    log_section "üñ•Ô∏è –°–ò–°–¢–ï–ú–ù–´–ï –†–ï–°–£–†–°–´"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üíæ –ü–∞–º—è—Ç—å:"
        free -h | head -2
        
        echo
        echo "üíΩ –î–∏—Å–∫:"
        df -h | grep -E "(/$|/opt)" || df -h | head -2
        
        echo
        echo "üî• CPU Load:"
        uptime
        
        echo
        echo "üîó –°–µ—Ç—å:"
        ss -tuln | grep -E ":80|:443|:5000|:6379|:5432" || echo "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—é—Ç—Å—è"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram API
check_telegram() {
    log_section "üì± TELEGRAM API"
    
    if [[ -n "${TELEGRAM_BOT_TOKEN:-}" ]]; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞..."
        
        response=$(curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe" || echo '{"ok":false}')
        
        if echo "$response" | grep -q '"ok":true'; then
            username=$(echo "$response" | grep -o '"username":"[^"]*"' | cut -d'"' -f4)
            log_info "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${username}"
        else
            log_error "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞"
        fi
    else
        log_warn "‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
check_database() {
    log_section "üóÑÔ∏è –ë–ê–ó–ê –î–ê–ù–ù–´–•"
    
    ssh ${PROD_USER}@${PROD_SERVER} "
        cd ${PROJECT_ROOT}
        
        echo 'üêò PostgreSQL:'
        docker exec postgres-prod psql -U aisha -d aisha_db -c 'SELECT version();' 2>/dev/null | head -3 || echo 'PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
        
        echo
        echo 'üü• Redis:'
        docker exec redis-prod redis-cli ping 2>/dev/null || echo 'Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
    " || log_warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
}

# –°–≤–æ–¥–∫–∞ –ø–æ –∫–ª–∞—Å—Ç–µ—Ä—É
cluster_summary() {
    log_section "üìã –°–í–û–î–ö–ê –ü–û –ö–õ–ê–°–¢–ï–†–£"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        total=$(docker ps | grep -c aisha || echo 0)
        healthy=$(docker ps --filter "health=healthy" | grep -c aisha || echo 0)
        running=$(docker ps --filter "status=running" | grep -c aisha || echo 0)
        
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞:"
        echo "   ‚Ä¢ –í—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Aisha: $total"
        echo "   ‚Ä¢ –ó–∞–ø—É—â–µ–Ω–Ω—ã—Ö: $running"
        echo "   ‚Ä¢ –ó–¥–æ—Ä–æ–≤—ã—Ö: $healthy"
        
        if [[ $running -gt 0 && $healthy -gt 0 ]]; then
            echo "‚úÖ –ö–ª–∞—Å—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
        elif [[ $running -gt 0 ]]; then
            echo "‚ö†Ô∏è –ö–ª–∞—Å—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏"
        else
            echo "‚ùå –ö–ª–∞—Å—Ç–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        fi
    '
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local mode="${1:-full}"
    
    log_info "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Aisha Bot Production"
    log_info "üìç –°–µ—Ä–≤–µ—Ä: ${PROD_USER}@${PROD_SERVER}"
    log_info "üïí $(date)"
    echo
    
    case "$mode" in
        "containers"|"c")
            check_containers
            ;;
        "logs"|"l")
            check_logs
            ;;
        "health"|"h")
            check_health
            ;;
        "system"|"s")
            check_system
            ;;
        "telegram"|"t")
            check_telegram
            ;;
        "database"|"db")
            check_database
            ;;
        "summary"|"sum")
            cluster_summary
            ;;
        "quick"|"q")
            check_containers
            cluster_summary
            ;;
        "full"|*)
            check_containers
            echo
            check_health
            echo
            check_logs
            echo
            check_system
            echo
            check_telegram
            echo
            check_database
            echo
            cluster_summary
            ;;
    esac
    
    echo
    log_info "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –°–ø—Ä–∞–≤–∫–∞
if [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [—Ä–µ–∂–∏–º]"
    echo
    echo "–†–µ–∂–∏–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo "  full, f     - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  quick, q    - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã + —Å–≤–æ–¥–∫–∞)"
    echo "  containers, c - –¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  logs, l     - –¢–æ–ª—å–∫–æ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  health, h   - –¢–æ–ª—å–∫–æ health check"
    echo "  system, s   - –¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã"
    echo "  telegram, t - –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram API"
    echo "  database, db - –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î"
    echo "  summary, sum - –¢–æ–ª—å–∫–æ —Å–≤–æ–¥–∫–∞ –ø–æ –∫–ª–∞—Å—Ç–µ—Ä—É"
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0              # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  $0 quick        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  $0 logs         # –¢–æ–ª—å–∫–æ –ª–æ–≥–∏"
    echo
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "  TELEGRAM_BOT_TOKEN - –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram API"
    exit 0
fi

# –ó–∞–ø—É—Å–∫
main "$@" 