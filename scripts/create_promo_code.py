#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤
"""
import sys
import asyncio
from datetime import datetime, timedelta
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.core.database import get_session
from app.services.promokode_service import PromokodeService
from app.database.models.promokode import PromokodeType
from app.core.logger import get_logger

logger = get_logger(__name__)


async def create_promo_code(
    code: str,
    promo_type: str,
    balance_amount: float = None,
    bonus_amount: float = None,
    discount_percent: float = None,
    max_uses: int = None,
    max_uses_per_user: int = 1,
    valid_days: int = None,
    description: str = None
):
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–æ-–∫–æ–¥
    
    Args:
        code: –ö–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞
        promo_type: –¢–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞ (balance, bonus, discount)
        balance_amount: –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è —Ç–∏–ø–∞ balance)
        bonus_amount: –†–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞ (–¥–ª—è —Ç–∏–ø–∞ bonus)
        discount_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (–¥–ª—è —Ç–∏–ø–∞ discount)
        max_uses: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
        max_uses_per_user: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        valid_days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–µ–π—Å—Ç–≤–∏—è (None = –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)
        description: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    """
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞
        if promo_type.lower() == "balance":
            promokode_type = PromokodeType.BALANCE
        elif promo_type.lower() == "bonus":
            promokode_type = PromokodeType.BONUS
        elif promo_type.lower() == "discount":
            promokode_type = PromokodeType.DISCOUNT
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞: {promo_type}")
            return False
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
        valid_until = None
        if valid_days:
            valid_until = datetime.now() + timedelta(days=valid_days)
        
        async with get_session() as session:
            promo_service = PromokodeService(session)
            
            success, error = await promo_service.create_promokode(
                code=code,
                promokode_type=promokode_type,
                balance_amount=balance_amount,
                bonus_amount=bonus_amount,
                discount_percent=discount_percent,
                max_uses=max_uses,
                max_uses_per_user=max_uses_per_user,
                valid_from=datetime.now(),
                valid_until=valid_until,
                description=description,
                created_by="admin_script"
            )
            
            if success:
                print(f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ '{code}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                print(f"   –¢–∏–ø: {promo_type}")
                if balance_amount:
                    print(f"   –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: {balance_amount} –º–æ–Ω–µ—Ç")
                if bonus_amount:
                    print(f"   –ë–æ–Ω—É—Å: {bonus_amount} –º–æ–Ω–µ—Ç")
                if discount_percent:
                    print(f"   –°–∫–∏–¥–∫–∞: {discount_percent}%")
                if max_uses:
                    print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {max_uses}")
                print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {max_uses_per_user}")
                if valid_until:
                    print(f"   –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {valid_until.strftime('%Y-%m-%d %H:%M:%S')}")
                if description:
                    print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: {error}")
                return False
                
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def print_usage():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("""
üí∞ –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  python scripts/create_promo_code.py <–∫–æ–¥> <—Ç–∏–ø> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–¢–∏–ø—ã –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:
  balance   - –ü—Ä—è–º–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
  bonus     - –ë–æ–Ω—É—Å –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
  discount  - –°–∫–∏–¥–∫–∞ –Ω–∞ –ø–∞–∫–µ—Ç

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  --balance <—Å—É–º–º–∞>        –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è —Ç–∏–ø–∞ balance)
  --bonus <—Å—É–º–º–∞>          –†–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞ (–¥–ª—è —Ç–∏–ø–∞ bonus)
  --discount <–ø—Ä–æ—Ü–µ–Ω—Ç>     –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (–¥–ª—è —Ç–∏–ø–∞ discount)
  --max-uses <—á–∏—Å–ª–æ>       –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
  --max-per-user <—á–∏—Å–ª–æ>   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)
  --valid-days <–¥–Ω–∏>       –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–µ–π—Å—Ç–≤–∏—è
  --description <—Ç–µ–∫—Å—Ç>    –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞

–ü—Ä–∏–º–µ—Ä—ã:
  # –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ 100 –º–æ–Ω–µ—Ç
  python scripts/create_promo_code.py WELCOME100 balance --balance 100 --description "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å"
  
  # –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ 50 –º–æ–Ω–µ—Ç –±–æ–Ω—É—Å–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
  python scripts/create_promo_code.py BONUS50 bonus --bonus 50 --description "–ë–æ–Ω—É—Å –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏"
  
  # –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ 20% —Å–∫–∏–¥–∫—É
  python scripts/create_promo_code.py DISCOUNT20 discount --discount 20 --max-uses 100 --description "–°–∫–∏–¥–∫–∞ 20%"
  
  # –ü—Ä–æ–º–æ–∫–æ–¥ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è
  python scripts/create_promo_code.py LIMITED balance --balance 50 --valid-days 7 --max-uses 50
""")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 3:
        print_usage()
        return
    
    code = sys.argv[1].upper()
    promo_type = sys.argv[2].lower()
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = sys.argv[3:]
    params = {}
    
    i = 0
    while i < len(args):
        arg = args[i]
        
        if arg == "--balance" and i + 1 < len(args):
            params["balance_amount"] = float(args[i + 1])
            i += 2
        elif arg == "--bonus" and i + 1 < len(args):
            params["bonus_amount"] = float(args[i + 1])
            i += 2
        elif arg == "--discount" and i + 1 < len(args):
            params["discount_percent"] = float(args[i + 1])
            i += 2
        elif arg == "--max-uses" and i + 1 < len(args):
            params["max_uses"] = int(args[i + 1])
            i += 2
        elif arg == "--max-per-user" and i + 1 < len(args):
            params["max_uses_per_user"] = int(args[i + 1])
            i += 2
        elif arg == "--valid-days" and i + 1 < len(args):
            params["valid_days"] = int(args[i + 1])
            i += 2
        elif arg == "--description" and i + 1 < len(args):
            params["description"] = args[i + 1]
            i += 2
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: {arg}")
            print_usage()
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if promo_type == "balance" and "balance_amount" not in params:
        print("‚ùå –î–ª—è —Ç–∏–ø–∞ 'balance' —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä --balance")
        return
    
    if promo_type == "bonus" and "bonus_amount" not in params:
        print("‚ùå –î–ª—è —Ç–∏–ø–∞ 'bonus' —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä --bonus")
        return
    
    if promo_type == "discount" and "discount_percent" not in params:
        print("‚ùå –î–ª—è —Ç–∏–ø–∞ 'discount' —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä --discount")
        return
    
    print(f"üéÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ '{code}' —Ç–∏–ø–∞ '{promo_type}'...")
    
    success = await create_promo_code(code, promo_type, **params)
    
    if success:
        print("\nüéâ –ü—Ä–æ–º–æ–∫–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥")


if __name__ == "__main__":
    asyncio.run(main()) 