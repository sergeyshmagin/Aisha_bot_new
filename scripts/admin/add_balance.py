#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: 
  python scripts/admin/add_balance.py <telegram_id> <amount> [reason]
  python scripts/admin/add_balance.py --list  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  python scripts/admin/add_balance.py --interactive  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
"""
import sys
import asyncio
from pathlib import Path
from typing import List, Optional

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent.parent.parent))

from app.core.database import get_session
from app.services.balance_service import BalanceService
from app.core.di import get_user_service_with_session
from app.database.models import User, UserBalance
from app.core.logger import get_logger
from sqlalchemy import select, func
from sqlalchemy.orm import selectinload

logger = get_logger(__name__)

async def get_all_users() -> List[User]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    Returns:
        –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ User
    """
    try:
        async with get_session() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö –±–∞–ª–∞–Ω—Å–æ–º, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            stmt = (
                select(User)
                .options(selectinload(User.balance))
                .where(User.is_bot == False)  # –ò—Å–∫–ª—é—á–∞–µ–º –±–æ—Ç–æ–≤
                .order_by(User.created_at.desc())
            )
            result = await session.execute(stmt)
            users = result.scalars().all()
            return list(users)
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []

async def show_users_list():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    users = await get_all_users()
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    print("=" * 80)
    
    for i, user in enumerate(users, 1):
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
        balance = 0.0
        if user.balance:
            balance = user.balance.coins
        
        username_str = f"@{user.username}" if user.username else "–±–µ–∑ username"
        full_name = f"{user.first_name}"
        if user.last_name:
            full_name += f" {user.last_name}"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        reg_date = user.created_at.strftime("%d.%m.%Y")
        
        print(f"{i:3d}. üÜî {user.telegram_id:<12} | üë§ {full_name:<25} | {username_str:<20} | üí∞ {balance:>7.0f} | üìÖ {reg_date}")
    
    print("=" * 80)
    print("\nüí° –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ Telegram ID –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python scripts/admin/add_balance.py <telegram_id> <amount> [reason]")
    print("\nüìã –ü—Ä–∏–º–µ—Ä:")
    if users:
        example_user = users[0]
        print(f"   python scripts/admin/add_balance.py {example_user.telegram_id} 500 '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞'")

async def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
    print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    users = await get_all_users()
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    while True:
        print(f"\nüìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Å–µ–≥–æ: {len(users)})")
        print("=" * 80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        display_users = users[:20]
        for i, user in enumerate(display_users, 1):
            balance = 0.0
            if user.balance:
                balance = user.balance.coins
            
            username_str = f"@{user.username}" if user.username else "–±–µ–∑ username"
            full_name = f"{user.first_name}"
            if user.last_name:
                full_name += f" {user.last_name}"
            
            print(f"{i:2d}. üÜî {user.telegram_id:<12} | üë§ {full_name:<25} | {username_str:<20} | üí∞ {balance:>7.0f}")
        
        if len(users) > 20:
            print(f"... –∏ –µ—â–µ {len(users) - 20} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("=" * 80)
        
        try:
            choice = input("\nüî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (1-20) –∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞: ").strip()
            
            if choice.lower() == 'q':
                print("üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
                break
            
            user_index = int(choice) - 1
            if user_index < 0 or user_index >= len(display_users):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                continue
            
            selected_user = display_users[user_index]
            
            print(f"\n‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
            print(f"üÜî Telegram ID: {selected_user.telegram_id}")
            print(f"üë§ –ò–º—è: {selected_user.first_name} {selected_user.last_name or ''}")
            print(f"üìß Username: @{selected_user.username}" if selected_user.username else "üìß Username: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            async with get_session() as session:
                balance_service = BalanceService(session)
                current_balance = await balance_service.get_balance(selected_user.id)
                print(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance:.0f} –º–æ–Ω–µ—Ç")
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            amount_str = input("\nüí∏ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: ").strip()
            if not amount_str:
                print("‚ùå –°—É–º–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                continue
            
            try:
                amount = float(amount_str)
                if amount <= 0:
                    print("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
                    continue
            except ValueError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã")
                continue
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
            reason = input("üìù –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–∏–ª–∏ Enter –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π): ").strip()
            if not reason:
                reason = "–†—É—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            print(f"\nüîç –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é:")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {selected_user.first_name} (@{selected_user.username or '–±–µ–∑_username'})")
            print(f"üí∞ –°—É–º–º–∞: +{amount:.0f} –º–æ–Ω–µ—Ç")
            print(f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            
            confirm = input("\n‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ? (y/N): ").strip().lower()
            if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                continue
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
            success = await add_balance_to_user(selected_user.telegram_id, amount, reason)
            
            if success:
                print("\nüéâ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                continue_choice = input("\nüîÑ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é? (y/N): ").strip().lower()
                if continue_choice not in ['y', 'yes', '–¥–∞', '–¥']:
                    break
            else:
                print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
                
        except (ValueError, KeyboardInterrupt):
            print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
            break
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

async def add_balance_to_user(telegram_id: int, amount: float, reason: str = "–†—É—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        amount: –°—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        reason: –ü—Ä–∏—á–∏–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    """
    try:
        async with get_session() as session:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_service = get_user_service_with_session(session)
            user = await user_service.get_user_by_telegram_id(telegram_id)
            
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            balance_service = BalanceService(session)
            current_balance = await balance_service.get_balance(user.id)
            
            # –ü–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
            result = await balance_service.add_balance(
                user_id=user.id,
                amount=amount,
                description=reason
            )
            
            if result["success"]:
                new_balance = await balance_service.get_balance(user.id)
                print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name} (@{user.username or '–±–µ–∑_username'}) –ø–æ–ø–æ–ª–Ω–µ–Ω")
                print(f"üí∞ –ë—ã–ª–æ: {current_balance:.0f} –º–æ–Ω–µ—Ç")
                print(f"üìà –î–æ–±–∞–≤–ª–µ–Ω–æ: +{amount:.0f} –º–æ–Ω–µ—Ç")
                print(f"üíé –°—Ç–∞–ª–æ: {new_balance:.0f} –º–æ–Ω–µ—Ç")
                print(f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}")
                
                await session.commit()
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")
                return False
                
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def show_user_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    try:
        async with get_session() as session:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_users_stmt = select(func.count(User.id)).where(User.is_bot == False)
            total_users_result = await session.execute(total_users_stmt)
            total_users = total_users_result.scalar()
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–∞–ª–∞–Ω—Å–æ–º –±–æ–ª—å—à–µ 0
            users_with_balance_stmt = (
                select(func.count(User.id))
                .join(User.balance)
                .where(User.is_bot == False)
                .where(User.balance.has(UserBalance.coins > 0))
            )
            users_with_balance_result = await session.execute(users_with_balance_stmt)
            users_with_balance = users_with_balance_result.scalar()
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
            print(f"üí∞ –° –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º: {users_with_balance}")
            print(f"üí∏ –ë–µ–∑ –±–∞–ª–∞–Ω—Å–∞: {total_users - users_with_balance}")
            
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python scripts/admin/add_balance.py <telegram_id> <amount> [reason]")
        print("  python scripts/admin/add_balance.py --list  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  python scripts/admin/add_balance.py --interactive  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")
        print("  python scripts/admin/add_balance.py --stats  # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("")
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python scripts/admin/add_balance.py 174171680 250")
        print("  python scripts/admin/add_balance.py 174171680 500 '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–º 500 –º–æ–Ω–µ—Ç'")
        print("  python scripts/admin/add_balance.py --list")
        print("  python scripts/admin/add_balance.py --interactive")
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    if sys.argv[1] == "--list":
        await show_users_list()
        return
    
    if sys.argv[1] == "--interactive":
        await interactive_mode()
        return
    
    if sys.argv[1] == "--stats":
        await show_user_stats()
        return
    
    # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    if len(sys.argv) < 3:
        print("‚ùå –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —É–∫–∞–∂–∏—Ç–µ Telegram ID –∏ —Å—É–º–º—É")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/admin/add_balance.py <telegram_id> <amount> [reason]")
        return
    
    try:
        telegram_id = int(sys.argv[1])
        amount = float(sys.argv[2])
        reason = sys.argv[3] if len(sys.argv) > 3 else "–†—É—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
        
        print(f"üîÑ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        print(f"üë§ Telegram ID: {telegram_id}")
        print(f"üí∞ –°—É–º–º–∞: {amount:.0f} –º–æ–Ω–µ—Ç")
        print(f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        print("")
        
        success = await add_balance_to_user(telegram_id, amount, reason)
        
        if success:
            print("‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            sys.exit(1)
            
    except ValueError as e:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: {e}")
        print("Telegram ID –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main()) 