#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ Python
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./fix_import_issue.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

debug() {
    echo -e "${BLUE}[DEBUG]${NC} $1"
}

log "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ Python"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_ROOT="/opt/aisha-backend"
cd "$PROJECT_ROOT"

log "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
if [[ -d "app" && -f "app/__init__.py" ]]; then
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è app –Ω–∞–π–¥–µ–Ω–∞"
else
    error "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è app –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç __init__.py"
    exit 1
fi

if [[ -d "app/services" && -f "app/services/__init__.py" ]]; then
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è app/services –Ω–∞–π–¥–µ–Ω–∞"
else
    error "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è app/services –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [[ -d "app/services/storage" && -f "app/services/storage/__init__.py" ]]; then
    log "‚úÖ –ú–æ–¥—É–ª—å app.services.storage –Ω–∞–π–¥–µ–Ω"
else
    error "‚ùå –ú–æ–¥—É–ª—å app.services.storage –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
log "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [[ -d ".venv" ]]; then
    log "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ"
    if [[ "$VIRTUAL_ENV" == *".venv"* ]]; then
        log "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    else
        warn "‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
        log "–ê–∫—Ç–∏–≤–∏—Ä—É—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        source .venv/bin/activate
    fi
else
    warn "‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç
log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞..."

echo "–¢–µ—Å—Ç–∏—Ä—É—é –∏–º–ø–æ—Ä—Ç app.services.storage..."
if python -c "from app.services.storage import StorageService; print('‚úÖ StorageService –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ')"; then
    log "‚úÖ –ò–º–ø–æ—Ä—Ç app.services.storage —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app.services.storage"
    echo "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞..."
    python -c "
import sys
print('Python path:')
for p in sys.path:
    print(f'  {p}')
print()
print('–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏...')
try:
    import app.services.storage
    print('‚úÖ app.services.storage –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
    
try:
    from app.services.storage import StorageService
    print('‚úÖ StorageService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
"
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

echo "–ü—Ä–æ–≤–µ—Ä—è—é –∏–º–ø–æ—Ä—Ç—ã –≤ app/main.py..."
if python -c "
import sys
sys.path.insert(0, '/opt/aisha-backend')
try:
    from app.handlers import *
    print('‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –≤ app.main —É—Å–ø–µ—à–Ω—ã')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    import traceback
    traceback.print_exc()
"; then
    log "‚úÖ –ò–º–ø–æ—Ä—Ç—ã –≤ app/main.py —Ä–∞–±–æ—Ç–∞—é—Ç"
else
    error "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ –≤ app/main.py"
fi

# –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞
log "üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞..."

cat > run_bot.py << 'EOF'
#!/usr/bin/env python3
"""
–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å PYTHONPATH
"""
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
PROJECT_ROOT = Path(__file__).parent.absolute()
if str(PROJECT_ROOT) not in sys.path:
    sys.path.insert(0, str(PROJECT_ROOT))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
os.chdir(PROJECT_ROOT)

if __name__ == "__main__":
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app.main import main
        main()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
EOF

chmod +x run_bot.py
log "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª run_bot.py"

# –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞
log "üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞..."

cat > run_api.py << 'EOF'
#!/usr/bin/env python3
"""
–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å PYTHONPATH
"""
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
PROJECT_ROOT = Path(__file__).parent.absolute()
if str(PROJECT_ROOT) not in sys.path:
    sys.path.insert(0, str(PROJECT_ROOT))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
os.chdir(PROJECT_ROOT)

if __name__ == "__main__":
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
        from api_server.app.main import app
        import uvicorn
        
        uvicorn.run(
            app,
            host="127.0.0.1",
            port=8000,
            log_level="info"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
EOF

chmod +x run_api.py
log "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª run_api.py"

# –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
log "üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."

echo "–¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –æ–±–µ—Ä—Ç–∫—É..."
if python run_bot.py --help >/dev/null 2>&1 || python run_bot.py --version >/dev/null 2>&1; then
    log "‚úÖ –û–±–µ—Ä—Ç–∫–∞ run_bot.py —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    warn "‚ö†Ô∏è –û–±–µ—Ä—Ç–∫–∞ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è aiogram –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)"
fi

log "üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:"
echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
echo "‚úÖ –ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞"
echo
log "üöÄ –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
echo "# –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç:"
echo "python run_bot.py"
echo
echo "# API —Å–µ—Ä–≤–µ—Ä:"
echo "python run_api.py"
echo
echo "# –ò–ª–∏ –Ω–∞–ø—Ä—è–º—É—é:"
echo "cd /opt/aisha-backend && python -m app.main"

log "üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!" 