#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è storage –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# –ü–µ—Ä–µ—Ö–æ–¥ —Å bind mounts –Ω–∞ Docker volumes –¥–ª—è storage –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

PROD_SERVER="192.168.0.10"
PROD_USER="aisha"
PROJECT_DIR="/opt/aisha-backend"

log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ storage –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω–µ"

# 1. –ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä
log_info "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä..."

scp docker-compose.bot.simple.yml ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/
scp docker/bot-entrypoint.sh ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/docker/

# 2. –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
log_info "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."

ssh ${PROD_USER}@${PROD_SERVER} << 'EOF'
set -e

cd /opt/aisha-backend

echo "üìã –¢–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º:"
docker-compose -f docker-compose.bot.simple.yml ps

echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.bot.simple.yml down

echo ""
echo "üóÇÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –¥–∞–Ω–Ω—ã—Ö –∏–∑ bind mounts..."
if [ -d "storage/temp" ] && [ "$(ls -A storage/temp)" ]; then
    echo "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ storage/temp..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–∞
    mkdir -p /tmp/aisha-storage-backup/temp
    cp -r storage/temp/* /tmp/aisha-storage-backup/temp/ 2>/dev/null || true
    
    echo "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ /tmp/aisha-storage-backup/"
fi

echo ""
echo "üîß –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º entrypoint..."
docker build -f docker/Dockerfile.bot -t 192.168.0.4:5000/aisha/bot:latest .
docker push 192.168.0.4:5000/aisha/bot:latest

echo ""
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Docker volumes..."
docker volume create aisha-backend_bot_storage_temp 2>/dev/null || true
docker volume create aisha-backend_bot_storage_audio 2>/dev/null || true

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
docker-compose -f docker-compose.bot.simple.yml up -d

echo ""
echo "‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 15

echo ""
echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ–≤—ã–µ volumes (–µ—Å–ª–∏ –µ—Å—Ç—å –±—ç–∫–∞–ø)..."
if [ -d "/tmp/aisha-storage-backup/temp" ] && [ "$(ls -A /tmp/aisha-storage-backup/temp)" ]; then
    echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ temp volume..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker run --rm \
        -v aisha-backend_bot_storage_temp:/target \
        -v /tmp/aisha-storage-backup/temp:/source \
        alpine sh -c "cp -r /source/* /target/ 2>/dev/null || true"
    
    echo "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—ç–∫–∞–ø
    rm -rf /tmp/aisha-storage-backup/
fi

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Image}}" | grep -E "(bot|worker)" || true

echo ""
echo "üß™ –¢–µ—Å—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ storage..."
docker exec aisha-bot-primary touch /app/storage/temp/test-permissions.txt 2>/dev/null && \
docker exec aisha-bot-primary rm /app/storage/temp/test-permissions.txt 2>/dev/null && \
echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ" || \
echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ storage"

echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö volumes:"
docker volume ls | grep aisha-backend || true

echo ""
echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "docker logs aisha-bot-primary --tail 20"
echo ""
echo "üìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å—Ç–∞—Ç—É—Å–∞:"
echo "docker ps --format \"table {{.Names}}\t{{.Status}}\""

EOF

log_info "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ storage –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log_info ""
log_info "üìù –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:"
log_info "   ‚Ä¢ Bind mounts –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ Docker volumes"
log_info "   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤ entrypoint"
log_info "   ‚Ä¢ –°–æ–∑–¥–∞–Ω—ã volumes: bot_storage_temp, bot_storage_audio"
log_info "   ‚Ä¢ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ"
log_info ""
log_info "üîß –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–µ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç!"
</rewritten_file> 