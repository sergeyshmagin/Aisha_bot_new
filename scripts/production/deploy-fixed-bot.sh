#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Aisha Bot –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã: polling –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, storage permissions, worker –º–æ–¥—É–ª—å
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

PROD_SERVER="192.168.0.10"
PROD_USER="aisha"
PROJECT_DIR="/opt/aisha-backend"

log_info "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Aisha Bot –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"

# 1. –ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä
log_info "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä..."

scp docker-compose.bot.simple.yml ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/
scp docker/bot-entrypoint.sh ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/docker/
scp -r app/workers ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/app/
scp app/core/config.py ${PROD_USER}@${PROD_SERVER}:${PROJECT_DIR}/app/core/

# 2. –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
log_info "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."

ssh ${PROD_USER}@${PROD_SERVER} << 'EOF'
set -e

cd /opt/aisha-backend

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –±–æ—Ç–∞..."
docker-compose -f docker-compose.bot.simple.yml down 2>/dev/null || true

echo ""
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –±–æ—Ç–∞..."
docker rmi $(docker images | grep "aisha.*bot" | awk '{print $3}') 2>/dev/null || true

echo ""
echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∏–∑ registry..."
docker pull 192.168.0.4:5000/aisha/bot:latest

echo ""
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Docker volumes (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)..."
docker volume create aisha-backend_bot_storage_temp 2>/dev/null || true
docker volume create aisha-backend_bot_storage_audio 2>/dev/null || true
docker volume create aisha-backend_bot_logs 2>/dev/null || true

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
docker-compose -f docker-compose.bot.simple.yml up -d

echo ""
echo "‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 20

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Image}}" | grep -E "(bot|worker)" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üß™ –¢–µ—Å—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ storage..."
if docker exec aisha-bot-primary touch /app/storage/temp/test-permissions.txt 2>/dev/null; then
    docker exec aisha-bot-primary rm /app/storage/temp/test-permissions.txt 2>/dev/null
    echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ storage"
fi

echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ volumes:"
docker volume ls | grep aisha-backend || true

echo ""
echo "üîç –õ–æ–≥–∏ primary –±–æ—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
docker logs aisha-bot-primary --tail 10 2>/dev/null || echo "Primary –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "üîç –õ–æ–≥–∏ worker (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
docker logs aisha-worker-1 --tail 5 2>/dev/null || echo "Worker –Ω–µ –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìù –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:"
echo "   ‚úÖ Polling –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã (—Ç–æ–ª—å–∫–æ primary –¥–µ–ª–∞–µ—Ç polling)"
echo "   ‚úÖ Storage permissions –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞)"
echo "   ‚úÖ Worker –º–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω (app.workers.background_worker)"
echo "   ‚úÖ Docker volumes –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è"
echo "   ‚úÖ Entrypoint –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∞–≤–∞–º–∏"
echo ""
echo "üîß –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   docker logs aisha-bot-primary --tail 20 -f"
echo "   docker logs aisha-worker-1 --tail 20 -f"
echo ""
echo "üìä –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:"
echo "   docker ps --format \"table {{.Names}}\t{{.Status}}\""

EOF

log_info "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log_info ""
log_info "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:"
log_info "   ‚Ä¢ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã polling –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
log_info "   ‚Ä¢ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è"
log_info "   ‚Ä¢ Background worker –º–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
log_info "   ‚Ä¢ Docker volumes –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö"
log_info ""
log_info "ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!"
</rewritten_file> 