#!/bin/bash

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üöÄ AISHA BOT - –§–ò–ù–ê–õ–¨–ù–´–ô –ü–†–û–î–ê–ö–®–ù –î–ï–ü–õ–û–ô
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –í–µ—Ä—Å–∏—è: 2.0 –°–¢–ê–ë–ò–õ–¨–ù–ê–Ø
# –î–∞—Ç–∞: 2025-06-09
# –°—Ç–∞—Ç—É—Å: ‚úÖ –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–û –í –ü–†–û–î–ê–ö–®–ù–ï
#
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç –í–°–ï –æ—à–∏–±–∫–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:
# - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_TOKEN –∏ TELEGRAM_BOT_TOKEN
# - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ entrypoint –±–µ–∑ nc –ø—Ä–æ–≤–µ—Ä–æ–∫
# - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ Dockerfile (webhook –±–µ–∑ --worker-class)
# - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ storage
# - Conflict resolution –¥–ª—è polling –±–æ—Ç–æ–≤
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROD_SERVER="192.168.0.10"
PROD_USER="aisha"
REGISTRY_PORT="5000"
PROJECT_ROOT="/opt/aisha-backend"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_step() { echo -e "${CYAN}[STEP]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
check_telegram_token() {
    if [[ -z "${TELEGRAM_BOT_TOKEN:-}" ]]; then
        log_error "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
        log_info "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω: export TELEGRAM_BOT_TOKEN=your_token_here"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
    if ! curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe" | grep -q '"ok":true'; then
        log_error "–¢–æ–∫–µ–Ω Telegram –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!"
        exit 1
    fi
    
    log_info "‚úÖ –¢–æ–∫–µ–Ω Telegram –≤–∞–ª–∏–¥–Ω—ã–π"
}

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
build_images() {
    log_step "üî® –°–±–æ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤..."
    
    # Webhook API (–ë–ï–ó --worker-class –ø–∞—Ä–∞–º–µ—Ç—Ä–∞!)
    log_info "–°–±–æ—Ä–∫–∞ Webhook API..."
    docker build -f docker/Dockerfile.webhook -t localhost:${REGISTRY_PORT}/aisha-webhook:latest .
    
    # Bot —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º entrypoint (–ë–ï–ó nc –ø—Ä–æ–≤–µ—Ä–æ–∫!)
    log_info "–°–±–æ—Ä–∫–∞ Bot..."
    docker build -f docker/Dockerfile.bot -t localhost:${REGISTRY_PORT}/aisha-bot:latest .
    
    log_info "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
push_images() {
    log_step "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–≥–∏—Å—Ç—Ä..."
    
    docker push localhost:${REGISTRY_PORT}/aisha-webhook:latest || {
        log_error "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook –æ–±—Ä–∞–∑–∞"
        exit 1
    }
    
    docker push localhost:${REGISTRY_PORT}/aisha-bot:latest || {
        log_error "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ bot –æ–±—Ä–∞–∑–∞"
        exit 1
    }
    
    log_info "‚úÖ –û–±—Ä–∞–∑—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
}

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
deploy_to_server() {
    log_step "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${PROD_USER}@${PROD_SERVER} "
        cd ${PROJECT_ROOT}
        
        echo 'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...'
        docker pull localhost:${REGISTRY_PORT}/aisha-webhook:latest
        docker pull localhost:${REGISTRY_PORT}/aisha-bot:latest
        
        echo '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...'
        export TELEGRAM_BOT_TOKEN='${TELEGRAM_BOT_TOKEN}'
        docker-compose -f docker-compose.webhook.prod.yml down || true
        docker-compose -f docker-compose.bot.registry.yml down || true
        
        echo 'üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...'
        docker system prune -f
        
        echo 'üöÄ –ó–∞–ø—É—Å–∫ Webhook API...'
        docker-compose -f docker-compose.webhook.prod.yml up -d
        
        echo '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API...'
        sleep 30
        
        echo 'ü§ñ –ó–∞–ø—É—Å–∫ Bot –∫–ª–∞—Å—Ç–µ—Ä–∞...'
        docker-compose -f docker-compose.bot.registry.yml up -d
        
        echo '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤...'
        sleep 20
        
        echo 'üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...'
        docker ps --format 'table {{.Names}}\\\t{{.Status}}\\\t{{.Ports}}'
    " || {
        log_error "–û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
health_check() {
    log_step "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."
    
    ssh ${PROD_USER}@${PROD_SERVER} "
        cd ${PROJECT_ROOT}
        
        echo '=== –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==='
        docker ps --format 'table {{.Names}}\\\t{{.Status}}'
        
        echo
        echo '=== –ü–†–û–í–ï–†–ö–ê WEBHOOK API ==='
        for i in {1..2}; do
            echo \"Webhook API \$i:\"
            docker logs aisha-webhook-api-\$i --tail 3 2>/dev/null || echo \"–ù–µ –∑–∞–ø—É—â–µ–Ω\"
        done
        
        echo
        echo '=== –ü–†–û–í–ï–†–ö–ê –ë–û–¢–û–í ==='
        echo '–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç:'
        docker logs aisha-bot-polling-1 --tail 3 2>/dev/null || echo '–ù–µ –∑–∞–ø—É—â–µ–Ω'
        
        echo 'Standby –±–æ—Ç:'
        docker logs aisha-bot-polling-2 --tail 3 2>/dev/null || echo '–ù–µ –∑–∞–ø—É—â–µ–Ω'
        
        echo
        echo '=== –ü–†–û–í–ï–†–ö–ê NGINX ==='
        docker logs aisha-nginx-prod --tail 3 2>/dev/null || echo '–ù–µ –∑–∞–ø—É—â–µ–Ω'
        
        echo
        echo '‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
    "
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π Aisha Bot –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"
    log_info "üìç –°–µ—Ä–≤–µ—Ä: ${PROD_USER}@${PROD_SERVER}"
    log_info "üìÖ $(date)"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_telegram_token
    
    # –°–±–æ—Ä–∫–∞ –∏ –¥–µ–ø–ª–æ–π
    build_images
    push_images
    deploy_to_server
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    health_check
    
    log_info "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    log_info "üåê Webhook API: https://${PROD_SERVER}/webhook/"
    log_info "ü§ñ Bot –∫–ª–∞—Å—Ç–µ—Ä: polling + standby + workers"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'log_error "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –Ω–∞ —Å—Ç—Ä–æ–∫–µ $LINENO"' ERR

# –°–ø—Ä–∞–≤–∫–∞
if [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0"
    echo ""
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "  TELEGRAM_BOT_TOKEN  - –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  export TELEGRAM_BOT_TOKEN=your_token"
    echo "  $0"
    exit 0
fi

# –ó–∞–ø—É—Å–∫
main "$@" 