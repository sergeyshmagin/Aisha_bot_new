#!/bin/bash

# ============================================================================
# –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
REGISTRY="192.168.0.4:5000"
IMAGE_NAME="aisha/bot"
PROD_SERVER="192.168.0.10"
PROD_USER="aisha"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–∞ —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
TAG="fix-help-${TIMESTAMP}"

log_info "üöÄ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${TAG}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ "$VIRTUAL_ENV" == "" ]]; then
    log_warn "‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    if [[ -f "venv/bin/activate" ]]; then
        source venv/bin/activate
        log_info "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    else
        log_error "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
fi

# 1. –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
log_info "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —Å —Ç–µ–≥–æ–º ${TAG}..."
docker build -t ${REGISTRY}/${IMAGE_NAME}:${TAG} -f docker/Dockerfile.bot .

# 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ registry
log_info "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ registry..."
docker push ${REGISTRY}/${IMAGE_NAME}:${TAG}

# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ latest —Ç–µ–≥–∞
log_info "üè∑Ô∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ latest —Ç–µ–≥–∞..."
docker tag ${REGISTRY}/${IMAGE_NAME}:${TAG} ${REGISTRY}/${IMAGE_NAME}:latest
docker push ${REGISTRY}/${IMAGE_NAME}:latest

# 4. –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω
log_info "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä..."
ssh ${PROD_USER}@${PROD_SERVER} << EOF
    set -e
    
    echo "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞..."
    docker pull ${REGISTRY}/${IMAGE_NAME}:latest
    
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ bot –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    cd /opt/aisha-backend
    docker-compose -f docker-compose.bot.simple.yml down
    docker-compose -f docker-compose.bot.simple.yml up -d
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
    sleep 10
    
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.bot.simple.yml ps
    
    echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
EOF

log_info "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ!"
log_info "üè∑Ô∏è  –¢–µ–≥: ${TAG}"
log_info "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤: ssh ${PROD_USER}@${PROD_SERVER} 'docker-compose -f /opt/aisha-backend/docker-compose.bot.simple.yml logs -f --tail=50'" 