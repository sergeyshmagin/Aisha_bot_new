#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app.core.database import get_session
from sqlalchemy import text

async def check_avatars():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤–∞—Ç–∞—Ä—ã –≤ –ë–î"""
    
    async with get_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤–∞—Ç–∞—Ä–∞—Ö
        result = await session.execute(text("""
            SELECT 
                id,
                name,
                status,
                training_type,
                created_at,
                training_started_at,
                training_completed_at,
                finetune_id,
                fal_request_id,
                diffusers_lora_file_url,
                trigger_phrase
            FROM avatars 
            ORDER BY created_at DESC
        """))
        
        avatars = result.fetchall()
        
        if not avatars:
            print('‚ùå –ê–≤–∞—Ç–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            return
        
        print(f'üìä –ù–∞–π–¥–µ–Ω–æ {len(avatars)} –∞–≤–∞—Ç–∞—Ä–æ–≤:')
        print()
        
        for i, avatar in enumerate(avatars, 1):
            print(f'üé≠ –ê–≤–∞—Ç–∞—Ä #{i}:')
            print(f'   ID: {avatar.id}')
            print(f'   –ò–º—è: {avatar.name}')
            print(f'   –°—Ç–∞—Ç—É—Å: {avatar.status}')
            print(f'   –¢–∏–ø: {avatar.training_type}')
            print(f'   –°–æ–∑–¥–∞–Ω: {avatar.created_at}')
            
            if avatar.training_started_at:
                print(f'   –û–±—É—á–µ–Ω–∏–µ –Ω–∞—á–∞—Ç–æ: {avatar.training_started_at}')
            
            if avatar.training_completed_at:
                print(f'   –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {avatar.training_completed_at}')
            
            if avatar.finetune_id:
                print(f'   Finetune ID: {avatar.finetune_id}')
            
            if avatar.fal_request_id:
                print(f'   FAL Request ID: {avatar.fal_request_id}')
            
            if avatar.diffusers_lora_file_url:
                print(f'   LoRA URL: {avatar.diffusers_lora_file_url[:50]}...')
            
            if avatar.trigger_phrase:
                print(f'   Trigger Phrase: {avatar.trigger_phrase}')
            
            print()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        completed_count = len([a for a in avatars if a.status == 'completed'])
        ready_count = len([a for a in avatars if a.status == 'ready_for_training'])
        training_count = len([a for a in avatars if a.status == 'training'])
        
        print(f'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
        print(f'   –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ: {completed_count}')
        print(f'   –ì–æ—Ç–æ–≤—ã –∫ –æ–±—É—á–µ–Ω–∏—é: {ready_count}')
        print(f'   –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è: {training_count}')

if __name__ == "__main__":
    asyncio.run(check_avatars()) 