#!/bin/bash

# ============================================================================
# üì¶ ADVANCED DOCKER REGISTRY SETUP SCRIPT
# ============================================================================

set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

REGISTRY_SERVER="192.168.0.4"
REGISTRY_PORT="5000"

echo -e "${GREEN}üì¶ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Registry...${NC}"

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ============================================================================
# üèóÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Registry —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
# ============================================================================

log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Registry —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ $REGISTRY_SERVER..."

ssh aisha@$REGISTRY_SERVER << 'EOF'
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p ~/docker-registry/{data,auth,certs,config}
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    sudo docker stop registry-server registry-ui 2>/dev/null || true
    sudo docker rm registry-server registry-ui 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Registry
    cat > ~/docker-registry/config/config.yml << 'CONFIG'
version: 0.1
log:
  level: info
  formatter: text
storage:
  filesystem:
    rootdirectory: /var/lib/registry
  delete:
    enabled: true
http:
  addr: :5000
  headers:
    X-Content-Type-Options: [nosniff]
    Access-Control-Allow-Origin: ['*']
    Access-Control-Allow-Methods: ['GET', 'POST', 'PUT', 'DELETE']
    Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
health:
  storagedriver:
    enabled: true
    interval: 10s
    threshold: 3
CONFIG
    
    # –ó–∞–ø—É—Å–∫ Registry —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    sudo docker run -d \
        --name registry-server \
        --restart=always \
        -p 5000:5000 \
        -v ~/docker-registry/data:/var/lib/registry \
        -v ~/docker-registry/config/config.yml:/etc/docker/registry/config.yml \
        registry:2
    
    # –ó–∞–ø—É—Å–∫ Registry UI –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    sudo docker run -d \
        --name registry-ui \
        --restart=always \
        -p 8080:80 \
        -e REGISTRY_URL=http://localhost:5000 \
        -e DELETE_IMAGES=true \
        -e REGISTRY_TITLE="Aisha Docker Registry" \
        joxit/docker-registry-ui:latest
    
    echo "‚úÖ Registry —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å UI –Ω–∞ –ø–æ—Ä—Ç—É 8080"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞
    sleep 5
    if sudo docker ps | grep -q registry-server; then
        echo "‚úÖ Registry Server: OK"
    else
        echo "‚ùå Registry Server: FAILED"
        exit 1
    fi
    
    if sudo docker ps | grep -q registry-ui; then
        echo "‚úÖ Registry UI: OK"
    else
        echo "‚ö†Ô∏è Registry UI: FAILED"
    fi
EOF

# ============================================================================
# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ (insecure registry)
# ============================================================================

log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Registry..."

# –ü—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä (192.168.0.10)
log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞..."
ssh aisha@192.168.0.10 << 'EOF'
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker daemon
    sudo mkdir -p /etc/docker
    
    # –ë—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f /etc/docker/daemon.json ]; then
        sudo cp /etc/docker/daemon.json /etc/docker/daemon.json.backup
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat << 'DAEMON' | sudo tee /etc/docker/daemon.json
{
    "insecure-registries": ["192.168.0.4:5000"],
    "registry-mirrors": [],
    "log-driver": "json-file",
    "log-opts": {
        "max-size": "10m",
        "max-file": "3"
    }
}
DAEMON
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker
    sudo systemctl restart docker
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    sleep 3
    if sudo docker info | grep -q "192.168.0.4:5000"; then
        echo "‚úÖ Insecure registry –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ insecure registry"
        exit 1
    fi
EOF

# –õ–æ–∫–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ "$HOSTNAME" != "192.168.0.4" ] && [ "$HOSTNAME" != "192.168.0.10" ]; then
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker daemon –ª–æ–∫–∞–ª—å–Ω–æ
    if [ ! -f /etc/docker/daemon.json ]; then
        echo '{"insecure-registries": ["192.168.0.4:5000"]}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker
        log_info "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    else
        log_warn "‚ö†Ô∏è /etc/docker/daemon.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é"
    fi
fi

# ============================================================================
# üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Registry
# ============================================================================

log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Registry..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
if curl -s http://$REGISTRY_SERVER:$REGISTRY_PORT/v2/ | grep -q "{}"; then
    log_info "‚úÖ Registry API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log_error "‚ùå Registry API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ UI
if curl -s http://$REGISTRY_SERVER:8080 | grep -q "Docker Registry UI"; then
    log_info "‚úÖ Registry UI –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log_warn "‚ö†Ô∏è Registry UI –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –¢–µ—Å—Ç push/pull —Å —Ä–µ–∞–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ push/pull..."

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
docker pull alpine:latest

# –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è registry
docker tag alpine:latest $REGISTRY_SERVER:$REGISTRY_PORT/test-alpine:latest

# Push –≤ registry
if docker push $REGISTRY_SERVER:$REGISTRY_PORT/test-alpine:latest; then
    log_info "‚úÖ Push —É—Å–ø–µ—à–µ–Ω"
else
    log_error "‚ùå Push –Ω–µ—É—Å–ø–µ—à–µ–Ω"
    exit 1
fi

# –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
docker rmi alpine:latest $REGISTRY_SERVER:$REGISTRY_PORT/test-alpine:latest

# Pull –∏–∑ registry
if docker pull $REGISTRY_SERVER:$REGISTRY_PORT/test-alpine:latest; then
    log_info "‚úÖ Pull —É—Å–ø–µ—à–µ–Ω"
else
    log_error "‚ùå Pull –Ω–µ—É—Å–ø–µ—à–µ–Ω"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
docker rmi $REGISTRY_SERVER:$REGISTRY_PORT/test-alpine:latest

# ============================================================================
# üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Registry
# ============================================================================

log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Registry..."

# –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–∑–æ–≤ –≤ Registry
log_info "–°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–∑–æ–≤ –≤ Registry:"
curl -s http://$REGISTRY_SERVER:$REGISTRY_PORT/v2/_catalog | python3 -m json.tool 2>/dev/null || echo "–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
ssh aisha@$REGISTRY_SERVER << 'EOF'
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
    echo "–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö Registry: $(du -sh ~/docker-registry/data 2>/dev/null | cut -f1 || echo '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')"
    echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    sudo docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep registry
EOF

echo ""
echo -e "${GREEN}üéâ Docker Registry –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${NC}"
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Registry:"
echo "  ‚Ä¢ API URL:     http://$REGISTRY_SERVER:$REGISTRY_PORT"
echo "  ‚Ä¢ UI URL:      http://$REGISTRY_SERVER:8080"
echo "  ‚Ä¢ Catalog:     http://$REGISTRY_SERVER:$REGISTRY_PORT/v2/_catalog"
echo "  ‚Ä¢ Health:      http://$REGISTRY_SERVER:$REGISTRY_PORT/v2/"
echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã:"
echo "  docker tag image:tag $REGISTRY_SERVER:$REGISTRY_PORT/image:tag"
echo "  docker push $REGISTRY_SERVER:$REGISTRY_PORT/image:tag"
echo "  docker pull $REGISTRY_SERVER:$REGISTRY_PORT/image:tag"
echo ""
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
echo "  –û—Ç–∫—Ä–æ–π—Ç–µ http://$REGISTRY_SERVER:8080 –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞–º–∏"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
echo "  ssh aisha@$REGISTRY_SERVER 'sudo docker restart registry-server'"
echo "  ssh aisha@$REGISTRY_SERVER 'sudo docker logs registry-server'"

log_info "Registry –≥–æ—Ç–æ–≤! üöÄ" 