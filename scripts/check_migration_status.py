#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"""
import asyncio
import asyncpg
from app.core.config import settings


async def check_migration_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"""
    try:
        conn = await asyncpg.connect(
            user=settings.POSTGRES_USER,
            password=settings.POSTGRES_PASSWORD,
            host=settings.POSTGRES_HOST,
            port=settings.POSTGRES_PORT,
            database=settings.POSTGRES_DB
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ alembic_version
        exists = await conn.fetchval("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'alembic_version'
            )
        """)
        
        if exists:
            version = await conn.fetchval('SELECT version_num FROM alembic_version')
            print(f"‚úÖ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: {version}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ alembic_version –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã avatars –∏ –µ—ë —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        avatar_exists = await conn.fetchval("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'avatars'
            )
        """)
        
        if avatar_exists:
            columns = await conn.fetch("""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name = 'avatars' 
                ORDER BY ordinal_position
            """)
            print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã avatars ({len(columns)} –∫–æ–ª–æ–Ω–æ–∫):")
            for col in columns:
                print(f"  - {col['column_name']}: {col['data_type']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ avatar_type
            has_avatar_type = any(col['column_name'] == 'avatar_type' for col in columns)
            if has_avatar_type:
                print("\n‚úÖ –ö–æ–ª–æ–Ω–∫–∞ avatar_type –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
            else:
                print("\n‚ùå –ö–æ–ª–æ–Ω–∫–∞ avatar_type –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ avatars –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(check_migration_status()) 