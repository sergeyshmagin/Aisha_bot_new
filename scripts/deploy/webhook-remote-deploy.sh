#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è webhook —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ 192.168.0.10
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./scripts/deploy/webhook-remote-deploy.sh
#
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# 1. –°–æ–±–∏—Ä–∞–µ—Ç –∏ –ø—É—à–∏—Ç –æ–±—Ä–∞–∑—ã –≤ —Ä–µ–µ—Å—Ç—Ä 192.168.0.4:5000
# 2. –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä 192.168.0.10
# 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–µ—Å—Ç—Ä—É –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# 4. –ó–∞–ø—É—Å–∫–∞–µ—Ç webhook —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REGISTRY="192.168.0.4:5000"
PROD_SERVER="192.168.0.10"
PROD_USER="aisha"
WEBHOOK_IMAGE="${REGISTRY}/webhook-api:latest"
NGINX_IMAGE="${REGISTRY}/nginx-webhook:latest"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
if [ ! -f "docker-compose.webhook.prod.yml" ]; then
    log_error "docker-compose.webhook.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "prod.env" ]; then
    log_error "prod.env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log_info "üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ webhook —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ ${PROD_SERVER}..."

# ============================================================================
# 1. –°–±–æ—Ä–∫–∞ –∏ –ø—É—à –æ–±—Ä–∞–∑–æ–≤ –≤ —Ä–µ–µ—Å—Ç—Ä
# ============================================================================

log_info "üì¶ –°–æ–±–∏—Ä–∞—é webhook-api –æ–±—Ä–∞–∑..."
docker build -f docker/Dockerfile.webhook -t ${WEBHOOK_IMAGE} .
log_success "Webhook API –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"

log_info "üì¶ –°–æ–±–∏—Ä–∞—é nginx-webhook –æ–±—Ä–∞–∑..."
docker build -f docker/nginx/Dockerfile -t ${NGINX_IMAGE} docker/nginx/
log_success "Nginx –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"

log_info "‚¨ÜÔ∏è –ü—É—à—É –æ–±—Ä–∞–∑—ã –≤ —Ä–µ–µ—Å—Ç—Ä ${REGISTRY}..."
docker push ${WEBHOOK_IMAGE}
docker push ${NGINX_IMAGE}
log_success "–û–±—Ä–∞–∑—ã –∑–∞–ø—É—à–µ–Ω—ã –≤ —Ä–µ–µ—Å—Ç—Ä"

# ============================================================================
# 2. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä
# ============================================================================

log_info "üìÇ –ö–æ–ø–∏—Ä—É—é —Ñ–∞–π–ª—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä ${PROD_SERVER}..."

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è
ssh ${PROD_USER}@${PROD_SERVER} "mkdir -p ~/aisha-webhook-deploy"

# –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
scp docker-compose.webhook.prod.yml ${PROD_USER}@${PROD_SERVER}:~/aisha-webhook-deploy/
scp prod.env ${PROD_USER}@${PROD_SERVER}:~/aisha-webhook-deploy/

# –ö–æ–ø–∏—Ä—É–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -d "ssl_certificate" ]; then
    scp -r ssl_certificate/ ${PROD_USER}@${PROD_SERVER}:~/aisha-webhook-deploy/
    log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
fi

log_success "–§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä"

# ============================================================================
# 3. –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# ============================================================================

log_info "üöÄ –ó–∞–ø—É—Å–∫–∞—é —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."

ssh ${PROD_USER}@${PROD_SERVER} << 'EOF'
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–µ–ø–ª–æ—è
    cd ~/aisha-webhook-deploy
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ insecure registry –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ 192.168.0.4:5000
    if ! sudo test -f /etc/docker/daemon.json || ! sudo grep -q "192.168.0.4:5000" /etc/docker/daemon.json 2>/dev/null; then
        echo '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –¥–æ—Å—Ç—É–ø –∫ Docker —Ä–µ–µ—Å—Ç—Ä—É...'
        echo '{"insecure-registries": ["192.168.0.4:5000"]}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker
        sleep 10
        echo 'Docker –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω'
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ webhook –∫–ª–∞—Å—Ç–µ—Ä–∞
    if ! docker network ls | grep -q aisha_webhook_cluster; then
        docker network create aisha_webhook_cluster
        echo '–°–µ—Ç—å aisha_webhook_cluster —Å–æ–∑–¥–∞–Ω–∞'
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...'
    docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env down || true
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–≤–µ–∂–∏—Ö –æ–±—Ä–∞–∑–æ–≤
    echo '–ó–∞–≥—Ä—É–∂–∞—é —Å–≤–µ–∂–∏–µ –æ–±—Ä–∞–∑—ã...'
    docker pull 192.168.0.4:5000/webhook-api:latest
    docker pull 192.168.0.4:5000/nginx-webhook:latest
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo '–ó–∞–ø—É—Å–∫–∞—é webhook —Å–µ—Ä–≤–∏—Å—ã...'
    docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    echo '–û–∂–∏–¥–∞—é –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)...'
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    echo '–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:'
    docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env ps
EOF

# ============================================================================
# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è
# ============================================================================

log_info "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints
log_info "–ü—Ä–æ–≤–µ—Ä—è—é health endpoints..."

# –ß–µ—Ä–µ–∑ nginx load balancer
if ssh ${PROD_USER}@${PROD_SERVER} "curl -f -s http://localhost/health" > /dev/null; then
    log_success "‚úÖ Nginx load balancer —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_error "‚ùå Nginx load balancer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä—è–º—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
if ssh ${PROD_USER}@${PROD_SERVER} "curl -f -s http://localhost:8001/health" > /dev/null; then
    log_success "‚úÖ Webhook API #1 —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 8001)"
else
    log_error "‚ùå Webhook API #1 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8001)"
fi

if ssh ${PROD_USER}@${PROD_SERVER} "curl -f -s http://localhost:8002/health" > /dev/null; then
    log_success "‚úÖ Webhook API #2 —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 8002)"
else
    log_error "‚ùå Webhook API #2 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8002)"
fi

# –í–Ω–µ—à–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ aibots.kz
log_info "–ü—Ä–æ–≤–µ—Ä—è—é –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ aibots.kz..."
if curl -k -f -s https://aibots.kz:8443/health > /dev/null 2>&1; then
    log_success "‚úÖ Webhook API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://aibots.kz:8443"
else
    log_warning "‚ö†Ô∏è Webhook API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://aibots.kz:8443"
fi

# ============================================================================
# 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# ============================================================================

log_success "üéâ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ webhook —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
log_info "üìã –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ ${PROD_SERVER}:"
echo "   ‚Ä¢ Nginx Load Balancer: http://${PROD_SERVER} (–ø–æ—Ä—Ç—ã 80, 443)"
echo "   ‚Ä¢ Webhook API #1: http://${PROD_SERVER}:8001"
echo "   ‚Ä¢ Webhook API #2: http://${PROD_SERVER}:8002"
echo "   ‚Ä¢ –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: https://aibots.kz:8443"
echo ""
log_info "üîó FAL AI Webhook URL:"
echo "   https://aibots.kz:8443/api/v1/avatar/status_update"
echo ""
log_info "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   ssh ${PROD_USER}@${PROD_SERVER}"
echo "   cd ~/aisha-webhook-deploy"
echo "   docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env logs -f"
echo "   docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env restart"
echo "   docker-compose -f docker-compose.webhook.prod.yml --env-file prod.env down"
echo ""
log_success "‚ú® –ì–æ—Ç–æ–≤–æ! Webhook —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ." 