#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ webhook —Å–µ—Ä–≤–∏—Å–æ–≤
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./scripts/deploy/update-webhook-images.sh
#
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# 1. –°–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã webhook-api –∏ nginx-webhook 
# 2. –ü—É—à–∏—Ç –∏—Ö –≤ —Ä–µ–µ—Å—Ç—Ä
# 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å –Ω–æ–≤—ã–º–∏ –æ–±—Ä–∞–∑–∞–º–∏
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REGISTRY="192.168.0.4:5000"
WEBHOOK_IMAGE="${REGISTRY}/webhook-api:latest"
NGINX_IMAGE="${REGISTRY}/nginx-webhook:latest"
COMPOSE_FILE="docker-compose.webhook.prod.yml"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
if [ ! -f "docker-compose.webhook.prod.yml" ]; then
    log_error "docker-compose.webhook.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "prod.env" ]; then
    log_error "prod.env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log_info "üîÑ –û–±–Ω–æ–≤–ª—è—é webhook –æ–±—Ä–∞–∑—ã..."

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
log_info "üì¶ –°–æ–±–∏—Ä–∞—é –Ω–æ–≤—ã–π webhook-api –æ–±—Ä–∞–∑..."
docker build -f docker/Dockerfile.webhook -t ${WEBHOOK_IMAGE} .

log_info "üì¶ –°–æ–±–∏—Ä–∞—é –Ω–æ–≤—ã–π nginx-webhook –æ–±—Ä–∞–∑..."
docker build -f docker/nginx/Dockerfile -t ${NGINX_IMAGE} docker/nginx/

# –ü—É—à –≤ —Ä–µ–µ—Å—Ç—Ä
log_info "‚¨ÜÔ∏è –ü—É—à—É –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã..."
docker push ${WEBHOOK_IMAGE}
docker push ${NGINX_IMAGE}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "üîÑ –ü–æ–¥—Ç—è–≥–∏–≤–∞—é —Å–≤–µ–∂–∏–µ –æ–±—Ä–∞–∑—ã –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env pull
docker-compose -f ${COMPOSE_FILE} --env-file prod.env up -d --force-recreate

# –û–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
log_info "‚è≥ –û–∂–∏–¥–∞—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

log_info "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env ps

log_success "‚úÖ –û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
echo ""
log_info "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç:"
echo "   ‚Ä¢ curl -f http://localhost/health"
echo "   ‚Ä¢ curl -f http://localhost:8001/health"
echo "   ‚Ä¢ curl -f http://localhost:8002/health" 