#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è webhook —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./scripts/deploy/webhook-complete.sh
#
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# 1. –°–æ–±–∏—Ä–∞–µ—Ç –∏ –ø—É—à–∏—Ç –æ–±—Ä–∞–∑—ã webhook-api –∏ nginx-webhook 
# 2. –°–æ–∑–¥–∞—ë—Ç —Å–µ—Ç—å –¥–ª—è webhook –∫–ª–∞—Å—Ç–µ—Ä–∞
# 3. –ó–∞–ø—É—Å–∫–∞–µ—Ç webhook —Å–µ—Ä–≤–∏—Å—ã —á–µ—Ä–µ–∑ docker-compose
# ============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REGISTRY="192.168.0.4:5000"
WEBHOOK_IMAGE="${REGISTRY}/webhook-api:latest"
NGINX_IMAGE="${REGISTRY}/nginx-webhook:latest"
COMPOSE_FILE="docker-compose.webhook.prod.yml"
NETWORK_NAME="aisha_webhook_cluster"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "docker-compose.webhook.prod.yml" ]; then
    log_error "docker-compose.webhook.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ prod.env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "prod.env" ]; then
    log_error "prod.env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–æ –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏."
    exit 1
fi

log_info "üöÄ –ù–∞—á–∏–Ω–∞—é –¥–µ–ø–ª–æ–π webhook —Å–µ—Ä–≤–∏—Å–æ–≤..."

# ============================================================================
# 1. –°–±–æ—Ä–∫–∞ –∏ –ø—É—à –æ–±—Ä–∞–∑–æ–≤
# ============================================================================

log_info "üì¶ –°–æ–±–∏—Ä–∞—é webhook-api –æ–±—Ä–∞–∑..."
docker build -f docker/Dockerfile.webhook -t ${WEBHOOK_IMAGE} .
log_success "Webhook API –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"

log_info "üì¶ –°–æ–±–∏—Ä–∞—é nginx-webhook –æ–±—Ä–∞–∑..."
docker build -f docker/nginx/Dockerfile -t ${NGINX_IMAGE} docker/nginx/
log_success "Nginx –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"

log_info "‚¨ÜÔ∏è –ü—É—à—É –æ–±—Ä–∞–∑—ã –≤ —Ä–µ–µ—Å—Ç—Ä ${REGISTRY}..."
docker push ${WEBHOOK_IMAGE}
docker push ${NGINX_IMAGE}
log_success "–û–±—Ä–∞–∑—ã –∑–∞–ø—É—à–µ–Ω—ã –≤ —Ä–µ–µ—Å—Ç—Ä"

# ============================================================================
# 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏
# ============================================================================

log_info "üåê –°–æ–∑–¥–∞—é Docker —Å–µ—Ç—å –¥–ª—è webhook –∫–ª–∞—Å—Ç–µ—Ä–∞..."
if ! docker network ls | grep -q ${NETWORK_NAME}; then
    docker network create ${NETWORK_NAME}
    log_success "–°–µ—Ç—å ${NETWORK_NAME} —Å–æ–∑–¥–∞–Ω–∞"
else
    log_warning "–°–µ—Ç—å ${NETWORK_NAME} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# ============================================================================
# 3. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
# ============================================================================

log_info "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ webhook –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env down || true
log_success "–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# ============================================================================
# 4. –ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
# ============================================================================

log_info "üîÑ –ü–æ–¥—Ç—è–≥–∏–≤–∞—é —Å–≤–µ–∂–∏–µ –æ–±—Ä–∞–∑—ã..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env pull

log_info "üöÄ –ó–∞–ø—É—Å–∫–∞—é webhook —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env up -d

# ============================================================================
# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
# ============================================================================

log_info "‚è≥ –û–∂–∏–¥–∞—é –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

log_info "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f ${COMPOSE_FILE} --env-file prod.env ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook API endpoints
log_info "üîç –ü—Ä–æ–≤–µ—Ä—è—é webhook API endpoints..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ nginx load balancer
if curl -f -s http://localhost/health > /dev/null; then
    log_success "‚úÖ Nginx load balancer —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_error "‚ùå Nginx load balancer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ API
if curl -f -s http://localhost:8001/health > /dev/null; then
    log_success "‚úÖ Webhook API #1 —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 8001)"
else
    log_error "‚ùå Webhook API #1 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8001)"
fi

if curl -f -s http://localhost:8002/health > /dev/null; then
    log_success "‚úÖ Webhook API #2 —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 8002)"
else
    log_error "‚ùå Webhook API #2 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8002)"
fi

# ============================================================================
# 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# ============================================================================

log_success "üéâ –î–µ–ø–ª–æ–π webhook —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω!"
echo ""
log_info "üìã –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "   ‚Ä¢ Nginx Load Balancer: http://localhost (–ø–æ—Ä—Ç—ã 80, 443)"
echo "   ‚Ä¢ Webhook API #1: http://localhost:8001"
echo "   ‚Ä¢ Webhook API #2: http://localhost:8002"
echo "   ‚Ä¢ FAL AI Webhook URL: https://aibots.kz:8443/api/v1/avatar/status_update"
echo ""
log_info "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f ${COMPOSE_FILE} --env-file prod.env logs -f"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f ${COMPOSE_FILE} --env-file prod.env restart"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f ${COMPOSE_FILE} --env-file prod.env down"
echo "   ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ./scripts/deploy/webhook-complete.sh"
echo ""
log_success "‚ú® –ì–æ—Ç–æ–≤–æ! Webhook —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ." 