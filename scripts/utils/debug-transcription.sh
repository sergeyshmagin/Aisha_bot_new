#!/bin/bash

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–†–ê–ù–°–ö–†–ò–ë–ê–¶–ò–ò AISHA BOT
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –í–µ—Ä—Å–∏—è: 1.0
# –î–∞—Ç–∞: 2025-06-09
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

set -euo pipefail

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROD_SERVER="192.168.0.10"
PROD_USER="aisha"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_section() { echo -e "${CYAN}[===]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    log_section "ü§ñ –°–¢–ê–¢–£–° –û–°–ù–û–í–ù–û–ì–û –ë–û–¢–ê"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
        docker ps --filter "name=aisha-bot-polling-1" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
        
        echo
        echo "üíö Health —Å—Ç–∞—Ç—É—Å:"
        docker inspect aisha-bot-polling-1 --format="{{.State.Health.Status}}" 2>/dev/null || echo "No health check"
        
        echo
        echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:"
        docker logs aisha-bot-polling-1 --tail 10
    '
}

# –ü–æ–∏—Å–∫ –æ—à–∏–±–æ–∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
search_transcription_errors() {
    log_section "üîç –ü–û–ò–°–ö –û–®–ò–ë–û–ö –¢–†–ê–ù–°–ö–†–ò–ë–ê–¶–ò–ò"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üö® –û—à–∏–±–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–µ–π:"
        docker logs aisha-bot-polling-1 2>&1 | grep -i -E "(transcript|audio|voice|whisper|ERROR)" | tail -20 || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –≤ –ª–æ–≥–∞—Ö"
        
        echo
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:"
        docker logs aisha-bot-polling-1 2>&1 | grep -c "Update.*is handled" | tail -5 || echo "0"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ worker'–æ–≤
check_workers() {
    log_section "‚öôÔ∏è –ü–†–û–í–ï–†–ö–ê WORKER'–û–í"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üì¶ Worker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
        docker ps --filter "name=aisha-worker" --format "table {{.Names}}\t{{.Status}}"
        
        echo
        echo "üìù –õ–æ–≥–∏ worker-1:"
        docker logs aisha-worker-1 --tail 5 2>/dev/null || echo "Worker-1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis –æ—á–µ—Ä–µ–¥–µ–π
check_redis_queues() {
    log_section "üü• –ü–†–û–í–ï–†–ö–ê REDIS –û–ß–ï–†–ï–î–ï–ô"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üìä –û—á–µ—Ä–µ–¥–∏ Redis:"
        docker exec redis-prod redis-cli LLEN transcript_queue 2>/dev/null && echo "transcript_queue found" || echo "transcript_queue not found"
        docker exec redis-prod redis-cli LLEN audio_queue 2>/dev/null && echo "audio_queue found" || echo "audio_queue not found"
        
        echo
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π Redis:"
        docker exec redis-prod redis-cli KEYS "*transcript*" 2>/dev/null | head -5 || echo "–ù–µ—Ç –∫–ª—é—á–µ–π transcript"
        docker exec redis-prod redis-cli KEYS "*audio*" 2>/dev/null | head -5 || echo "–ù–µ—Ç –∫–ª—é—á–µ–π audio"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
check_handlers() {
    log_section "üéß –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üìù –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞—É–¥–∏–æ:"
        docker logs aisha-bot-polling-1 2>&1 | grep -i -E "(audio.*handler|transcript.*handler|voice.*message)" | tail -10 || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"
        
        echo
        echo "üîç –ü–æ–∏—Å–∫ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞:"
        docker logs aisha-bot-polling-1 2>&1 | grep -i -E "(import.*error|module.*not.*found)" | tail -5 || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env_vars() {
    log_section "üåç –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üîë –ö–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
        docker exec aisha-bot-polling-1 env | grep -E "(OPENAI|TELEGRAM|REDIS|POSTGRES|MINIO)" | head -10
        
        echo
        echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
        docker exec aisha-bot-polling-1 ls -la /app/storage/ 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /app/storage –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    '
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
check_external_services() {
    log_section "üåê –í–ù–ï–®–ù–ò–ï –°–ï–†–í–ò–°–´"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        echo "üêò PostgreSQL:"
        docker exec postgres-prod pg_isready -U aisha 2>/dev/null && echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤" || echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        
        echo
        echo "üü• Redis:"
        docker exec redis-prod redis-cli ping 2>/dev/null && echo "‚úÖ Redis –≥–æ—Ç–æ–≤" || echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        
        echo
        echo "üì¶ MinIO:"
        curl -s http://localhost:9000/minio/health/ready && echo "‚úÖ MinIO –≥–æ—Ç–æ–≤" || echo "‚ùå MinIO –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    '
}

# –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
test_voice_message() {
    log_section "üé§ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
    
    log_info "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞"
    echo "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ 30 —Å–µ–∫)"
    echo "3. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:"
    echo "   ssh aisha@192.168.0.10 'docker logs aisha-bot-polling-1 --follow'"
    echo "4. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–µ–π"
    echo ""
    log_warn "–ï—Å–ª–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "   - OpenAI API –∫–ª—é—á"
    echo "   - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π"
    echo "   - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
}

# –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º
problem_summary() {
    log_section "üìã –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê"
    
    ssh ${PROD_USER}@${PROD_SERVER} '
        # –ü–æ–¥—Å—á–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–±–ª–µ–º
        error_count=$(docker logs aisha-bot-polling-1 2>&1 | grep -c "ERROR" || echo 0)
        warning_count=$(docker logs aisha-bot-polling-1 2>&1 | grep -c "WARNING" || echo 0)
        handled_count=$(docker logs aisha-bot-polling-1 2>&1 | grep -c "is handled" || echo 0)
        
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é:"
        echo "   ‚Ä¢ –û—à–∏–±–∫–∏ (ERROR): $error_count"
        echo "   ‚Ä¢ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (WARNING): $warning_count" 
        echo "   ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: $handled_count"
        
        if [[ $error_count -gt 50 ]]; then
            echo "üö® –ö–†–ò–¢–ò–ß–ù–û: –ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ ($error_count)"
        elif [[ $error_count -gt 10 ]]; then
            echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –£–º–µ—Ä–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ ($error_count)"
        else
            echo "‚úÖ –•–û–†–û–®–û: –ú–∞–ª–æ –æ—à–∏–±–æ–∫ ($error_count)"
        fi
        
        if [[ $handled_count -gt 0 ]]; then
            echo "‚úÖ –•–û–†–û–®–û: –ë–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ($handled_count)"
        else
            echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
        fi
    '
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local mode="${1:-full}"
    
    log_info "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ Aisha Bot"
    log_info "üìç –°–µ—Ä–≤–µ—Ä: ${PROD_USER}@${PROD_SERVER}"
    log_info "üïí $(date)"
    echo
    
    case "$mode" in
        "status"|"s")
            check_bot_status
            ;;
        "errors"|"e")
            search_transcription_errors
            ;;
        "workers"|"w")
            check_workers
            ;;
        "redis"|"r")
            check_redis_queues
            ;;
        "handlers"|"h")
            check_handlers
            ;;
        "env")
            check_env_vars
            ;;
        "services")
            check_external_services
            ;;
        "test"|"t")
            test_voice_message
            ;;
        "summary"|"sum")
            problem_summary
            ;;
        "quick"|"q")
            check_bot_status
            echo
            search_transcription_errors
            echo
            problem_summary
            ;;
        "full"|*)
            check_bot_status
            echo
            search_transcription_errors
            echo
            check_workers
            echo
            check_redis_queues
            echo
            check_handlers
            echo
            check_env_vars
            echo
            check_external_services
            echo
            problem_summary
            echo
            test_voice_message
            ;;
    esac
    
    echo
    log_info "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –°–ø—Ä–∞–≤–∫–∞
if [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [—Ä–µ–∂–∏–º]"
    echo
    echo "–†–µ–∂–∏–º—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
    echo "  full, f        - –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  quick, q       - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  status, s      - –¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  errors, e      - –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏"
    echo "  workers, w     - –¢–æ–ª—å–∫–æ worker'—ã"
    echo "  redis, r       - –¢–æ–ª—å–∫–æ Redis –æ—á–µ—Ä–µ–¥–∏"
    echo "  handlers, h    - –¢–æ–ª—å–∫–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"
    echo "  env            - –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  services       - –¢–æ–ª—å–∫–æ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "  test, t        - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo "  summary, sum   - –¢–æ–ª—å–∫–æ —Å–≤–æ–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º"
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0              # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
    echo "  $0 quick        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  $0 errors       # –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏"
    exit 0
fi

# –ó–∞–ø—É—Å–∫
main "$@" 