#!/bin/bash

# ===============================================
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ DEV –±–æ—Ç–∞ Aisha
# ===============================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

log_info "üöÄ –ó–∞–ø—É—Å–∫ DEV –±–æ—Ç–∞ Aisha"
log_info "üìÅ –ü—Ä–æ–µ–∫—Ç: $PROJECT_ROOT"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_ROOT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ ! -d ".venv" ]]; then
    log_error "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .venv –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    log_info "üí° –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: python -m venv .venv"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [[ ! -f ".env" ]]; then
    log_error "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log_info "üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞: cp env.example .env"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
log_info "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source .venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
if [[ -z "$VIRTUAL_ENV" ]]; then
    log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ!"
    exit 1
fi

log_success "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: $VIRTUAL_ENV"

# –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å
log_info "üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
unset TELEGRAM_TOKEN
unset TELEGRAM_BOT_TOKEN
unset TELEGRAM_DEV_TOKEN

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –≤ .env
DEV_TOKEN=$(grep "^TELEGRAM_TOKEN=" .env | cut -d'=' -f2 | tr -d '"' | tr -d "'")
if [[ -z "$DEV_TOKEN" ]]; then
    log_error "‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!"
    exit 1
fi

# –ò–∑–≤–ª–µ–∫–∞–µ–º ID –±–æ—Ç–∞ –∏–∑ —Ç–æ–∫–µ–Ω–∞
BOT_ID=$(echo "$DEV_TOKEN" | cut -d':' -f1)
log_info "ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å ID: $BOT_ID"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ DEV —Ç–æ–∫–µ–Ω (–Ω–µ –ø—Ä–æ–¥–∞–∫—à–Ω)
if [[ "$BOT_ID" == "8063965284" ]]; then
    log_warning "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ü–†–û–î–ê–ö–®–ù —Ç–æ–∫–µ–Ω!"
    log_warning "‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—Ä–æ–¥–∞–∫—à–Ω –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "‚ùå –ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if ! python -c "
import asyncio
import sys
sys.path.append('.')
from app.database.connection import get_db_session

async def test_db():
    try:
        async with get_db_session() as session:
            await session.execute('SELECT 1')
        print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞')
        return True
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}')
        return False

result = asyncio.run(test_db())
sys.exit(0 if result else 1)
" 2>/dev/null; then
    log_success "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
    log_info "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DATABASE_URL –≤ .env"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
log_info "üöÄ –ó–∞–ø—É—Å–∫ DEV –±–æ—Ç–∞..."
log_info "üìã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo "=================================================="

# –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'log_info "üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."; exit 0' INT TERM

python -m app.main

log_success "‚úÖ DEV –±–æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω" 