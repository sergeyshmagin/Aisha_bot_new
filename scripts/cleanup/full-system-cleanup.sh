#!/bin/bash
# üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Aisha Backend
# –£–¥–∞–ª—è–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã –∏ –¥–∞–Ω–Ω—ã–µ

set -e

echo "üßπ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–£–Æ –û–ß–ò–°–¢–ö–£ –°–ò–°–¢–ï–ú–´ AISHA BACKEND"
echo "==============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
REGISTRY_HOST="192.168.0.4:5000"
PROD_HOST="192.168.0.10"
PROD_USER="aisha"

echo -e "${BLUE}üìä –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø${NC}"
echo "=============================="

# 1. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
echo -e "${YELLOW}1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä $PROD_HOST...${NC}"
ssh $PROD_USER@$PROD_HOST "
    echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:'
    df -h | grep -E '(Filesystem|/dev/)'
    echo ''
    echo '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:'
    docker ps -a --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'
    echo ''
    echo '–û–±—Ä–∞–∑—ã (—Ä–∞–∑–º–µ—Ä):'
    docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}'
"

echo ""
echo -e "${YELLOW}2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Registry $REGISTRY_HOST...${NC}"
echo "–û–±—Ä–∞–∑—ã –≤ registry:"
curl -s -X GET http://$REGISTRY_HOST/v2/_catalog | python -m json.tool

echo ""
echo -e "${RED}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–µ–π—á–∞—Å –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∞!${NC}"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 1
fi

echo ""
echo -e "${BLUE}üóÇÔ∏è –û–ß–ò–°–¢–ö–ê –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–†–ê${NC}"
echo "============================="

# 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
ssh $PROD_USER@$PROD_HOST "
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    docker stop 483e0fdabd1f_aisha-webhook-api-2 334630fa57ff_aisha-webhook-api-1 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã  
    docker container prune -f
    
    echo '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã'
"

# 3. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "${YELLOW}2. –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –æ–±—Ä–∞–∑—ã...${NC}"
ssh $PROD_USER@$PROD_HOST "
    # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–∑—ã —Å —Ç–µ–≥–æ–º <none>
    docker rmi \$(docker images -f 'dangling=true' -q) 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ final)
    docker rmi 192.168.0.4:5000/webhook-api:production-fixed 2>/dev/null || true
    docker rmi 192.168.0.4:5000/webhook-api:production 2>/dev/null || true
    docker rmi 192.168.0.4:5000/webhook-api:test 2>/dev/null || true
    docker rmi 192.168.0.4:5000/webhook-api:latest 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ aisha/bot –æ–±—Ä–∞–∑—ã
    docker rmi 192.168.0.4:5000/aisha/bot:prod-test 2>/dev/null || true
    docker rmi 192.168.0.4:5000/aisha/bot:temp-fix 2>/dev/null || true
    docker rmi aisha-bot:latest 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ webhook –æ–±—Ä–∞–∑—ã
    docker rmi 192.168.0.4:5000/aisha/webhook:latest 2>/dev/null || true
    docker rmi aisha-webhook:latest 2>/dev/null || true
    docker rmi aisha-nginx:latest 2>/dev/null || true
    docker rmi 192.168.0.4:5000/aisha/nginx:latest 2>/dev/null || true
    
    echo '–£–¥–∞–ª–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –æ–±—Ä–∞–∑—ã'
"

# 4. –û—á–∏—Å—Ç–∫–∞ Docker —Å–∏—Å—Ç–µ–º—ã
echo -e "${YELLOW}3. –û—á–∏—â–∞–µ–º Docker —Å–∏—Å—Ç–µ–º—É...${NC}"
ssh $PROD_USER@$PROD_HOST "
    # –û—á–∏—Å—Ç–∫–∞ build cache
    docker builder prune -f
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö volumes
    docker volume prune -f
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π
    docker network prune -f
    
    echo 'Docker —Å–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞'
"

echo ""
echo -e "${BLUE}üì¶ –û–ß–ò–°–¢–ö–ê DOCKER REGISTRY${NC}"
echo "========================="

# 5. –û—á–∏—Å—Ç–∫–∞ registry (—Ç–æ–ª—å–∫–æ –ø–æ–º–µ—á–∞–µ–º –∫ —É–¥–∞–ª–µ–Ω–∏—é)
echo -e "${YELLOW}–û—á–∏—Å—Ç–∫–∞ registry –ø–æ–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (—Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–π –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏)${NC}"
echo "–î–ª—è –æ—á–∏—Å—Ç–∫–∏ registry —Ç—Ä–µ–±—É–µ—Ç—Å—è:"
echo "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ registry"
echo "2. –ó–∞–ø—É—Å–∫ garbage collection"
echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ registry"

echo ""
echo -e "${BLUE}üìÅ –û–ß–ò–°–¢–ö–ê –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´${NC}"
echo "============================"

# 6. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo -e "${YELLOW}1. –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
rm -f docs/GALLERY_FIXES.md 2>/dev/null || true
echo "–£–¥–∞–ª–µ–Ω docs/GALLERY_FIXES.md"

# 7. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
echo -e "${YELLOW}2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è...${NC}"
echo "–°–∫—Ä–∏–ø—Ç—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:"
find scripts/ -name "*fix*" -o -name "*temp*" -o -name "*test*" | head -10

echo ""
echo -e "${GREEN}‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê${NC}"
echo "=================="

# 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "${YELLOW}–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã:${NC}"
ssh $PROD_USER@$PROD_HOST "
    echo '–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:'
    docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}'
    echo ''
    echo '–û—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–±—Ä–∞–∑—ã:'
    docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.Size}}'
    echo ''
    echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:'
    df -h | grep '/dev/'
"

echo ""
echo -e "${GREEN}üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:${NC}"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã: python scripts/test_webhook_system.py"
echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É webhook API"
echo "3. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ª–æ–≥–∏: docker logs webhook-api-1 -f"
echo "4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ - –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã"

echo ""
echo -e "${BLUE}üìã –°–¢–ê–¢–£–° –û–ß–ò–°–¢–ö–ò:${NC}"
echo "‚úÖ –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã"
echo "‚úÖ –°—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã –æ—á–∏—â–µ–Ω—ã"  
echo "‚úÖ Docker —Å–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞"
echo "‚úÖ Legacy —Ñ–∞–π–ª—ã api_server —É–¥–∞–ª–µ–Ω—ã"
echo "‚ö†Ô∏è Registry –æ—á–∏—Å—Ç–∫–∞ - —Ä—É—á–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞"
echo "‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ" 