#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã "–ê–≤–∞—Ç–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
"""

import asyncio
import sys
from pathlib import Path
from uuid import UUID

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app.core.database import get_session
from app.core.di import get_user_service, get_avatar_service
from sqlalchemy import select
from app.database.models import Avatar, User

async def debug_generation_issue():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã '–ê–≤–∞—Ç–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async with get_session() as session:
        user_query = select(User).limit(1)
        result = await session.execute(user_query)
        user = result.scalar_one_or_none()
        
        if not user:
            print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            return
            
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.telegram_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞–≤–∞—Ç–∞—Ä
    async with get_avatar_service() as avatar_service:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º get_main_avatar()...")
        main_avatar = await avatar_service.get_main_avatar(user.id)
        
        if main_avatar:
            print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∞–≤–∞—Ç–∞—Ä –Ω–∞–π–¥–µ–Ω: {main_avatar.name} (ID: {main_avatar.id})")
            print(f"   –°—Ç–∞—Ç—É—Å: {main_avatar.status}")
            print(f"   is_main: {main_avatar.is_main}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            print(f"   –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ == 'completed': {main_avatar.status == 'completed'}")
        else:
            print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∞–≤–∞—Ç–∞—Ä –ù–ï –ù–ê–ô–î–ï–ù!")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∞–≤–∞—Ç–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print("\nüîç –í—Å–µ –∞–≤–∞—Ç–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
            avatars = await avatar_service.get_user_avatars_with_photos(user.id)
            for i, avatar in enumerate(avatars):
                print(f"   {i+1}. {avatar.name} - —Å—Ç–∞—Ç—É—Å: {avatar.status}, is_main: {avatar.is_main}")
                
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
            completed_avatars = [a for a in avatars if a.status == "completed"]
            if completed_avatars:
                print(f"\nüîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {completed_avatars[0].name} –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π...")
                success = await avatar_service.set_main_avatar(user.id, completed_avatars[0].id)
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
                main_avatar = await avatar_service.get_main_avatar(user.id)
                if main_avatar:
                    print(f"‚úÖ –¢–µ–ø–µ—Ä—å –æ—Å–Ω–æ–≤–Ω–æ–π –∞–≤–∞—Ç–∞—Ä: {main_avatar.name}")
        
        print()
        print("üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ ID...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã
        avatars = await avatar_service.get_user_avatars_with_photos(user.id)
        completed_avatars = [a for a in avatars if a.status == "completed"]
        
        if completed_avatars:
            test_avatar = completed_avatars[0]
            print(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä: {test_avatar.name} (ID: {test_avatar.id})")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º get_avatar –ø–æ ID
            avatar_by_id = await avatar_service.get_avatar(test_avatar.id)
            if avatar_by_id:
                print(f"‚úÖ get_avatar({test_avatar.id}) —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"   –í–ª–∞–¥–µ–ª–µ—Ü —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {avatar_by_id.user_id == user.id}")
                print(f"   –°—Ç–∞—Ç—É—Å: {avatar_by_id.status}")
            else:
                print(f"‚ùå get_avatar({test_avatar.id}) –≤–µ—Ä–Ω—É–ª None!")
        
        print()
        print("üéâ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(debug_generation_issue()) 