#!/bin/bash

# ============================================================================
# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Aisha Bot
# –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: webhook –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω, bot - –ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# ============================================================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

case "${1:-help}" in
    "dev-start")
        echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        docker-compose -f docker-compose.bot.dev.yml up -d
        echo "‚úÖ Dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
        echo "üìä –°—Ç–∞—Ç—É—Å:"
        docker ps --format "table {{.Names}}\t{{.Status}}" | grep -E "(dev|worker-dev)"
        ;;
    "dev-stop")
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        docker-compose -f docker-compose.bot.dev.yml down
        echo "‚úÖ Dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    "dev-logs")
        echo "üìã –õ–æ–≥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
        docker-compose -f docker-compose.bot.dev.yml logs -f "${2:-aisha-bot-dev}"
        ;;
    "dev-rebuild")
        echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose -f docker-compose.bot.dev.yml down
        docker-compose -f docker-compose.bot.dev.yml build --no-cache
        docker-compose -f docker-compose.bot.dev.yml up -d
        echo "‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;
    "dev-test")
        echo "üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        docker-compose -f docker-compose.bot.dev.yml up -d
        sleep 15
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
        docker ps --format "table {{.Names}}\t{{.Status}}" | grep -E "(dev|worker-dev)"
        echo ""
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        docker logs aisha-bot-dev --tail 10
        ;;
    "deploy")
        echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ registry..."
        ./scripts/production/deploy-via-registry.sh
        ;;
    "webhook-status")
        echo "üìä –°—Ç–∞—Ç—É—Å webhook –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω..."
        ./scripts/production/manage-webhook.sh status
        ;;
    "webhook-logs")
        echo "üìã –õ–æ–≥–∏ webhook –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω..."
        ./scripts/production/manage-webhook.sh logs "${2:-all}"
        ;;
    "prod-status")
        echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞..."
        ssh aisha@192.168.0.10 "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Image}}'"
        ;;
    "prod-clean")
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –æ—Ç bot –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        ./scripts/production/manage-webhook.sh remove-bot
        ;;
    "transcription-test")
        echo "üéôÔ∏è –¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ (–ª–æ–∫–∞–ª—å–Ω–æ)..."
        if docker ps | grep -q "aisha-bot-dev"; then
            echo "‚úÖ Dev –±–æ—Ç –∑–∞–ø—É—â–µ–Ω"
            echo "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
            docker logs aisha-bot-dev --tail 20 -f
        else
            echo "‚ùå Dev –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 dev-start"
        fi
        ;;
    "build-push")
        echo "üì¶ –°–±–æ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ registry..."
        VERSION=$(date +%Y%m%d-%H%M%S)
        REGISTRY="192.168.0.4:5000"
        IMAGE="${REGISTRY}/aisha/bot:${VERSION}"
        LATEST="${REGISTRY}/aisha/bot:latest"
        
        echo "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
        docker build -f docker/Dockerfile.bot -t $IMAGE -t $LATEST .
        
        echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ registry..."
        docker push $IMAGE
        docker push $LATEST
        
        echo "‚úÖ –û–±—Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: $IMAGE"
        ;;
    "health-check")
        echo "üîç –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."
        echo ""
        echo "=== –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ==="
        if docker ps | grep -q "aisha-bot-dev"; then
            echo "‚úÖ Dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
            docker ps --format "table {{.Names}}\t{{.Status}}" | grep -E "(dev|worker-dev)"
        else
            echo "‚ùå Dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        fi
        
        echo ""
        echo "=== –ü—Ä–æ–¥–∞–∫—à–Ω webhook ==="
        ./scripts/production/manage-webhook.sh health
        
        echo ""
        echo "=== –í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã ==="
        echo "üîç PostgreSQL (192.168.0.4:5432)..."
        if nc -z 192.168.0.4 5432 2>/dev/null; then
            echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        echo "üîç Redis (192.168.0.3:6379)..."
        if nc -z 192.168.0.3 6379 2>/dev/null; then
            echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        echo "üîç MinIO (192.168.0.4:9000)..."
        if nc -z 192.168.0.4 9000 2>/dev/null; then
            echo "‚úÖ MinIO –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ùå MinIO –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        echo "üîç Registry (192.168.0.4:5000)..."
        if nc -z 192.168.0.4 5000 2>/dev/null; then
            echo "‚úÖ Registry –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ùå Registry –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        ;;
    *)
        echo -e "${CYAN}üöÄ –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Aisha Bot${NC}"
        echo ""
        echo -e "${GREEN}=== –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ===${NC}"
        echo "  dev-start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É"
        echo "  dev-stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É"
        echo "  dev-logs [srv]  - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (aisha-bot-dev –∏–ª–∏ aisha-worker-dev)"
        echo "  dev-rebuild     - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å"
        echo "  dev-test        - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "  transcription-test - –¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ —Å –ª–æ–≥–∞–º–∏"
        echo ""
        echo -e "${YELLOW}=== –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω ===${NC}"
        echo "  deploy          - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ registry"
        echo "  build-push      - –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ registry"
        echo ""
        echo -e "${BLUE}=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∫—à–Ω ===${NC}"
        echo "  webhook-status  - –°—Ç–∞—Ç—É—Å webhook —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  webhook-logs    - –õ–æ–≥–∏ webhook —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  prod-status     - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"
        echo "  prod-clean      - –£–¥–∞–ª–∏—Ç—å bot —Å –ø—Ä–æ–¥–∞–∫—à–Ω (–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ webhook)"
        echo ""
        echo -e "${RED}=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ===${NC}"
        echo "  health-check    - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"
        echo ""
        echo -e "${CYAN}–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:${NC}"
        echo "  $0 dev-start             # –ù–∞—á–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É"
        echo "  $0 transcription-test    # –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é"
        echo "  $0 deploy               # –ó–∞–¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"
        echo "  $0 webhook-status       # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å webhook"
        echo "  $0 health-check         # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
        echo ""
        echo -e "${YELLOW}üèóÔ∏è –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:${NC}"
        echo "  üìç –ü—Ä–æ–¥–∞–∫—à–Ω (192.168.0.10): —Ç–æ–ª—å–∫–æ webhook —Å–µ—Ä–≤–∏—Å—ã"
        echo "  üíª –õ–æ–∫–∞–ª—å–Ω–æ: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞"
        echo "  üì¶ Registry (192.168.0.4:5000): –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ Docker –æ–±—Ä–∞–∑—ã"
        ;;
esac 