#!/bin/bash

# üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Docker Registry –Ω–∞ 192.168.0.4
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞

set -euo pipefail

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REGISTRY_HOST="192.168.0.4"
REGISTRY_PORT="5000"
REGISTRY_DIR="/opt/docker-registry"
CERTS_DIR="$REGISTRY_DIR/certs"
CONFIG_DIR="$REGISTRY_DIR/config"

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [INFO] $1"
}

log_error() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [ERROR] $1" >&2
}

create_self_signed_cert() {
    log "üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    mkdir -p "$CERTS_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    cat > "$CERTS_DIR/registry.conf" << EOF
[req]
distinguished_name = req_distinguished_name
req_extensions = v3_req
prompt = no

[req_distinguished_name]
C=KZ
ST=Almaty
L=Almaty
O=Aisha Bot
OU=IT Department
CN=$REGISTRY_HOST

[v3_req]
keyUsage = keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
DNS.1 = $REGISTRY_HOST
DNS.2 = localhost
IP.1 = $REGISTRY_HOST
IP.2 = 127.0.0.1
EOF

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    openssl genrsa -out "$CERTS_DIR/registry.key" 4096
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    openssl req -new -key "$CERTS_DIR/registry.key" \
        -out "$CERTS_DIR/registry.csr" \
        -config "$CERTS_DIR/registry.conf"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    openssl x509 -req -days 365 \
        -in "$CERTS_DIR/registry.csr" \
        -signkey "$CERTS_DIR/registry.key" \
        -out "$CERTS_DIR/registry.crt" \
        -extensions v3_req \
        -extfile "$CERTS_DIR/registry.conf"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
    chmod 600 "$CERTS_DIR/registry.key"
    chmod 644 "$CERTS_DIR/registry.crt"
    
    log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω: $CERTS_DIR/registry.crt"
}

create_registry_config() {
    log "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Registry..."
    
    mkdir -p "$CONFIG_DIR"
    
    cat > "$CONFIG_DIR/config.yml" << EOF
version: 0.1
log:
  fields:
    service: registry
  level: info
storage:
  filesystem:
    rootdirectory: /var/lib/registry
  delete:
    enabled: true
http:
  addr: :5000
  tls:
    certificate: /certs/registry.crt
    key: /certs/registry.key
  debug:
    addr: :5001
    prometheus:
      enabled: true
      path: /metrics
  headers:
    X-Content-Type-Options: [nosniff]
    Access-Control-Allow-Origin: ['*']
    Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
    Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
health:
  storagedriver:
    enabled: true
    interval: 10s
    threshold: 3
EOF
    
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $CONFIG_DIR/config.yml"
}

create_docker_compose() {
    log "üê≥ –°–æ–∑–¥–∞–Ω–∏–µ docker-compose –¥–ª—è HTTPS Registry..."
    
    cat > "$REGISTRY_DIR/docker-compose.yml" << EOF
version: '3.8'

services:
  registry:
    image: registry:2.8.3
    container_name: docker-registry-https
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "5001:5001"  # Debug/metrics port
    volumes:
      - ./data:/var/lib/registry
      - ./certs:/certs:ro
      - ./config:/etc/docker/registry:ro
    environment:
      - REGISTRY_CONFIG_PATH=/etc/docker/registry/config.yml
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "-qO-", "https://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - registry-network

  # Web UI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è registry (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  registry-ui:
    image: joxit/docker-registry-ui:main
    container_name: registry-ui
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Aisha Bot Registry
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - NGINX_PROXY_PASS_URL=https://registry:5000
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    depends_on:
      - registry
    networks:
      - registry-network

networks:
  registry-network:
    driver: bridge
EOF
    
    log "‚úÖ Docker Compose —Å–æ–∑–¥–∞–Ω: $REGISTRY_DIR/docker-compose.yml"
}

setup_client_cert() {
    log "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    if [[ -f "/etc/docker/certs.d" ]]; then
        DOCKER_CERTS_DIR="/etc/docker/certs.d/$REGISTRY_HOST:$REGISTRY_PORT"
        sudo mkdir -p "$DOCKER_CERTS_DIR"
        sudo cp "$CERTS_DIR/registry.crt" "$DOCKER_CERTS_DIR/ca.crt"
        log "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Docker: $DOCKER_CERTS_DIR/ca.crt"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ö–æ—Å—Ç–æ–≤
    cat > "$REGISTRY_DIR/client-setup.sh" << EOF
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ Docker Registry

REGISTRY_HOST="$REGISTRY_HOST"
REGISTRY_PORT="$REGISTRY_PORT"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
sudo mkdir -p "/etc/docker/certs.d/\${REGISTRY_HOST}:\${REGISTRY_PORT}"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–∑–∞–≥—Ä—É–∑–∏—Ç–µ registry.crt –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ö–æ—Å—Ç)
sudo cp registry.crt "/etc/docker/certs.d/\${REGISTRY_HOST}:\${REGISTRY_PORT}/ca.crt"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker —Å–ª—É–∂–±—ã
sudo systemctl restart docker

echo "‚úÖ –ö–ª–∏–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è HTTPS Registry"
echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: docker push \${REGISTRY_HOST}:\${REGISTRY_PORT}/image:tag"
EOF
    
    chmod +x "$REGISTRY_DIR/client-setup.sh"
    log "‚úÖ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω: $REGISTRY_DIR/client-setup.sh"
}

deploy_registry() {
    log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ HTTPS Docker Registry..."
    
    cd "$REGISTRY_DIR"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π registry –µ—Å–ª–∏ –µ—Å—Ç—å
    docker-compose down 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π HTTPS registry
    docker-compose up -d
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 10
    if docker-compose ps | grep -q "Up"; then
        log "‚úÖ HTTPS Docker Registry –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        log "üåê Registry URL: https://$REGISTRY_HOST:$REGISTRY_PORT"
        log "üñ•Ô∏è  Web UI: http://$REGISTRY_HOST:8080"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Registry"
        docker-compose logs
        exit 1
    fi
}

show_usage_examples() {
    log "üìñ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTPS Registry:"
    cat << EOF

1. –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞:
   docker tag my-image:latest $REGISTRY_HOST:$REGISTRY_PORT/my-image:latest

2. Push –æ–±—Ä–∞–∑–∞:
   docker push $REGISTRY_HOST:$REGISTRY_PORT/my-image:latest

3. Pull –æ–±—Ä–∞–∑–∞:
   docker pull $REGISTRY_HOST:$REGISTRY_PORT/my-image:latest

4. –°–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:
   curl -k https://$REGISTRY_HOST:$REGISTRY_PORT/v2/_catalog

5. –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–≥–æ–≤:
   curl -k https://$REGISTRY_HOST:$REGISTRY_PORT/v2/my-image/tags/list

üìÅ –§–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:
   - –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $CERTS_DIR/registry.crt
   - –ö–ª—é—á: $CERTS_DIR/registry.key
   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $CONFIG_DIR/config.yml

üîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –¥—Ä—É–≥–∏—Ö —Ö–æ—Å—Ç–∞—Ö:
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ registry.crt –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ö–æ—Å—Ç
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $REGISTRY_DIR/client-setup.sh

EOF
}

main() {
    log "üîê –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É HTTPS Docker Registry –Ω–∞ $REGISTRY_HOST:$REGISTRY_PORT"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if [[ $EUID -eq 0 ]]; then
        log_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    sudo mkdir -p "$REGISTRY_DIR"
    sudo chown -R "$USER:$USER" "$REGISTRY_DIR"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    create_self_signed_cert
    create_registry_config  
    create_docker_compose
    setup_client_cert
    deploy_registry
    show_usage_examples
    
    log "üéâ HTTPS Docker Registry –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    log_error "‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç CA"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 