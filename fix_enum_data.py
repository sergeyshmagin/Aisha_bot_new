#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è enum –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ë–î
–ü—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ enum –∫ uppercase –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å SQLAlchemy
"""
import asyncio
import asyncpg
from typing import Dict, List

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î
DB_CONFIG = {
    'host': '192.168.0.4',
    'port': 5432,
    'user': 'aisha_user',
    'password': 'KbZZGJHX09KSH7r9ev4m',
    'database': 'aisha'
}


async def fix_enum_data():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ enum –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î"""
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ enum –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = await asyncpg.connect(**DB_CONFIG)
    
    try:
        # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatargender: male -> MALE, female -> FEMALE
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatargender...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        result = await conn.fetch("SELECT DISTINCT gender FROM avatars ORDER BY gender")
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è gender:", [row['gender'] for row in result])
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º lowercase –Ω–∞ uppercase
        updated_male = await conn.execute("""
            UPDATE avatars 
            SET gender = 'MALE' 
            WHERE gender = 'male'
        """)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ 'male' -> 'MALE': {updated_male}")
        
        updated_female = await conn.execute("""
            UPDATE avatars 
            SET gender = 'FEMALE' 
            WHERE gender = 'female'
        """)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ 'female' -> 'FEMALE': {updated_female}")
        
        # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatarstatus
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º avatarstatus...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        result = await conn.fetch("SELECT DISTINCT status FROM avatars ORDER BY status")
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è status:", [row['status'] for row in result])
        
        # –ú–∞–ø–∏–Ω–≥ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
        status_mapping = {
            'draft': 'DRAFT',
            'photos_uploading': 'PHOTOS_UPLOADING',
            'ready_for_training': 'READY_FOR_TRAINING', 
            'training': 'TRAINING',
            'completed': 'COMPLETED',
            'error': 'ERROR',
            'cancelled': 'CANCELLED'
        }
        
        for old_status, new_status in status_mapping.items():
            updated = await conn.execute(f"""
                UPDATE avatars 
                SET status = '{new_status}' 
                WHERE status = '{old_status}'
            """)
            if updated != "UPDATE 0":
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ '{old_status}' -> '{new_status}': {updated}")
        
        # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º generationstatus
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º generationstatus...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        result = await conn.fetch("SELECT DISTINCT status FROM image_generations ORDER BY status")
        print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è generation status:", [row['status'] for row in result])
        
        # –ú–∞–ø–∏–Ω–≥ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        gen_status_mapping = {
            'pending': 'PENDING',
            'processing': 'PROCESSING',
            'completed': 'COMPLETED',
            'failed': 'FAILED'
        }
        
        for old_status, new_status in gen_status_mapping.items():
            updated = await conn.execute(f"""
                UPDATE image_generations 
                SET status = '{new_status}' 
                WHERE status = '{old_status}'
            """)
            if updated != "UPDATE 0":
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ '{old_status}' -> '{new_status}': {updated}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
        
        # –ê–≤–∞—Ç–∞—Ä—ã
        avatar_genders = await conn.fetch("SELECT DISTINCT gender FROM avatars ORDER BY gender")
        avatar_statuses = await conn.fetch("SELECT DISTINCT status FROM avatars ORDER BY status")
        
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ gender:", [row['gender'] for row in avatar_genders])
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ avatar status:", [row['status'] for row in avatar_statuses])
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏
        gen_statuses = await conn.fetch("SELECT DISTINCT status FROM image_generations ORDER BY status")
        print("–§–∏–Ω–∞–ª—å–Ω—ã–µ generation status:", [row['status'] for row in gen_statuses])
        
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ enum –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        await conn.close()


if __name__ == "__main__":
    asyncio.run(fix_enum_data()) 